{"version":3,"sources":["webpack:///src/app/custom-elements/resource/resource.service.ts","webpack:///src/app/custom-elements/resource/resource-list.component.html","webpack:///src/app/custom-elements/resource/resource-list.component.ts","webpack:///src/app/custom-elements/resource/resource-list.module.ts"],"names":["resourcesPath","ResourceService","http","this","categories","getCategories","get","pipe","map","data","mkCategories","categoryJson","Object","keys","catKey","cat","id","makeId","title","order","subCategories","mkSubCategories","sort","compareCats","publishLast","connect","subCategoryJson","subKey","sub","resources","mkResources","resourceJson","resKey","res","category","subCategory","compareTitles","l","r","toUpperCase","toLowerCase","replace","ResourceListComponent","resourceService","locationService","search","subscribe","cats","selectCategory","selectedCategory","find","setSearch","ResourceListModule","customElementComponent"],"mappings":"4RASA,MAAMA,EAAgB,KAAqB,iBAGpC,Y,MAAMC,EAGX,YAAoBC,GAAA,KAAAA,OAClBC,KAAKC,WAAaD,KAAKE,gBAGjB,gBAEN,MAAMD,EAAaD,KAAKD,KAAKI,IAASN,GAAeO,MACnD,EAAAC,EAAA,GAAIC,IAAQC,OAUIC,EAVSF,EAWtBG,OAAOC,KAAKF,GAAcH,IAAIM,IACnC,MAAMC,EAAMJ,EAAaG,GACzB,MAAO,CACLE,GAAIC,EAAOH,GACXI,MAAOJ,EACPK,MAAOJ,EAAII,MACXC,cAAeC,EAAgBN,EAAIK,cAAeN,MAGrDQ,KAAKC,GAVR,IAAsBZ,KAThB,EAAAa,EAAA,MAIF,OADCpB,EAAiDqB,UAC3CrB,G,6CAfEH,GAAe,c,0BAAfA,EAAe,QAAfA,EAAe,Y,GAArB,GAkCP,SAASoB,EAAgBK,EAAsBZ,GAC7C,OAAOF,OAAOC,KAAKa,GAAiBlB,IAAImB,IACpC,MAAMC,EAAMF,EAAgBC,GAC5B,MAAO,CACLX,GAAIC,EAAOU,GACXT,MAAOS,EACPR,MAAOS,EAAIT,MACXU,UAAWC,EAAYF,EAAIC,UAAWF,EAAQb,MAGnDQ,KAAKC,GAIR,SAASO,EAAYC,EAAmBJ,EAAgBb,GACtD,OAAOF,OAAOC,KAAKkB,GAAcvB,IAAIwB,IACnC,MAAMC,EAAMF,EAAaC,GAIzB,OAHAC,EAAIC,SAAWpB,EACfmB,EAAIE,YAAcR,EAClBM,EAAIjB,GAAKC,EAAOe,GACTC,IAERX,KAAKc,GAGR,SAASb,EAAYc,EAA2BC,GAC9C,OAAOD,EAAElB,QAAUmB,EAAEnB,MAAQiB,EAAcC,EAAGC,GAAKD,EAAElB,MAAQmB,EAAEnB,MAAQ,GAAK,EAG9E,SAASiB,EAAcC,EAAoBC,GAC1C,OAAOD,EAAEnB,MAAMqB,cAAgBD,EAAEpB,MAAMqB,cAAgB,GAAK,EAG7D,SAAStB,EAAOC,GACd,OAAOA,EAAMsB,cAAcC,QAAQ,OAAQ,K,sDC9EzC,eAGE,0FAAqC,0FACO,SAAkB,Q,sCAH9D,8CAG4C,yB,yBAO5C,eACE,iBACE,eACE,iBAA4B,SAAsC,QAC9D,iBAA6B,SAAkB,QACnD,gBAAwD,SAA6C,QACjG,gBAAyD,UAAqC,QACpG,QACF,QACF,S,yBAPgE,mCAC9B,mCACK,wBACuB,uDACK,0C,yBAVrE,eACE,eACA,gBAA8B,SAAqB,QAEnD,wBAUF,S,yBAbK,sBAAAzB,IAC2B,wBAEJ,uCCFzB,Y,MAAM0B,EAKX,YACUC,EACAC,GADA,KAAAD,kBACA,KAAAC,kBAGV,WACE,MAAMV,EAAY/B,KAAKyC,gBAAgBC,SAASX,UAAY,GAG5D/B,KAAKwC,gBAAgBvC,WAAW0C,UAAUC,IACxC5C,KAAKC,WAAa2C,EAClB5C,KAAK6C,eAAed,KAIxB,eAAelB,GACbA,EAAKA,EAAGwB,cACRrC,KAAK8C,iBACH9C,KAAKC,WAAW8C,KAAKhB,GAAYA,EAASlB,GAAGwB,gBAAkBxB,IAAOb,KAAKC,WAAW,GACxFD,KAAKyC,gBAAgBO,UAAU,GAAI,CAACjB,SAAU/B,KAAK8C,iBAAiBjC,M,6CAxB3D0B,GAAqB,sB,wBAArBA,EAAqB,onBDXlC,iBACE,iBACE,qBAKF,QACA,iBACE,uBAeF,QACF,S,MAvB4B,uCAOK,2F,uCCE1B,GCCA,Q,MAAMU,EANb,cAOE,KAAAC,uBAAoCX,G,6CADzBU,I,wBAAAA,I,6BAFA,CAAEnD,GAAiB,SAHrB,CAAE,S,GAKN","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConnectableObservable, Observable } from 'rxjs';\nimport { map, publishLast } from 'rxjs/operators';\n\nimport { Category, Resource, SubCategory } from './resource.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nconst resourcesPath = CONTENT_URL_PREFIX + 'resources.json';\n\n@Injectable()\nexport class ResourceService {\n  categories: Observable<Category[]>;\n\n  constructor(private http: HttpClient) {\n    this.categories = this.getCategories();\n  }\n\n  private getCategories(): Observable<Category[]> {\n\n    const categories = this.http.get<any>(resourcesPath).pipe(\n      map(data => mkCategories(data)),\n      publishLast(),\n    );\n\n    (categories as ConnectableObservable<Category[]>).connect();\n    return categories;\n  }\n}\n\n// Extract sorted Category[] from resource JSON data\nfunction mkCategories(categoryJson: any): Category[] {\n  return Object.keys(categoryJson).map(catKey => {\n    const cat = categoryJson[catKey];\n    return {\n      id: makeId(catKey),\n      title: catKey,\n      order: cat.order,\n      subCategories: mkSubCategories(cat.subCategories, catKey)\n    } as Category;\n  })\n  .sort(compareCats);\n}\n\n// Extract sorted SubCategory[] from JSON category data\nfunction mkSubCategories(subCategoryJson: any, catKey: string): SubCategory[] {\n  return Object.keys(subCategoryJson).map(subKey => {\n      const sub = subCategoryJson[subKey];\n      return {\n        id: makeId(subKey),\n        title: subKey,\n        order: sub.order,\n        resources: mkResources(sub.resources, subKey, catKey)\n      } as SubCategory;\n  })\n  .sort(compareCats);\n}\n\n// Extract sorted Resource[] from JSON subcategory data\nfunction mkResources(resourceJson: any, subKey: string, catKey: string): Resource[] {\n  return Object.keys(resourceJson).map(resKey => {\n    const res = resourceJson[resKey];\n    res.category = catKey;\n    res.subCategory = subKey;\n    res.id = makeId(resKey);\n    return res as Resource;\n  })\n  .sort(compareTitles);\n}\n\nfunction compareCats(l: Category | SubCategory, r: Category | SubCategory) {\n  return l.order === r.order ? compareTitles(l, r) : l.order > r.order ? 1 : -1;\n}\n\nfunction compareTitles(l: {title: string}, r: {title: string}) {\n return l.title.toUpperCase() > r.title.toUpperCase() ? 1 : -1;\n}\n\nfunction makeId(title: string) {\n  return title.toLowerCase().replace(/\\s+/g, '-');\n}\n","<div class=\"center-layout\">\n  <div class=\"flex-center group-buttons\">\n    <a *ngFor=\"let category of categories\"\n      [class.selected]=\"category.id == selectedCategory.id\"\n      class=\"button mat-button filter-button\"\n      (click)=\"selectCategory(category.id)\"\n      (keyup.enter)=\"selectCategory(category.id)\">{{category.title}}</a>\n  </div>\n  <div class=\"showcase\">\n    <div *ngFor=\"let subCategory of selectedCategory?.subCategories\">\n      <a id=\"{{subCategory.id}}\"></a>\n      <h3 class=\"subcategory-title\">{{subCategory.title}}</h3>\n\n      <div *ngFor=\"let resource of subCategory.resources\">\n        <div class=\"resource-item\">\n          <a class=\"resource-row-link\" rel=\"noopener\" target=\"_blank\" [href]=\"resource.url\">\n            <h4 translation-result=\"on\">{{resource.titleCn || resource.title}}</h4>\n                <h4 translation-origin=\"off\">{{resource.title}}</h4>\n            <p translation-result=\"on\" class=\"resource-description\">{{resource.descCn || resource.desc || '無描述'}}</p>\n                <p translation-origin=\"off\" class=\"resource-description\">{{resource.desc || 'No Description'}}</p>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Category } from './resource.model';\nimport { ResourceService } from './resource.service';\nimport { LocationService } from 'app/shared/location.service';\n\n/* tslint:disable:template-accessibility-elements-content */\n@Component({\n  selector: 'aio-resource-list',\n  templateUrl: 'resource-list.component.html'\n})\nexport class ResourceListComponent implements OnInit {\n\n  categories: Category[];\n  selectedCategory: Category;\n\n  constructor(\n    private resourceService: ResourceService,\n    private locationService: LocationService) {\n  }\n\n  ngOnInit() {\n    const category =  this.locationService.search().category || '';\n    // Not using async pipe because cats appear twice in template\n    // No need to unsubscribe because categories observable completes.\n    this.resourceService.categories.subscribe(cats => {\n      this.categories = cats;\n      this.selectCategory(category);\n    });\n  }\n\n  selectCategory(id: string) {\n    id = id.toLowerCase();\n    this.selectedCategory =\n      this.categories.find(category => category.id.toLowerCase() === id) || this.categories[0];\n    this.locationService.setSearch('', {category: this.selectedCategory.id});\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResourceListComponent } from './resource-list.component';\nimport { ResourceService } from './resource.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ ResourceListComponent ],\n  entryComponents: [ ResourceListComponent ],\n  providers: [ ResourceService ]\n})\nexport class ResourceListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ResourceListComponent;\n}\n"]}