{"version":3,"mappings":"uQASA,MAAMA,EAAgBC,KAAqB,iBAGpC,IAAMC,EAAb,MAAM,QAGJC,YAAoBC,eAClBC,KAAKC,WAAaD,KAAKE,gBAGjBA,gBAEN,MAAMH,EAAaC,KAAKG,KAAKC,IAAST,GAAeU,QACnDC,KAAIC,GAUV,SAAsBC,GACpB,OAAOC,OAAOC,KAAKF,GAAcG,IAAIC,IACnC,MAAMb,EAAMS,EAAaI,GACzB,MAAO,CACLC,GAAIC,EAAOF,GACXG,MAAOH,EACPI,MAAOjB,EAAIiB,MACXC,cAAeC,EAAgBnB,EAAIkB,cAAeL,MAGrDO,KAAKC,GApBUC,CAAad,OACzBe,QAGD,SAAiDC,UAC3CxB,gDAfES,GAAegB,wCAAfhB,EAAeiB,QAAfjB,EAAe,YAAfA,GAAb,GAkCA,WAAyBA,EAAsBI,GAC7C,OAAOH,OAAOC,KAAKF,GAAiBG,IAAIZ,IACpC,MAAMQ,EAAMC,EAAgBT,GAC5B,MAAO,CACLc,GAAIC,EAAOf,GACXgB,MAAOhB,EACPiB,MAAOT,EAAIS,MACXU,UAAWC,EAAYpB,EAAImB,UAAW3B,EAAQa,MAGnDO,KAAKC,GAIR,WAAqBZ,EAAmBI,EAAgBb,GACtD,OAAOU,OAAOC,KAAKF,GAAcG,IAAIJ,IACnC,MAAMqB,EAAMpB,EAAaD,GACzB,SAAIsB,SAAW9B,EACf6B,EAAIE,YAAclB,EAClBgB,EAAIf,GAAKC,EAAOP,GACTqB,IAERT,KAAKY,GAGR,WAAqBvB,EAA2BI,GAC9C,OAAOJ,EAAEQ,QAAUJ,EAAEI,MAAQe,EAAcvB,EAAGI,GAAKJ,EAAEQ,MAAQJ,EAAEI,MAAQ,GAAI,EAG7E,WAAuBR,EAAoBI,GAC1C,OAAOJ,EAAEO,MAAMiB,cAAgBpB,EAAEG,MAAMiB,cAAgB,GAAI,EAG5D,WAAgBxB,GACd,OAAOA,EAAMyB,cAAcC,QAAQ,OAAQ,2DC9EzCV,oBAGEA,2DAASA,EAATW,MAASC,uBAA6BZ,SAAkBA,8CADxDA,8CACsCA,kDAKtCA,eACEA,iBACEA,eACEA,gBAA4BA,SAAsCA,QAC9DA,iBAA6BA,SAAkBA,QACnDA,gBAAwDA,SAA6CA,QACjGA,gBAAyDA,UAAqCA,QACpGA,QACFA,QACFA,kCAPgEA,mCAC9BA,mCACKA,wBACuBA,uDACKA,mEARrEA,eACEA,gBAAsDA,SAAqBA,QAC3EA,wBAUFA,kCAXgCA,0BAAwBA,wBAC5BA,uCCAzB,IAAMa,EAAb,MAAM,QAKJvC,YACUC,EACAQ,GADAP,uBACAA,uBAGVsC,WACE,MAAMvC,EAAYC,KAAKuC,gBAAgBC,SAASX,UAAY,GAG5D7B,KAAKyC,gBAAgBxC,WAAWyC,UAAUnC,IACxCP,KAAKC,WAAaM,EAClBP,KAAKoC,eAAerC,KAIxBqC,eAAerC,GACbA,EAAKA,EAAGkC,cACRjC,KAAK2C,iBACH3C,KAAKC,WAAW2C,KAAKrC,GAAYA,EAASM,GAAGoB,gBAAkBlC,IAAOC,KAAKC,WAAW,GACxFD,KAAKuC,gBAAgBM,UAAU,GAAI,CAAChB,SAAU7B,KAAK2C,iBAAiB9B,mDAxB3DL,GAAqBgB,8CAArBhB,EAAqBsC,slBDVlCtB,iBACEA,iBACEA,0BAIFA,QACAA,iBACEA,uBAaFA,QACFA,eApBiCA,uCAMAA,+HCEpBhB,GAAb,GCEauC,EAAb,MAAM,QANNjD,cAOEE,4BAAoCqC,gDADzB7B,6DAFA,CAAEX,GAAiBmD,SAHrB,CAAEC,SAKAzC,GAAb","names":["h","C","l","constructor","t","this","categories","getCategories","http","get","pipe","d","s","o","Object","keys","map","r","id","i","title","order","subCategories","Z","sort","g","v","m","connect","e","factory","resources","L","n","category","subCategory","p","toUpperCase","toLowerCase","replace","oxw","selectCategory","R","ngOnInit","locationService","search","resourceService","subscribe","selectedCategory","find","setSearch","selectors","F","imports","a"],"sources":["./src/app/custom-elements/resource/resource.service.ts","./src/app/custom-elements/resource/resource-list.component.html","./src/app/custom-elements/resource/resource-list.component.ts","./src/app/custom-elements/resource/resource-list.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConnectableObservable, Observable } from 'rxjs';\nimport { map, publishLast } from 'rxjs/operators';\n\nimport { Category, Resource, SubCategory } from './resource.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nconst resourcesPath = CONTENT_URL_PREFIX + 'resources.json';\n\n@Injectable()\nexport class ResourceService {\n  categories: Observable<Category[]>;\n\n  constructor(private http: HttpClient) {\n    this.categories = this.getCategories();\n  }\n\n  private getCategories(): Observable<Category[]> {\n\n    const categories = this.http.get<any>(resourcesPath).pipe(\n      map(data => mkCategories(data)),\n      publishLast(),\n    );\n\n    (categories as ConnectableObservable<Category[]>).connect();\n    return categories;\n  }\n}\n\n// Extract sorted Category[] from resource JSON data\nfunction mkCategories(categoryJson: any): Category[] {\n  return Object.keys(categoryJson).map(catKey => {\n    const cat = categoryJson[catKey];\n    return {\n      id: makeId(catKey),\n      title: catKey,\n      order: cat.order,\n      subCategories: mkSubCategories(cat.subCategories, catKey)\n    } as Category;\n  })\n  .sort(compareCats);\n}\n\n// Extract sorted SubCategory[] from JSON category data\nfunction mkSubCategories(subCategoryJson: any, catKey: string): SubCategory[] {\n  return Object.keys(subCategoryJson).map(subKey => {\n      const sub = subCategoryJson[subKey];\n      return {\n        id: makeId(subKey),\n        title: subKey,\n        order: sub.order,\n        resources: mkResources(sub.resources, subKey, catKey)\n      } as SubCategory;\n  })\n  .sort(compareCats);\n}\n\n// Extract sorted Resource[] from JSON subcategory data\nfunction mkResources(resourceJson: any, subKey: string, catKey: string): Resource[] {\n  return Object.keys(resourceJson).map(resKey => {\n    const res = resourceJson[resKey];\n    res.category = catKey;\n    res.subCategory = subKey;\n    res.id = makeId(resKey);\n    return res as Resource;\n  })\n  .sort(compareTitles);\n}\n\nfunction compareCats(l: Category | SubCategory, r: Category | SubCategory) {\n  return l.order === r.order ? compareTitles(l, r) : l.order > r.order ? 1 : -1;\n}\n\nfunction compareTitles(l: {title: string}, r: {title: string}) {\n return l.title.toUpperCase() > r.title.toUpperCase() ? 1 : -1;\n}\n\nfunction makeId(title: string) {\n  return title.toLowerCase().replace(/\\s+/g, '-');\n}\n","<div class=\"center-layout\">\n  <div class=\"flex-center group-buttons\">\n    <button *ngFor=\"let category of categories\"\n      class=\"button mat-button filter-button\"\n      [class.selected]=\"category.id == selectedCategory.id\"\n      (click)=\"selectCategory(category.id)\">{{category.title}}</button>\n  </div>\n  <div class=\"showcase\">\n    <div *ngFor=\"let subCategory of selectedCategory?.subCategories\">\n      <h3 class=\"subcategory-title\" id=\"{{subCategory.id}}\">{{subCategory.title}}</h3>\n      <div *ngFor=\"let resource of subCategory.resources\">\n        <div class=\"resource-item\">\n          <a class=\"resource-row-link\" rel=\"noopener\" target=\"_blank\" [href]=\"resource.url\">\n            <h4 translation-result=\"on\">{{resource.titleCn || resource.title}}</h4>\n                <h4 translation-origin=\"off\">{{resource.title}}</h4>\n            <p translation-result=\"on\" class=\"resource-description\">{{resource.descCn || resource.desc || '無描述'}}</p>\n                <p translation-origin=\"off\" class=\"resource-description\">{{resource.desc || 'No Description'}}</p>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Category } from './resource.model';\nimport { ResourceService } from './resource.service';\nimport { LocationService } from 'app/shared/location.service';\n\n@Component({\n  selector: 'aio-resource-list',\n  templateUrl: 'resource-list.component.html'\n})\nexport class ResourceListComponent implements OnInit {\n\n  categories: Category[];\n  selectedCategory: Category;\n\n  constructor(\n    private resourceService: ResourceService,\n    private locationService: LocationService) {\n  }\n\n  ngOnInit() {\n    const category =  this.locationService.search().category || '';\n    // Not using async pipe because cats appear twice in template\n    // No need to unsubscribe because categories observable completes.\n    this.resourceService.categories.subscribe(cats => {\n      this.categories = cats;\n      this.selectCategory(category);\n    });\n  }\n\n  selectCategory(id: string) {\n    id = id.toLowerCase();\n    this.selectedCategory =\n      this.categories.find(category => category.id.toLowerCase() === id) || this.categories[0];\n    this.locationService.setSearch('', {category: this.selectedCategory.id});\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResourceListComponent } from './resource-list.component';\nimport { ResourceService } from './resource.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ ResourceListComponent ],\n  entryComponents: [ ResourceListComponent ],\n  providers: [ ResourceService ]\n})\nexport class ResourceListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ResourceListComponent;\n}\n"],"sourceRoot":"webpack:///","file":"src_app_custom-elements_resource_resource-list_module_ts.ccb9a12e88964802.js"}