{"version":3,"file":"src_app_search_search_worker_ts.d203948d405c0a5a.js","mappings":"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BK,EAAMzB,GACE8B,KAFRT,EAAOW,EAAG,GAAKA,EAAG,MAGhBZ,EAAIC,KAKRG,EAAKR,GACEc,KAAKV,KACNY,EAAKR,EAAGS,KAAKb,GAGjBK,EAAMxB,EACNyB,EAAMR,IAFNM,EAAKxB,GAGE8B,KAJPT,EAAOW,EAAG,KAIYP,EAAIK,KAAKT,KAAWK,EAAII,KAAKT,MACjDD,EAAIC,IAKRI,EAAMzB,GADNwB,EAAKP,GAEEa,KAAKV,IAAMK,EAAIK,KAAKV,KAEzBA,EAAIA,EAAEW,QADNP,EAAKjB,EACY,KAKJ,KAAXgB,IACFH,EAAIG,EAAQ7H,cAAgB0H,EAAEQ,OAAO,IAGhCR,CACT,EAEA,OAAO,SAAUnF,GACf,OAAOA,EAAM5C,OAAO8H,EACtB,CACF,CA1MgB,GA4MhBrM,EAAKwF,SAASG,iBAAiB3F,EAAKQ,QAAS,WAmB7CR,EAAKoN,uBAAyB,SAAUC,GACtC,IAAIC,EAAQD,EAAUE,OAAO,SAAUzG,EAAM0G,GAC3C1G,SAAK0G,GAAYA,EACV1G,CACT,EAAG,CAAC,GAEJ,OAAO,SAAUK,GACf,GAAIA,GAASmG,EAAMnG,EAAM/F,cAAgB+F,EAAM/F,WAAY,OAAO+F,CACpE,CACF,EAeAnH,EAAKO,eAAiBP,EAAKoN,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA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","names":["global","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","call","build","version","utils","warn","this","message","console","asString","obj","toString","clone","Object","create","keys","i","length","key","val","Array","isArray","slice","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","s","n","indexOf","fieldRef","prototype","undefined","Set","elements","complete","intersect","other","union","contains","empty","object","a","b","intersection","element","push","concat","idf","posting","documentCount","documentsWithTerm","Math","log","abs","Token","str","metadata","update","fn","tokenizer","map","t","toLowerCase","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","match","separator","tokenMetadata","position","index","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","result","k","runString","token","reset","toJSON","Vector","_magnitude","positionForIndex","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","step2list","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","step3list","icate","ative","alize","iciti","ical","ful","ness","v","C","c","re_mgr0","RegExp","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","fieldVector","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","name","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","define","__WEBPACK_AMD_DEFINE_FACTORY__","__webpack_module_cache__","exports","module","termMap","生命","週期","鉤子","依賴","注入","注入器","令牌","提供者","服務","模組","元件","指令","範本","元資料","裝飾器","函式","工廠","管道","路由","路由器","預先","編譯","編譯器","預先編譯","元素","註解","應用外殼","建築師","屬性","繫結","引導","建構器","大小寫型別","變更檢測","類","欄位","集合","命令列","內容","投影","自訂","資料","可宣告物件","裝飾","領域特定語言","動態","載入","急性","緊急","入口點","表單","控制項","模型","驗證","不可變性","可注入物件","輸入","插值","即時編譯","惰性","懶","庫","生命週期","套件","可觀察物件","觀察者","輸出屬性","平台","Polyfill","專案","響應式","解析器","守衛","出口","規則","原理圖","範圍化","渲染","呈現","獨立","結構型","訂閱者","目標","驅動","表示式","參考","變數","轉譯","目錄樹","配置","單向","雙向","檢視","檢視樹","多層","分層","多級","層次化","工作區","區域","封裝","錯誤","事件","例外","測試","表現","單例","搭建","建立","部署","建構","架構","互動","樣式","風格","內建","內建","組合","變更","更改","變化","覆蓋率","場景","國際化","無障礙","可及性","本地化","語言環境","翻譯","動畫","觸發器","轉場","複用","安全","瀏覽器","命令","特性","選擇器","選擇","流","存取","值","活動","活躍","指令碼","pageMap","queryIndex","queryAll","toEnglishTerm","entries","key1","key2","localeCompare","chineseTerm","englishTerm","titleQuery","split","hit","e","error","addEventListener","handleMessage","data","payload","makeRequest","url","callback","searchDataRequest","XMLHttpRequest","onload","JSON","responseText","open","send","encodedPages","createIndex","loadIndexFn","queryLexer","loadIndex","dictionary","pages","dictionaryArray","indexBuilder","encodedPage","page","decodePage","headings","keywords","members","path","postMessage"],"sourceRoot":"webpack:///","sources":["./node_modules/lunr/lunr.js","webpack/bootstrap","./src/app/search/to-english-term.ts","./src/app/search/search.worker.ts"],"sourcesContent":["/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export function toEnglishTerm(query: string): string {\n  // 倒序排列，以便優先替換更長的詞語\n  const terms = Object.entries(termMap).sort(([key1], [key2]) => -key1.localeCompare(key2));\n  const englishQuery = terms.reduce((result, [chineseTerm, englishTerm]) =>\n    result.replace(new RegExp(chineseTerm, 'g'), `${englishTerm} `), query);\n  return englishQuery.replace(/[^\\w\\s]/g, ' ');\n}\n\nconst termMap: { [key: string]: string } = {\n  生命: 'life',\n  週期: 'cycle',\n  鉤子: 'hook',\n  依賴: 'dependency',\n  注入: 'inject',\n  注入器: 'injector',\n  令牌: 'token',\n  提供者: 'provider',\n  服務: 'service',\n  模組: 'module',\n  元件: 'component',\n  指令: 'directive',\n  範本: 'template',\n  元資料: 'metadata',\n  裝飾器: 'decorator',\n  函式: 'function',\n  工廠: 'factory',\n  管道: 'pipe',\n  路由: 'route',\n  路由器: 'router',\n  預先: 'aot',\n  編譯: 'compile',\n  編譯器: 'compiler',\n  預先編譯: 'aot compile',\n  元素: 'element',\n  註解: 'annotation',\n  應用外殼: 'app-shell',\n  建築師: 'architect',\n  屬性: 'propert',\n  繫結: 'binding',\n  引導: 'bootstrap',\n  建構器: 'builder',\n  大小寫型別: 'case types',\n  變更檢測: 'change detection',\n  類: 'class',\n  欄位: 'field',\n  集合: 'collection',\n  命令列: 'cli',\n  內容: 'content',\n  投影: 'projection',\n  自訂: 'custom',\n  資料: 'data',\n  可宣告物件: 'declarable',\n  裝飾: 'decorat',\n  領域特定語言: 'dsl',\n  動態: 'dynamic',\n  載入: 'load',\n  急性: 'eager',\n  緊急: 'eager',\n  入口點: 'entry point',\n  表單: 'form',\n  控制項: 'control',\n  模型: 'model',\n  驗證: 'validation',\n  不可變性: 'immutability',\n  可注入物件: 'injectable',\n  輸入: 'input',\n  插值: 'interpolation',\n  即時編譯: 'jit',\n  惰性: 'lazy',\n  懶: 'lazy',\n  庫: 'library',\n  生命週期: 'lifecycle',\n  包: 'package',\n  可觀察物件: 'observable',\n  觀察者: 'observer',\n  輸出屬性: 'output',\n  平台: 'platform',\n  Polyfill: 'polyfill',\n  專案: 'project',\n  響應式: 'reactive',\n  解析器: 'resolver',\n  守衛: 'guard',\n  出口: 'outlet',\n  規則: 'rule',\n  原理圖: 'schematic',\n  範圍化: 'scoped',\n  渲染: 'render',\n  呈現: 'render',\n  獨立: 'standalone',\n  結構型: 'structural',\n  訂閱者: 'subscriber',\n  目標: 'target',\n  驅動: 'driven',\n  表示式: 'expression',\n  參考: 'reference',\n  變數: 'variable',\n  轉譯: 'transpile',\n  目錄樹: 'tree',\n  配置: 'config',\n  單向: 'uni',\n  雙向: 'bidi',\n  檢視: 'view',\n  檢視樹: 'view hierarchy',\n  多層: 'hierarchy',\n  分層: 'hierarchy',\n  多級: 'hierarchy',\n  層次化: 'hierarchy',\n  工作區: 'workspace',\n  區域: 'zone',\n  封裝: 'encapsulation',\n  錯誤: 'error',\n  事件: 'event',\n  例外: 'exception',\n  測試: 'test',\n  表現: 'presentation',\n  單例: 'singleton',\n  搭建: 'setup',\n  建立: 'setup',\n  部署: 'deploy',\n  建構: 'build',\n  架構: 'architecture',\n  互動: 'interact',\n  樣式: 'style',\n  風格: 'style',\n  內建: 'built',\n  內建: 'built',\n  組合: 'composition',\n  變更: 'change',\n  更改: 'change',\n  變化: 'change',\n  覆蓋率: 'coverage',\n  場景: 'scenario',\n  國際化: 'i18n',\n  無障礙: 'accessibility',\n  可及性: 'accessibility',\n  本地化: 'localiz',\n  語言環境: 'locale',\n  翻譯: 'translat',\n  動畫: 'animation',\n  觸發器: 'trigger',\n  轉場: 'transition',\n  複用: 'reus',\n  安全: 'security',\n  瀏覽器: 'browser',\n  命令: 'command',\n  特性: 'feature',\n  選擇器: 'selector',\n  選擇: 'select',\n  流: 'observable',\n  存取: 'access',\n  值: 'value',\n  活動: 'active',\n  活躍: 'active',\n  指令碼: 'script',\n};\n","/// <reference lib=\"webworker\" />\nimport * as lunr from 'lunr';\n\nimport {WebWorkerMessage} from '../shared/web-worker-message';\nimport {toEnglishTerm} from './to-english-term';\n\nconst SEARCH_TERMS_URL = '/generated/docs/app/search-data.json';\nlet index: lunr.Index;\nconst pageMap: SearchInfo = {};\n\ninterface SearchInfo {\n  [key: string]: PageInfo;\n}\n\ninterface PageInfo {\n  path: string;\n  type: string;\n  title: string;\n  headings: string;\n  keywords: string;\n  members: string;\n  topics: string;\n}\n\ninterface EncodedPages {\n  dictionary: string;\n  pages: EncodedPage[];\n}\n\ninterface EncodedPage {\n  path: string;\n  type: string;\n  title: string;\n  headings: number[];\n  keywords: number[];\n  members: number[];\n  topics: string;\n}\n\naddEventListener('message', handleMessage);\n\n// Create the lunr index - the docs should be an array of objects, each object containing\n// the path and search terms for a page\nfunction createIndex(loadIndexFn: IndexLoader): lunr.Index {\n  // The lunr typings are missing QueryLexer so we have to add them here manually.\n  const queryLexer = (lunr as any as {QueryLexer: {termSeparator: RegExp}}).QueryLexer;\n  queryLexer.termSeparator = lunr.tokenizer.separator = /\\s+/;\n  return lunr(function() {\n    this.pipeline.remove(lunr.stemmer);\n    this.ref('path');\n    this.field('topics', {boost: 15});\n    this.field('title', {boost: 10});\n    this.field('headings', {boost: 5});\n    this.field('members', {boost: 4});\n    this.field('keywords', {boost: 2});\n    loadIndexFn(this);\n  });\n}\n\n// The worker receives a message to load the index and to query the index\nfunction handleMessage(message: {data: WebWorkerMessage}): void {\n  const type = message.data.type;\n  const id = message.data.id;\n  const payload = message.data.payload;\n  switch (type) {\n    case 'load-index':\n      makeRequest(SEARCH_TERMS_URL, (encodedPages: EncodedPages) => {\n        index = createIndex(loadIndex(encodedPages));\n        postMessage({type, id, payload: true});\n      });\n      break;\n    case 'query-index':\n      postMessage({type, id, payload: {query: payload, results: queryIndex(payload)}});\n      break;\n    default:\n      postMessage({type, id, payload: {error: 'invalid message type'}});\n  }\n}\n\n// Use XHR to make a request to the server\nfunction makeRequest(url: string, callback: (response: any) => void): void {\n  // The JSON file that is loaded should be an array of PageInfo:\n  const searchDataRequest = new XMLHttpRequest();\n  searchDataRequest.onload = function() {\n    callback(JSON.parse(this.responseText));\n  };\n  searchDataRequest.open('GET', url);\n  searchDataRequest.send();\n}\n\n\n// Create the search index from the searchInfo which contains the information about each page to be\n// indexed\nfunction loadIndex({dictionary, pages}: EncodedPages): IndexLoader {\n  const dictionaryArray = dictionary.split(' ');\n  return (indexBuilder: lunr.Builder) => {\n    // Store the pages data to be used in mapping query results back to pages\n    // Add search terms from each page to the search index\n    pages.forEach(encodedPage => {\n      const page = decodePage(encodedPage, dictionaryArray);\n      indexBuilder.add(page);\n      pageMap[page.path] = page;\n    });\n  };\n}\n\nfunction decodePage(encodedPage: EncodedPage, dictionary: string[]): PageInfo {\n  return {\n    ...encodedPage,\n    headings: encodedPage.headings?.map(i => dictionary[i]).join(' ') ?? '',\n    keywords: encodedPage.keywords?.map(i => dictionary[i]).join(' ') ?? '',\n    members: encodedPage.members?.map(i => dictionary[i]).join(' ') ?? '',\n  };\n}\n\n// Query the index and return the processed results\nfunction queryIndex(query: string): PageInfo[] {\n  // Strip off quotes\n  query = query.replace(/^[\"']|['\"]$/g, '');\n  try {\n    if (query.length) {\n      // 把中文關鍵字翻譯成英文的\n      query = toEnglishTerm(query);\n      // First try a query where every term must be present\n      // (see https://lunrjs.com/guides/searching.html#term-presence)\n      const queryAll = query.replace(/\\S+/g, '+$&');\n      let results = index.search(queryAll);\n\n      // If that was too restrictive just query for any term to be present\n      if (results.length === 0) {\n        results = index.search(query);\n      }\n\n      // If that is still too restrictive then search in the title for the first word in the query\n      if (results.length === 0) {\n        // E.g. if the search is \"ngCont guide\" then we search for \"ngCont guide title:*ngCont*\"\n        const titleQuery = 'title:*' + query.split(' ', 1)[0] + '*';\n        results = index.search(query + ' ' + titleQuery);\n      }\n\n      // Map the hits into info about each page to be returned as results\n      return results.map(hit => pageMap[hit.ref]);\n    }\n  } catch (e) {\n    // If the search query cannot be parsed the index throws an error\n    // Log it and recover\n    console.error(e);\n  }\n  return [];\n}\n\ntype IndexLoader = (indexBuilder: lunr.Builder) => void;\n"],"x_google_ignoreList":[0,1]}