{"id":"start/start-routing","title":"Adding navigation","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/start/start-routing.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"adding-navigation\" translation-result=\"on\">新增導航<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#adding-navigation\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Adding navigation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#adding-navigation\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本指南基於入門課程的第一步：<a href=\"start\" title=\"開始使用基本的 Angular 應用\">基本 Angular 應用入門</a>。</p><p translation-origin=\"off\">This guide builds on the first step of the Getting Started tutorial, <a href=\"start\" title=\"Get started with a basic Angular app\">Get started with a basic Angular app</a>.</p>\n\n<p translation-result=\"on\">在此階段，本線上商店應用會擁有基本的產品目錄。</p><p translation-origin=\"off\">At this stage of development, the online store application has a basic product catalog.</p>\n\n<p translation-result=\"on\">在以下各節中，你將嚮應用新增以下功能：</p><p translation-origin=\"off\">In the following sections, you'll add the following features to the application:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">在位址列中鍵入 URL 以導航到相應的產品頁面</p><p translation-origin=\"off\">Type a URL in the address bar to navigate to a corresponding product page</p>\n\n</li>\n<li>\n<p translation-result=\"on\">單擊頁面上的連結以在單頁應用中導航</p><p translation-origin=\"off\">Click links on the page to navigate within your single-page application</p>\n\n</li>\n<li>\n<p translation-result=\"on\">單擊瀏覽器的後退和前進按鈕以直觀地在瀏覽器的歷史記錄中瀏覽</p><p translation-origin=\"off\">Click the browser's back and forward buttons to navigate the browser history intuitively</p>\n\n</li>\n</ul>\n<p><a id=\"define-routes\"></a></p>\n<h2 id=\"associate-a-url-path-with-a-component\" translation-result=\"on\">關聯 URL 路徑與元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#associate-a-url-path-with-a-component\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Associate a URL path with a component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#associate-a-url-path-with-a-component\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">本應用已經用 Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 導航到了 <code>ProductListComponent</code>。本節將介紹如何定義顯示單個產品詳情的路由。</p><p translation-origin=\"off\">The application already uses the Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> to navigate to the <code>ProductListComponent</code>.\nThis section shows you how to define a route to show individual product details.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">產生用於展示產品詳情的新元件。在終端視窗執行如下命令來產生一個新的 <code>product-details</code> 元件：</p><p translation-origin=\"off\">Generate a new component for product details.\nIn the terminal generate a new <code>product-details</code> component by running the following command:</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component product-details\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>app.module.ts</code> 中，新增產品詳情的路由，其 <code>path</code> 為 <code>products/:productId</code>，其 <code>component</code> 為 <code>ProductDetailsComponent</code>。</p><p translation-origin=\"off\">In <code>app.module.ts</code>, add a route for product details, with a <code>path</code> of <code>products/:productId</code> and <code>ProductDetailsComponent</code> for the <code>component</code>.</p>\n\n<code-example header=\"src/app/app.module.ts\" path=\"getting-started/src/app/app.module.ts\" region=\"product-details-route\">\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n    <a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a>,\n    RouterModule.forRoot([\n      { path: '', component: ProductListComponent },\n      { path: 'products/:productId', component: ProductDetailsComponent },\n    ])\n  ],\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    ProductListComponent,\n    ProductAlertsComponent,\n    ProductDetailsComponent,\n  ],\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">開啟 <code>product-list.component.html</code>。</p><p translation-origin=\"off\">Open <code>product-list.component.html</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">修改產品名稱上的連結，使其包括以 <code>product.id</code> 為引數的 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>。</p><p translation-origin=\"off\">Modify the product name anchor to include a <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> with the <code>product.id</code> as a parameter.</p>\n\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.html\" region=\"router-link\">\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a\n      [title]=\"product.name + ' details'\"\n      [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/products', product.id]\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n  &lt;!-- . . . --&gt;\n\n&lt;/div&gt;\n\n</code-example>\n<p translation-result=\"on\"><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 指令可幫助你自訂 a 元素。在這裡，路由或 URL 中包含一個固定的區段 <code>/products</code>。最後一段則是變數，插入當前產品的 <code>id</code>。比如，<code>id</code> 為 1 的產品的 URL 是 <code>https://getting-started-myfork.stackblitz.io/products/1</code>。</p><p translation-origin=\"off\">The <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> directive helps you customize the anchor element.\nIn this case, the route, or URL, contains one fixed segment, <code>/products</code>.\nThe final segment is variable, inserting the <code>id</code> property of the current product.\nFor example, the URL for a product with an <code>id</code> of 1 would be similar to <code>https://getting-started-myfork.stackblitz.io/products/1</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">透過單擊產品名稱，驗證路由器是否如預期般工作。應用中應該顯示 <code>ProductDetailsComponent</code> 元件，其顯示的內容為 “product-details works!”。</p><p translation-origin=\"off\">Verify that the router works as intended by clicking the product name.\nThe application should display the <code>ProductDetailsComponent</code>, which currently says \"product-details works!\"</p>\n\n<p translation-result=\"on\">請注意，預覽視窗中的 URL 發生了變化。最後一個部分是 <code>products/#</code>，其中 <code>#</code> 表示你單擊的路由的編號。</p><p translation-origin=\"off\">Notice that the URL in the preview window changes.\nThe final segment is <code>products/#</code> where <code>#</code> is the number of the route you clicked.</p>\n\n<div class=\"lightbox\">\n<img alt=\"Product details view with updated URL\" src=\"generated/images/guide/start/product-details-works.png\" width=\"259\" height=\"162\">\n</div>\n</li>\n</ol>\n<h2 id=\"view-product-details\" translation-result=\"on\">檢視產品詳情<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#view-product-details\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">View product details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#view-product-details\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><code>ProductDetailsComponent</code> 會處理每個產品的顯示工作。Angular 路由器會根據瀏覽器的 URL 和<a href=\"start/start-routing#define-routes\">你定義的路徑</a>來顯示元件。</p><p translation-origin=\"off\">The <code>ProductDetailsComponent</code> handles the display of each product.\nThe Angular Router displays components based on the browser's URL and <a href=\"start/start-routing#define-routes\">your defined routes</a>.</p>\n\n<p translation-result=\"on\">在本節中，你將使用 Angular 路由器來組合 <code>products</code> 資料和路由資訊以顯示每個產品的特定詳情。</p><p translation-origin=\"off\">In this section, you'll use the Angular Router to combine the <code>products</code> data and route information to display the specific details for each product.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>product-details.component.ts</code> 中，從 <code>@angular/router</code> 匯入 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，並從 <code>../products</code> 匯入 <code>products</code> 陣列。</p><p translation-origin=\"off\">In <code>product-details.component.ts</code>, import <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> from <code>@angular/router</code>, and the <code>products</code> array from <code>../products</code>.</p>\n\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> } from '@angular/core';\nimport { <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> } from '@angular/router';\n\nimport { Product, products } from '../products';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">定義 <code>product</code> 屬性。</p><p translation-origin=\"off\">Define the <code>product</code> property.</p>\n\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"product-prop\">\nexport class ProductDetailsComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n\n  product: Product | undefined;\n  /* ... */\n}\n\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">透過把 <code>private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 新增為建構函式括號內的引數，來把 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 注入到 <code>constructor()</code> 中。</p><p translation-origin=\"off\">Inject <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> into the <code>constructor()</code> by adding <code>private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> as an argument within the constructor's parentheses.</p>\n\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"props-methods\">\nexport class ProductDetailsComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n\n  product: Product | undefined;\n\n  constructor(private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>) { }\n\n}\n\n\n</code-example>\n<p translation-result=\"on\">Angular 路由器載入的每個元件都有自己專屬的 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>。<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 中包含有關路由和路由引數的資訊。</p><p translation-origin=\"off\"><code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> is specific to each component that the Angular Router loads.\n<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> contains information about the route and the route's parameters.</p>\n\n<p translation-result=\"on\">透過注入 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，你可以配置此元件以使用服務。<a href=\"start/start-data\" title=\"嘗試一下：管理資料\">管理資料</a>那一步將更詳細地介紹服務。</p><p translation-origin=\"off\">By injecting <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>, you are configuring the component to use a service.\nThe <a href=\"start/start-data\" title=\"Try it: Managing Data\">Managing Data</a> step covers services in more detail.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在 <code>ngOnInit()</code> 方法中，從路由引數中提取 <code>productId</code>，並在 <code>products</code> 陣列中找到相應的產品。</p><p translation-origin=\"off\">In the <code>ngOnInit()</code> method, extract the <code>productId</code> from the route parameters and find the corresponding product in the <code>products</code> array.</p>\n\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"get-product\">\nngOnInit() {\n  // First get the product id from the current route.\n  const routeParams = this.route.snapshot.paramMap;\n  const productIdFromRoute = Number(routeParams.get('productId'));\n\n  // Find the product that correspond with the id provided in route.\n  this.product = products.find(product =&gt; product.id === productIdFromRoute);\n}\n\n</code-example>\n<p translation-result=\"on\">路由引數與你在此路由中定義的路徑變數相對應。要存取路由引數，我們使用 <code>route.snapshot</code>，它是一個 <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code>，其中包含有關該特定時刻的活動路由資訊。與此路由匹配的 URL 提供了 <code>productId</code>。Angular 會使用 <code>productId</code> 來顯示每個唯一產品的詳情。</p><p translation-origin=\"off\">The route parameters correspond to the path variables you define in the route.\nTo access the route parameters, we use <code>route.snapshot</code>, which is the <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code> that contains information about the active route at that particular moment in time.\nThe URL that matches the route provides the <code>productId</code> .\nAngular uses the <code>productId</code> to display the details for each unique product.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">更新 <code>ProductDetailsComponent</code> 的範本以顯示帶有 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 的產品詳情。如果產品存在，則此 <code>&lt;div&gt;</code> 會顯示名稱、價格和說明。</p><p translation-origin=\"off\">Update the <code>ProductDetailsComponent</code> template to display product details with an <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>.\nIf a product exists, the <code>&lt;div&gt;</code> renders with a name, price, and description.</p>\n\n<code-example header=\"src/app/product-details/product-details.component.html\" path=\"getting-started/src/app/product-details/product-details.component.html\" region=\"details\">\n&lt;h2&gt;Product Details&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product\"&gt;\n  &lt;h3&gt;{{ product.name }}&lt;/h3&gt;\n  &lt;h4&gt;{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&lt;/h4&gt;\n  &lt;p&gt;{{ product.description }}&lt;/p&gt;\n&lt;/div&gt;\n\n\n</code-example>\n<p translation-result=\"on\"><code>&lt;h4&gt;{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&lt;/h4&gt;</code> 這一行，使用 <code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code> 管道將 <code>product.price</code> 從數字轉換為貨幣字串。管道是一種可以在 HTML 範本中轉換資料的方式。有關 Angular 管道的更多資訊，請參見<a href=\"guide/pipes\" title=\"管道\">管道</a>。</p><p translation-origin=\"off\">The line, <code>&lt;h4&gt;{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&lt;/h4&gt;</code>, uses the <code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code> pipe to transform <code>product.price</code> from a number to a currency string.\nA pipe is a way you can transform data in your HTML template.\nFor more information about Angular pipes, see <a href=\"guide/pipes\" title=\"Pipes\">Pipes</a>.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">當用戶單擊產品列表中的名稱時，路由器會將其導航到產品的不同 URL，顯示此 <code>ProductDetailsComponent</code>，並展示產品詳情。</p><p translation-origin=\"off\">When users click on a name in the product list, the router navigates them to the distinct URL for the product, shows the <code>ProductDetailsComponent</code>, and displays the product details.</p>\n\n<div class=\"lightbox\">\n<img alt=\"Product details page with updated URL and full details displayed\" src=\"generated/images/guide/start/product-details-routed.png\" width=\"259\" height=\"225\">\n</div>\n<p translation-result=\"on\">有關 Angular 路由器的更多資訊，請參見<a href=\"guide/router\" title=\"路由與導航指南\">路由與導航</a>。</p><p translation-origin=\"off\">For more information about the Angular Router, see <a href=\"guide/router\" title=\"Routing &amp; Navigation guide\">Routing &amp; Navigation</a>.</p>\n\n<h2 id=\"whats-next\" translation-result=\"on\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#whats-next\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What's next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你已經配置好了應用，以便檢視產品詳情，每個產品詳情都有一個不同的 URL。</p><p translation-origin=\"off\">You have configured your application so you can view product details, each with a distinct URL.</p>\n\n<p translation-result=\"on\">繼續探索 Angular：</p><p translation-origin=\"off\">To continue exploring Angular:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">繼續<a href=\"start/start-data\" title=\"嘗試一下：管理資料\">管理資料</a>以新增購物車功能、管理購物車資料並檢索外部資料以獲取運費。</p><p translation-origin=\"off\">Continue to <a href=\"start/start-data\" title=\"Try it: Managing Data\">Managing Data</a> to add a shopping cart feature, manage cart data, and retrieve external data for shipping prices</p>\n\n</li>\n<li>\n<p translation-result=\"on\">跳至<a href=\"start/start-deployment\" title=\"試試看：部署\">部署</a>以將你的應用部署到 Firebase 或轉為本地開發。</p><p translation-origin=\"off\">Skip ahead to <a href=\"start/start-deployment\" title=\"Try it: Deployment\">Deployment</a> to deploy your application to Firebase or move to local development</p>\n\n</li>\n</ul>\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/localizing-angular\n - start\n - start/start-data\n-->\n<!-- links from this doc:\n - api/common/CurrencyPipe\n - api/common/NgFor\n - api/common/NgIf\n - api/core/Component\n - api/core/NgModule\n - api/core/OnInit\n - api/forms/ReactiveFormsModule\n - api/platform-browser/BrowserModule\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/Router\n - api/router/RouterLink\n - guide/pipes\n - guide/router\n - start\n - start/start-data\n - start/start-deployment\n - start/start-routing#adding-navigation\n - start/start-routing#associate-a-url-path-with-a-component\n - start/start-routing#define-routes\n - start/start-routing#view-product-details\n - start/start-routing#whats-next\n - start/start-routing#下一步呢\n - start/start-routing#關聯-url-路徑與元件\n - start/start-routing#檢視產品詳情\n - start/start-routing#新增導航\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/start/start-routing.md?message=docs%3A%20請簡述你的修改...\n-->"}