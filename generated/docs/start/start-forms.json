{"id":"start/start-forms","title":"Using forms for user input","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/start/start-forms.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"using-forms-for-user-input\" translation-result=\"on\">使用表單進行使用者輸入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#using-forms-for-user-input\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Using forms for user input<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#using-forms-for-user-input\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本指南基於“入門課程”<a href=\"start\" title=\"開始使用基本的 Angular 應用\">基本 Angular 應用</a>中的第三步<a href=\"start/start-data\" title=\"嘗試一下：管理資料\">“管理資料”</a>。</p><p translation-origin=\"off\">This guide builds on the <a href=\"start/start-data\" title=\"Try it: Managing Data\">Managing Data</a> step of the Getting Started tutorial, <a href=\"start\" title=\"Get started with a basic Angular app\">Get started with a basic Angular app</a>.</p>\n\n<p translation-result=\"on\">本節將引導你新增基於表單的結賬功能，以收集使用者資訊作為結賬資訊的一部分。</p><p translation-origin=\"off\">This section walks you through adding a form-based checkout feature to collect user information as part of checkout.</p>\n\n<h2 id=\"define-the-checkout-form-model\" translation-result=\"on\">定義結帳表單模型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#define-the-checkout-form-model\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Define the checkout form model<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#define-the-checkout-form-model\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">此步驟說明如何在元件類中建立結帳表單模型。表單模型決定表單的狀態。</p><p translation-origin=\"off\">This step shows you how to set up the checkout form model in the component class.\nThe form model determines the status of the form.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">開啟 <code>cart.component.ts</code>。</p><p translation-origin=\"off\">Open <code>cart.component.ts</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">從 <code>@angular/forms</code> 套件匯入 <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code>。此服務提供了用來產生控制項的便捷方法。</p><p translation-origin=\"off\">Import the <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> service from the <code>@angular/forms</code> package.\nThis service provides convenient methods for generating controls.</p>\n\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a> } from '@angular/forms';\n\nimport { CartService } from '../cart.service';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>CartComponent</code> 的 <code>constructor()</code> 中注入 <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> 服務。該服務是你已經匯入過的 <code><a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a></code> 模組的一部分。</p><p translation-origin=\"off\">Inject the <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> service in the <code>CartComponent</code> <code>constructor()</code>.\nThis service is part of the <code><a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a></code> module, which you've already imported.</p>\n\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\" region=\"inject-form-builder\">\nexport class CartComponent {\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>,\n  ) {}\n}\n\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">要收集使用者的姓名和地址，請使用 <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> 的 <code>group()</code> 方法來把 <code>checkoutForm</code> 屬性設定為一個包含 <code>name</code> 和 <code>address</code> 欄位的表單模型。</p><p translation-origin=\"off\">To gather the user's name and address, use the <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> <code>group()</code> method to set the <code>checkoutForm</code> property to a form model containing <code>name</code> and <code>address</code> fields.</p>\n\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\" region=\"checkout-form-group\">\nexport class CartComponent {\n\n  items = this.cartService.getItems();\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>,\n  ) {}\n}\n\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">定義一個 <code>onSubmit()</code> 方法來處理表單。該方法允許使用者提交其姓名和地址。此外，此方法會使用 <code>CartService</code> 的 <code>clearCart()</code> 方法重置表單並清除購物車。</p><p translation-origin=\"off\">Define an <code>onSubmit()</code> method to process the form.\nThis method allows users to submit their name and address.\nIn addition, this method uses the <code>clearCart()</code> method of the <code>CartService</code> to reset the form and clear the cart.</p>\n\n<p translation-result=\"on\">整個購物車元件類如下：</p><p translation-origin=\"off\">The entire cart component class is as follows:</p>\n\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a> } from '@angular/forms';\n\nimport { CartService } from '../cart.service';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n\n  items = this.cartService.getItems();\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>,\n  ) {}\n\n  onSubmit(): void {\n    // Process checkout data here\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n}\n\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"create-the-checkout-form\" translation-result=\"on\">建立結帳表單<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#create-the-checkout-form\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Create the checkout form<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#create-the-checkout-form\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用以下步驟在“購物車”檢視的底部新增一個結帳表單。</p><p translation-origin=\"off\">Use the following steps to add a checkout form at the bottom of the Cart view.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>cart.component.html</code> 的底部，新增一個 HTML <code>&lt;form&gt;</code> 元素和一個 <strong>Purchase</strong> 按鈕。</p><p translation-origin=\"off\">At the bottom of <code>cart.component.html</code>, add an HTML <code>&lt;form&gt;</code> element and a <strong>Purchase</strong> button.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用 <code>formGroup</code> 屬性繫結將 <code>checkoutForm</code> 繫結到 HTML 中的 <code>&lt;form&gt;</code> 標籤。</p><p translation-origin=\"off\">Use a <code>formGroup</code> property binding to bind <code>checkoutForm</code> to the HTML <code>&lt;form&gt;</code>.</p>\n\n<code-example header=\"src/app/cart/cart.component.html\" path=\"getting-started/src/app/cart/cart.component.3.html\" region=\"checkout-form\">\n&lt;form [formGroup]=\"checkoutForm\"&gt;\n\n  &lt;button class=\"button\" type=\"submit\"&gt;Purchase&lt;/button&gt;\n\n&lt;/form&gt;\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>form</code> 標籤上，使用 <code>ngSubmit</code> 事件繫結來偵聽表單提交，並以 <code>checkoutForm</code> 的值為引數呼叫 <code>onSubmit()</code> 方法。</p><p translation-origin=\"off\">On the <code>form</code> tag, use an <code>ngSubmit</code> event binding to listen for the form submission and call the <code>onSubmit()</code> method with the <code>checkoutForm</code> value.</p>\n\n<code-example header=\"src/app/cart/cart.component.html (cart component template detail)\" path=\"getting-started/src/app/cart/cart.component.html\" region=\"checkout-form-1\">\n&lt;form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\"&gt;\n&lt;/form&gt;\n\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">新增 <code>name</code> 和 <code>address</code> 的 <code>&lt;input&gt;</code> 欄位，每個欄位都有一個 <code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a></code> 屬性，該屬性繫結到 <code>checkoutForm</code> 表單控制項，以將 <code>name</code> 和 <code>address</code> 繫結到其 <code>&lt;input&gt;</code> 欄位。完整的元件如下：</p><p translation-origin=\"off\">Add <code>&lt;input&gt;</code> fields for <code>name</code> and <code>address</code>, each with a <code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a></code> attribute that binds to the <code>checkoutForm</code> form controls for <code>name</code> and <code>address</code> to their <code>&lt;input&gt;</code> fields.\nThe complete component is as follows:</p>\n\n<code-example header=\"src/app/cart/cart.component.html\" path=\"getting-started/src/app/cart/cart.component.html\" region=\"checkout-form-2\">\n&lt;h3&gt;Cart&lt;/h3&gt;\n\n&lt;p&gt;\n  &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/shipping\"&gt;Shipping Prices&lt;/a&gt;\n&lt;/p&gt;\n\n&lt;div class=\"cart-item\" *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let item of items\"&gt;\n  &lt;span&gt;{{ item.name }} &lt;/span&gt;\n  &lt;span&gt;{{ item.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\"&gt;\n\n  &lt;div&gt;\n    &lt;label for=\"name\"&gt;\n      Name\n    &lt;/label&gt;\n    &lt;input id=\"name\" type=\"text\" <a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>=\"name\"&gt;\n  &lt;/div&gt;\n\n  &lt;div&gt;\n    &lt;label for=\"address\"&gt;\n      Address\n    &lt;/label&gt;\n    &lt;input id=\"address\" type=\"text\" <a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>=\"address\"&gt;\n  &lt;/div&gt;\n\n  &lt;button class=\"button\" type=\"submit\"&gt;Purchase&lt;/button&gt;\n\n&lt;/form&gt;\n\n\n</code-example>\n</li>\n</ol>\n<p translation-result=\"on\">將少量物品放入購物車後，使用者可以檢視他們的物品，輸入他們的姓名和地址，然後提交購買的商品。</p><p translation-origin=\"off\">After putting a few items in the cart, users can review their items, enter their name and address, and submit their purchase.</p>\n\n<div class=\"lightbox\">\n  <img alt=\"Cart view with checkout form\" src=\"generated/images/guide/start/cart-with-items-and-form.png\" width=\"261\" height=\"395\">\n</div>\n<p translation-result=\"on\">要確認提交，請開啟控制檯以檢視包含你所提交的名稱和地址的物件。</p><p translation-origin=\"off\">To confirm submission, open the console to see an object containing the name and address you submitted.</p>\n\n<h2 id=\"whats-next\" translation-result=\"on\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#whats-next\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What's next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你現在有了一個具備產品目錄、購物車和結帳功能的完整線上商店應用。</p><p translation-origin=\"off\">You have a complete online store application with a product catalog, a shopping cart, and a checkout function.</p>\n\n<p translation-result=\"on\"><a href=\"start/start-deployment\" title=\"試試看：部署\">繼續前往“部署”部分</a>，以進行本地開發，或將此應用部署到 Firebase 或你自己的伺服器。</p><p translation-origin=\"off\"><a href=\"start/start-deployment\" title=\"Try it: Deployment\">Continue to the \"Deployment\" section</a> to move to local development, or deploy your app to Firebase or your own server.</p>\n\n\n  <div class=\"reviewed\">最後複查時間：9/15/2021</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/localizing-angular\n - start/start-data\n-->\n<!-- links from this doc:\n - api/common/CurrencyPipe\n - api/common/NgFor\n - api/core/Component\n - api/forms/FormBuilder\n - api/forms/FormControlName\n - api/forms/ReactiveFormsModule\n - api/router/RouterLink\n - start\n - start/start-data\n - start/start-deployment\n - start/start-forms#create-the-checkout-form\n - start/start-forms#define-the-checkout-form-model\n - start/start-forms#using-forms-for-user-input\n - start/start-forms#whats-next\n - start/start-forms#下一步呢\n - start/start-forms#使用表單進行使用者輸入\n - start/start-forms#建立結帳表單\n - start/start-forms#定義結帳表單模型\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/start/start-forms.md?message=docs%3A%20請簡述你的修改...\n-->"}