{"id":"tutorial/first-app/first-app-lesson-14","title":"Lesson 14 - Add HTTP communication to your app","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/tutorial/first-app/first-app-lesson-14.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"lesson-14---add-http-communication-to-your-app\" translation-result=\"on\">第 14 課 - 為應用程式新增 HTTP 通訊<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-14---add-http-communication-to-your-app\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Lesson 14 - Add HTTP communication to your app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-14---add-http-communication-to-your-app\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本課程示範如何將 HTTP 和 API 整合到應用程式中。</p><p translation-origin=\"off\">This tutorial demonstrates how to integrate HTTP and an API into your app. </p>\n\n<p translation-result=\"on\">到目前為止，應用程式都在從 Angular 服務中的靜態陣列讀取資料。下一步是讓應用程式透過 HTTP 與 JSON 伺服器通訊。HTTP 請求將會模擬處理來自伺服器的資料的體驗。</p><p translation-origin=\"off\">Up until this point your app has read data from a static array in an Angular service. The next step is to use a JSON server that your app will communicate with over HTTP. The HTTP request will simulate the experience of working with data from a server.</p>\n\n<p translation-result=\"on\"><strong>所需時間：</strong> 完成這節課預計需要 20 分鐘左右。</p><p translation-origin=\"off\"><strong>Time required:</strong> expect to spend about 20 minutes to complete this lesson.</p>\n\n<h2 id=\"before-you-start\" translation-result=\"on\">開始之前<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#before-you-start\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Before you start<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#before-you-start\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">這節課以上一課的程式碼為起點，你可以：</p><p translation-origin=\"off\">This lesson starts with the code from the previous lesson, so you can:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">在整合開發環境（IDE）中使用你在第 13 課中建立的程式碼。</p><p translation-origin=\"off\">Use the code that you created in Lesson 13 in your integrated development environment (IDE).</p>\n\n</li>\n<li>\n<p translation-result=\"on\">從上一課的程式碼範例開始。選擇<live-example name=\"first-app-lesson-13\"></live-example>，以便</p><p translation-origin=\"off\">Start with the code example from the previous lesson. Choose the <live-example name=\"first-app-lesson-13\"></live-example> from Lesson 13 where you can:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用 StackBlitz 中的<em>線上例子</em>，其中 StackBlitz 的介面就是你的 IDE。</p><p translation-origin=\"off\">Use the <em>live example</em> in StackBlitz, where the StackBlitz interface is your IDE.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用<em>下載範例</em>並在你的 IDE 中開啟它。</p><p translation-origin=\"off\">Use the <em>download example</em> and open it in your IDE.</p>\n\n</li>\n</ul>\n</li>\n</ul>\n<p translation-result=\"on\">如果你還沒看過簡介，請存取 <a href=\"tutorial/first-app\">Angular 課程簡介</a>以確保你已具備完成這節課所需的一切知識。</p><p translation-origin=\"off\">If you haven't reviewed the introduction, visit the <a href=\"tutorial/first-app\">Introduction to Angular tutorial</a> to make sure you have everything you need to complete this lesson.</p>\n\n<h2 id=\"after-you-finish\" translation-result=\"on\">完成之後<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#after-you-finish\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">After you finish<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#after-you-finish\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\">應用程式將使用來自 JSON 伺服器的資料</p><p translation-origin=\"off\">Your app will use data from a JSON server</p>\n\n</li>\n</ul>\n<h2 id=\"lesson-steps\" translation-result=\"on\">課程步驟<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-steps\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Lesson steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-steps\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在本地計算機的終端中執行這些步驟。</p><p translation-origin=\"off\">Perform these steps in the terminal on your local computer.</p>\n\n<h3 id=\"step-1---configure-the-json-server\" translation-result=\"on\">第 1 步 - 配置 JSON 伺服器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-1---configure-the-json-server\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Step 1 - Configure the JSON server<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-1---configure-the-json-server\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">JSON Server 是一種用於建立模擬 REST API 的開源工具。你將使用它來提供當前儲存在房屋服務中的房屋位置資料。</p><p translation-origin=\"off\">JSON Server is an open source tool used to create mock REST APIs. You'll use it to serve the housing location data that is currently stored in the housing service.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">使用以下命令從 npm 安裝 <code>json-server</code>。</p><p translation-origin=\"off\">Install <code>json-server</code> from npm by using the following command.</p>\n\n<code-example language=\"bash\" format=\"bash\">\n    npm install -g json-server\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在專案的根目錄中，建立一個名為 <code>db.json</code> 的檔案。這是你將儲存 <code>json-server</code> 資料的地方。</p><p translation-origin=\"off\">In the root directory of your project, create a file called <code>db.json</code>. This is where you will store the data for the <code>json-server</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">開啟 <code>db.json</code> 並將以下程式碼複製到檔案中</p><p translation-origin=\"off\">Open <code>db.json</code> and copy the following code into the file</p>\n\n<code-example language=\"json\" format=\"json\">\n    {\n        \"locations\": [\n            {\n                \"id\": 0,\n                \"name\": \"Acme Fresh Start Housing\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\",\n                \"photo\": \"/assets/bernard-hermant-CLKGGwIBTaY-unsplash.jpg\",\n                \"availableUnits\": 4,\n                \"wifi\": true,\n                \"laundry\": true\n            },\n            {\n                \"id\": 1,\n                \"name\": \"A113 Transitional Housing\",\n                \"city\": \"Santa Monica\",\n                \"state\": \"CA\",\n                \"photo\": \"/assets/brandon-griggs-wR11KBaB86U-unsplash.jpg\",\n                \"availableUnits\": 0,\n                \"wifi\": false,\n                \"laundry\": true\n            },\n            {\n                \"id\": 2,\n                \"name\": \"Warm Beds Housing Support\",\n                \"city\": \"Juneau\",\n                \"state\": \"AK\",\n                \"photo\": \"/assets/i-do-nothing-but-love-lAyXdl1-Wmc-unsplash.jpg\",\n                \"availableUnits\": 1,\n                \"wifi\": false,\n                \"laundry\": false\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Homesteady Housing\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\",\n                \"photo\": \"/assets/ian-macdonald-W8z6aiwfi1E-unsplash.jpg\",\n                \"availableUnits\": 1,\n                \"wifi\": true,\n                \"laundry\": false\n            },\n            {\n                \"id\": 4,\n                \"name\": \"Happy Homes Group\",\n                \"city\": \"Gary\",\n                \"state\": \"IN\",\n                \"photo\": \"/assets/krzysztof-hepner-978RAXoXnH4-unsplash.jpg\",\n                \"availableUnits\": 1,\n                \"wifi\": true,\n                \"laundry\": false\n            },\n            {\n                \"id\": 5,\n                \"name\": \"Hopeful Apartment Group\",\n                \"city\": \"Oakland\",\n                \"state\": \"CA\",\n                \"photo\": \"/assets/r-architecture-JvQ0Q5IkeMM-unsplash.jpg\",\n                \"availableUnits\": 2,\n                \"wifi\": true,\n                \"laundry\": true\n            },\n            {\n                \"id\": 6,\n                \"name\": \"Seriously Safe Towns\",\n                \"city\": \"Oakland\",\n                \"state\": \"CA\",\n                \"photo\": \"/assets/phil-hearing-IYfp2Ixe9nM-unsplash.jpg\",\n                \"availableUnits\": 5,\n                \"wifi\": true,\n                \"laundry\": true\n            },\n            {\n                \"id\": 7,\n                \"name\": \"Hopeful Housing Solutions\",\n                \"city\": \"Oakland\",\n                \"state\": \"CA\",\n                \"photo\": \"/assets/r-architecture-GGupkreKwxA-unsplash.jpg\",\n                \"availableUnits\": 2,\n                \"wifi\": true,\n                \"laundry\": true\n            },\n            {\n                \"id\": 8,\n                \"name\": \"Seriously Safe Towns\",\n                \"city\": \"Oakland\",\n                \"state\": \"CA\",\n                \"photo\": \"/assets/saru-robert-9rP3mxf8qWI-unsplash.jpg\",\n                \"availableUnits\": 10,\n                \"wifi\": false,\n                \"laundry\": false\n            },\n            {\n                \"id\": 9,\n                \"name\": \"Capital Safe Towns\",\n                \"city\": \"Portland\",\n                \"state\": \"OR\",\n                \"photo\": \"/assets/webaliser-_TPTXZd9mOo-unsplash.jpg\",\n                \"availableUnits\": 6,\n                \"wifi\": true,\n                \"laundry\": true\n            }\n        ]\n    }\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">儲存此檔案。</p><p translation-origin=\"off\">Save this file.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">是時候測試你的配置了。開啟命令列視窗，在專案的根目錄下執行以下命令。</p><p translation-origin=\"off\">Time to test your configuration. From the command line, at the root of your project run the following commands.</p>\n\n<code-example language=\"bash\" format=\"bash\">\n    json-server --watch db.json\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在你的 Web 瀏覽器中，導航到 <code>http://localhost:3000/locations</code> 並確認響應裡包括儲存在 <code>db.json</code> 中的資料。</p><p translation-origin=\"off\">In your web browser, navigate to the <code>http://localhost:3000/locations</code> and confirm that the response includes the data stored in <code>db.json</code>.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">如果你的配置有任何問題，可以在<a href=\"https://www.npmjs.com/package/json-server\">官方文件</a>中找到更多詳細資訊。</p><p translation-origin=\"off\">If you have any trouble with your configuration, you can find more details in the <a href=\"https://www.npmjs.com/package/json-server\">official documentation</a>.</p>\n\n<h3 id=\"step-2---update-service-to-use-web-server-instead-of-local-array\" translation-result=\"on\">第 2 步 - 更新服務以使用 Web 伺服器而非本地陣列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-2---update-service-to-use-web-server-instead-of-local-array\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Step 2 - Update service to use web server instead of local array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-2---update-service-to-use-web-server-instead-of-local-array\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">資料源已配置，下一步是更新你的 Web 應用程式以連線到它來使用資料。</p><p translation-origin=\"off\">The data source has been configured, the next step is to update your web app to connect to it use the data.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>src/app/housing.service.ts</code> 中，進行以下更改：</p><p translation-origin=\"off\">In <code>src/app/housing.service.ts</code>, make the following changes:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">更新程式碼以刪除 <code>housingLocationList</code> 屬性和包含資料的陣列。</p><p translation-origin=\"off\">Update the code to remove <code>housingLocationList</code> property and the array containing the data.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">新增一個名叫 <code>url</code> 的字串屬性並將值設定為 <code>'http://localhost:3000/locations'</code></p><p translation-origin=\"off\">Add a string property called and set the value to <code>'http://localhost:3000/locations'</code></p>\n\n<code-example anguage=\"javascript\" format=\"javascript\">\nurl = 'http://localhost:3000/locations';\n</code-example>\n<p translation-result=\"on\">此程式碼將導致檔案其餘部分出錯，因為它依賴 <code>housingLocationList</code> 屬性。接下來我們將更新服務方法。</p><p translation-origin=\"off\">This code will result in errors in the rest of the file because it depends on the <code>housingLocationList</code> property. We're going to update the service methods next.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">更新 <code>getAllHousingLocations</code> 函式以呼叫你配置好的 Web 伺服器。</p><p translation-origin=\"off\">Update the <code>getAllHousingLocations</code> function to make a call to the web server you configured.</p>\n\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/housing.service.ts\" region=\"update-getAllHousingLocations\">\nasync getAllHousingLocations(): Promise&lt;HousingLocation[]&gt; {\n  const data = await fetch(this.url);\n  return await data.json() ?? [];\n}\n\n</code-example>\n<p translation-result=\"on\">該程式碼現在使用非同步程式碼透過 <code>HTTP</code> 發出 <code>get</code> 請求。請注意，對於此範例，程式碼使用了 <code>fetch</code>。對於更進階的使用案例，請考慮使用 Angular 提供的 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code>。</p><p translation-origin=\"off\">The code now uses asynchronous code to make a <code>get</code> request over <code>HTTP</code>. Notice, for this example, the code uses fetch. For more advanced use cases consider using <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> provided by Angular.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">更新 <code>getHousingLocationsById</code> 函式以呼叫你配置好的 Web 伺服器。</p><p translation-origin=\"off\">Update the <code>getHousingLocationsById</code> function to make a call to the web server you configured.</p>\n\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/housing.service.ts\" region=\"update-getHousingLocationById\">\nasync getHousingLocationById(id: number): Promise&lt;HousingLocation | undefined&gt; {\n  const data = await fetch(`${this.url}/${id}`);\n  return await data.json() ?? {};\n}\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">所有這些更新完成後，更新後的服務程式碼將是這樣的。</p><p translation-origin=\"off\">Once all the updates are complete, your updated service will match the following code.</p>\n\n<code-example header=\"Final version of housing.service.ts\" path=\"first-app-lesson-14/src/app/housing.service.ts\">\nimport { <a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> } from '@angular/core';\nimport { HousingLocation } from './housinglocation';\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  url = 'http://localhost:3000/locations';\n\n  async getAllHousingLocations(): Promise&lt;HousingLocation[]&gt; {\n    const data = await fetch(this.url);\n    return await data.json() ?? [];\n  }\n\n  async getHousingLocationById(id: number): Promise&lt;HousingLocation | undefined&gt; {\n    const data = await fetch(`${this.url}/${id}`);\n    return await data.json() ?? {};\n  }\n\n  submitApplication(firstName: string, lastName: string, <a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a>: string) {\n    console.log(firstName, lastName, <a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a>);\n  }\n}\n\n\n</code-example>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"step-3---update-the-components-to-use-asynchronous-calls-to-the-housing-service\" translation-result=\"on\">第 3 步 - 更新元件以使用非同步方式呼叫房屋服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-3---update-the-components-to-use-asynchronous-calls-to-the-housing-service\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Step 3 - Update the components to use asynchronous calls to the housing service<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-3---update-the-components-to-use-asynchronous-calls-to-the-housing-service\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">伺服器現在正在從 <code>HTTP</code> 請求中讀取資料，但依賴該服務的元件現在出錯了，因為它們被編碼成了使用該服務的同步版本。</p><p translation-origin=\"off\">The server is now reading data from the <code>HTTP</code> request but the components that rely on the service now have errors because they were programmed to use the synchronous version of the service.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>src/app/home/home.component.ts</code> 中，更新建構函式以使用新的非同步版本的 <code>getAllHousingLocations</code> 方法。</p><p translation-origin=\"off\">In <code>src/app/home/home.component.ts</code>, update the constructor to use the new asynchronous version of the <code>getAllHousingLocations</code> method.</p>\n\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/home/home.component.ts\" region=\"update-home-component-constructor\">\nconstructor() {\n  this.housingService.getAllHousingLocations().then((housingLocationList: HousingLocation[]) =&gt; {\n    this.housingLocationList = housingLocationList;\n    this.filteredLocationList = housingLocationList;\n  });\n}\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>src/app/details/details.component.ts</code> 中，更新建構函式以使用新的非同步版本的 <code>getHousingLocationById</code> 方法。</p><p translation-origin=\"off\">In <code>src/app/details/details.component.ts</code>, update the constructor to use the new asynchronous version of the <code>getHousingLocationById</code> method.</p>\n\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/details/details.component.ts\" region=\"update-details-component-constructor\">\nconstructor() {\n  const housingLocationId = parseInt(this.route.snapshot.params['id'], 10);\n  this.housingService.getHousingLocationById(housingLocationId).then(housingLocation =&gt; {\n    this.housingLocation = housingLocation;\n  });\n}\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">儲存你的程式碼。</p><p translation-origin=\"off\">Save your code.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在瀏覽器中開啟應用程式並確認它執行沒有任何錯誤。</p><p translation-origin=\"off\">Open the application in the browser and confirm that it runs without any errors.</p>\n\n</li>\n</ol>\n<h2 id=\"lesson-review\" translation-result=\"on\">課程回顧<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-review\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Lesson review<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-review\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在這節課中，你將應用更新為：</p><p translation-origin=\"off\">In this lesson, you updated your app to:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用本地網路伺服器（<code>json-server</code>）</p><p translation-origin=\"off\">use a local web server (<code>json-server</code>)</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用非同步服務方法來檢索資料。</p><p translation-origin=\"off\">use asynchronous service methods to retrieve data.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">恭喜！你已成功完成本課程，並已準備好繼續建構更復雜的 Angular 應用程式。如果你想了解更多資訊，請考慮完成 Angular 的一些其他開發者<a href=\"tutorial\">課程</a>和<a href=\"/guide/developer-guide-overview\">指南</a>。</p><p translation-origin=\"off\">Congratulations! You've successfully completed this tutorial and are ready to continue your journey with building even more complex Angular Apps. If you would like to learn more, please consider completing some of Angular's other developer <a href=\"tutorial\">tutorials</a> and <a href=\"/guide/developer-guide-overview\">guides</a>.</p>\n\n\n  \n</div>\n\n\n<!-- links to this doc:\n - tutorial/first-app/first-app-lesson-13\n-->\n<!-- links from this doc:\n - /guide/developer-guide-overview\n - api/common/http/HttpClient\n - api/core/Injectable\n - api/forms/EmailValidator\n - tutorial\n - tutorial/first-app\n - tutorial/first-app/first-app-lesson-14#after-you-finish\n - tutorial/first-app/first-app-lesson-14#before-you-start\n - tutorial/first-app/first-app-lesson-14#lesson-14---add-http-communication-to-your-app\n - tutorial/first-app/first-app-lesson-14#lesson-review\n - tutorial/first-app/first-app-lesson-14#lesson-steps\n - tutorial/first-app/first-app-lesson-14#step-1---configure-the-json-server\n - tutorial/first-app/first-app-lesson-14#step-2---update-service-to-use-web-server-instead-of-local-array\n - tutorial/first-app/first-app-lesson-14#step-3---update-the-components-to-use-asynchronous-calls-to-the-housing-service\n - tutorial/first-app/first-app-lesson-14#完成之後\n - tutorial/first-app/first-app-lesson-14#開始之前\n - tutorial/first-app/first-app-lesson-14#第-1-步---配置-json-伺服器\n - tutorial/first-app/first-app-lesson-14#第-14-課---為應用程式新增-http-通訊\n - tutorial/first-app/first-app-lesson-14#第-2-步---更新服務以使用-web-伺服器而非本地陣列\n - tutorial/first-app/first-app-lesson-14#第-3-步---更新元件以使用非同步方式呼叫房屋服務\n - tutorial/first-app/first-app-lesson-14#課程回顧\n - tutorial/first-app/first-app-lesson-14#課程步驟\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/tutorial/first-app/first-app-lesson-14.md?message=docs%3A%20請簡述你的修改...\n - https://www.npmjs.com/package/json-server\n-->"}