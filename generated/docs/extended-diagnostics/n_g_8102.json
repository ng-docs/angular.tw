{"id":"extended-diagnostics/NG8102","title":"NG8102: Nullish coalescing not nullable\n\n空值合併運算子用於不可空變數","contents":"<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/extended-diagnostics/NG8102.md?message=docs(...)%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n<div class=\"content\">\n\n  <h1 id=\"ng8102-nullish-coalescing-not-nullable空值合併運算子用於不可空變數\">NG8102: Nullish coalescing not nullable\n\n空值合併運算子用於不可空變數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#ng8102-nullish-coalescing-not-nullable空值合併運算子用於不可空變數\"><i class=\"material-icons\">link</i></a></h1>\n\n  <div class=\"diagnostic-description\">\n    <h2 translation-result=\"on\" id=\"說明\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#說明\"><i class=\"material-icons\">link</i></a></h2>\n    <h2 translation-origin=\"off\" id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p translation-result=\"on\">此診斷會在 Angular 範本中檢測到無用的空值合併運算子（<code>??</code>）字元。具體來說，它會查詢輸入不可“為空”的操作，這意味著其型別不包括 <code>null</code> 或 <code>undefined</code>。對於這樣的值，<code>??</code> 的右側永遠不會被使用。</p><p translation-origin=\"off\">This diagnostic detects a useless nullish coalescing operator (<code>??</code>) characters in Angular templates.\nSpecifically, it looks for operations where the input is not \"nullable\", meaning its type does not include <code>null</code> or <code>undefined</code>.\nFor such values, the right side of the <code>??</code> will never be used.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  // Template displays `foo` if present, falls back to 'bar' if it is `null`\n  // or `undefined`.\n  template: `<div>{{ foo ?? 'bar' }}</div>`,\n  // …\n})\nclass MyComponent {\n  // `foo` is declared as a `string` which *cannot* be `null` or `undefined`.\n  foo: string = 'test';\n}\n\n</code-example>\n<h2 id=\"whats-wrong-with-that\" translation-result=\"on\">那有什麼問題？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#whats-wrong-with-that\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What's wrong with that?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#whats-wrong-with-that\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">將空值合併運算子與不可為空的輸入一起使用沒有任何效果，並且揭示出允許的值型別與它在範本中的渲染方式之間可能存在差異。開發人員可能會合理地假定在某些情況下會顯示空值合併運算子的右側，但它永遠不會真正顯示出來。這可能會導致對程式的預期輸出感到困惑。</p><p translation-origin=\"off\">Using the nullish coalescing operator with a non-nullable input has no effect and is indicative of a discrepancy between the allowed type of a value and how it is presented in the template.\nA developer might reasonably assume that the right side of the nullish coalescing operator is displayed in some case, but it will never actually be displayed.\nThis can lead to confusion about the expected output of the program.</p>\n\n<h2 id=\"what-should-i-do-instead\" translation-result=\"on\">我該怎麼辦？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#what-should-i-do-instead\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What should I do instead?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#what-should-i-do-instead\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">更新範本和宣告的型別以同步兩者。仔細檢查輸入的型別，並確認它是否真是可空的。</p><p translation-origin=\"off\">Update the template and declared type to be in sync.\nDouble-check the type of the input and confirm whether it is actually expected to be nullable.</p>\n\n<p translation-result=\"on\">如果輸入應該是可空的，請在其型別中新增 <code>null</code> 或 <code>undefined</code> 以表明這一點。</p><p translation-origin=\"off\">If the input should be nullable, add <code>null</code> or <code>undefined</code> to its type to indicate this.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  template: `<div>{{ foo ?? 'bar' }}</div>`,\n  // …\n})\nclass MyComponent {\n  // `foo` is now nullable. If it is ever set to `null`, 'bar' will be displayed.\n  foo: string | null = 'test';\n}\n\n</code-example>\n<p translation-result=\"on\">如果輸入<em>不</em>應該為空，請刪除 <code>??</code> 運算子及其右運算元，因為 TypeScript 會保證該值始終不可為空。</p><p translation-origin=\"off\">If the input should <em>not</em> be nullable, delete the <code>??</code> operator and its right operand, since the value is guaranteed by TypeScript to always be non-nullable.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  // Template always displays `foo`, which is guaranteed to never be `null` or\n  // `undefined`.\n  template: `<div>{{ foo }}</div>`,\n  // …\n})\nclass MyComponent {\n  foo: string = 'test';\n}\n\n</code-example>\n<h2 id=\"configuration-requirements\" translation-result=\"on\">配置要求<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#configuration-requirements\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Configuration requirements<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#configuration-requirements\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">必須啟用 <a href=\"guide/template-typecheck#strict-mode\"><code>strictTemplates</code></a> 才能發出任何擴充診斷。還必須啟用 <a href=\"guide/template-typecheck#strict-null-checks\"><code>strictNullChecks</code></a> 才能發出任何 <code>nullishCoalescingNotNullable</code> 診斷資訊。</p><p translation-origin=\"off\"><a href=\"guide/template-typecheck#strict-mode\"><code>strictTemplates</code></a> must be enabled for any extended diagnostic to emit.\n<a href=\"guide/template-typecheck#strict-null-checks\"><code>strictNullChecks</code></a> must also be enabled to emit any <code>nullishCoalescingNotNullable</code> diagnostics.</p>\n\n<h2 id=\"what-if-i-cant-avoid-this\" translation-result=\"on\">如果我無法避免這種情況怎麼辦？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#what-if-i-cant-avoid-this\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What if I can't avoid this?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8102#what-if-i-cant-avoid-this\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">可以透過編輯專案的 <code>tsconfig.json</code> 檔案來禁用此診斷：</p><p translation-origin=\"off\">This diagnostic can be disabled by editing the project's <code>tsconfig.json</code> file:</p>\n\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"angularCompilerOptions\": {\n    \"extendedDiagnostics\": {\n      \"checks\": {\n        \"nullishCoalescingNotNullable\": \"suppress\"\n      }\n    }\n  }\n}\n\n</code-example>\n<p translation-result=\"on\">有關更多資訊，請參閱<a href=\"extended-diagnostics#configuration\">擴充診斷配置</a>。</p><p translation-origin=\"off\">See <a href=\"extended-diagnostics#configuration\">extended diagnostic configuration</a> for more info.</p>\n\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n\n</div>\n\n<!-- links to this doc:\n - extended-diagnostics\n-->\n<!-- links from this doc:\n - api/core/Component\n - extended-diagnostics#configuration\n - extended-diagnostics/NG8102#configuration-requirements\n - extended-diagnostics/NG8102#description\n - extended-diagnostics/NG8102#ng8102-nullish-coalescing-not-nullable空值合併運算子用於不可空變數\n - extended-diagnostics/NG8102#what-if-i-cant-avoid-this\n - extended-diagnostics/NG8102#what-should-i-do-instead\n - extended-diagnostics/NG8102#whats-wrong-with-that\n - extended-diagnostics/NG8102#如果我無法避免這種情況怎麼辦\n - extended-diagnostics/NG8102#我該怎麼辦\n - extended-diagnostics/NG8102#說明\n - extended-diagnostics/NG8102#那有什麼問題\n - extended-diagnostics/NG8102#配置要求\n - guide/template-typecheck#strict-mode\n - guide/template-typecheck#strict-null-checks\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/extended-diagnostics/NG8102.md?message=docs(...)%3A%20請簡述你的修改...\n-->"}