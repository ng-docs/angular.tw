{"id":"api/core/ng-template","title":"<ng-template>","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/ng-template\", \"name\": \"<ng-template>\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/special-elements/core/ng-template.md?message=docs(core)%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/aio/content/special-elements/core/ng-template.md\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"ng-template\">&lt;ng-template&gt;<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#ng-template\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label element\">element</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">Angular 的 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素定義了一個預設不渲染的範本。</p><p translation-origin=\"off\">Angular's <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> element defines a template that is not rendered by default.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/core/ng-template#description\">檢視\"說明\"...</a></p>\n  </section>\n\n\n\n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">使用 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code>，你可以定義一段範本內容，且僅當你直接或間接地明確指示 Angular 渲染時，Angular 才會渲染它，從而讓你可以完全控制內容的顯示方式和時機。</p><p translation-origin=\"off\">With <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code>, you can define template content that is only being rendered by Angular when you, whether directly or indirectly, specifically instruct it to do so, allowing you to have full control over how and when the content is displayed.</p>\n\n<div class=\"alter is-helpful\">\n<p translation-result=\"on\">  請注意，如果你在不指示 Angular 渲染內容的情況下將內容包裝在 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 中，這些內容就不會出現在頁面上。例如，檢視以下 HTML 程式碼，在處理它時 Angular 不會渲染“Hip! Hip! Hooray!” 中間的“Hip!”，因為它包含在 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 中。</p><p translation-origin=\"off\">  Note that if you wrap content inside an <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> without instructing Angular to render it, such content will not appear on a page. For example, see the following HTML code, when handling it Angular won't render the middle \"Hip!\" in the phrase \"Hip! Hip! Hooray!\" because of the surrounding <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code>.</p>\n\n<code-example language=\"html\">\n  &lt;p&gt;Hip!&lt;/p&gt;\n  &lt;ng-template&gt;\n    &lt;p&gt;Hip!&lt;/p&gt;\n  &lt;/ng-template&gt;\n  &lt;p&gt;Hooray!&lt;/p&gt;\n</code-example>\n</div>\n  <p>Further information is available in the <a href=\"api/core/ng-template#usage-notes\">Usage Notes...</a></p>\n</section>\n\n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"structural-directives\" translation-result=\"on\">結構型指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#structural-directives\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Structural Directives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#structural-directives\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 的主要用途之一是儲存將由<a href=\"guide/structural-directives\">結構型指令</a>使用的範本內容。這些指令可以根據自己的邏輯新增和刪除範本內容的副本。</p><p translation-origin=\"off\">One of the main uses for <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> is to hold template content that will be used by <a href=\"guide/structural-directives\">Structural directives</a>. Those directives can add and remove copies of the template content based on their own logic.</p>\n\n<p translation-result=\"on\">當使用<a href=\"guide/structural-directives#structural-directive-shorthand\">結構型指令簡寫法</a>時，Angular 會在幕後建立了一個 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素。</p><p translation-origin=\"off\">When using the <a href=\"guide/structural-directives#structural-directive-shorthand\">structural directive shorthand</a>, Angular creates an <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> element behind the scenes.</p>\n\n<h3 id=\"templateref\">TemplateRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#templateref\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-result=\"on\"><code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素表示為 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> 類別的例項。</p><p translation-origin=\"off\"><code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> elements are represented as instances of the <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> class.</p>\n\n<p translation-result=\"on\">要將範本的副本新增到 DOM 中，請將此物件傳給 <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> 的 <code>createEmbeddedView()</code> 方法。</p><p translation-origin=\"off\">To add copies of the template to the DOM, pass this object to the <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> method <code>createEmbeddedView()</code>.</p>\n\n<h3 id=\"template-variables\" translation-result=\"on\">範本變數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#template-variables\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Template Variables<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#template-variables\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素可以使用<a href=\"guide/template-reference-variables#how-angular-assigns-values-to-template-variables\">標準範本變數</a>在範本中參考。</p><p translation-origin=\"off\"><code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> elements can be referenced in templates using <a href=\"guide/template-reference-variables#how-angular-assigns-values-to-template-variables\">standard template variables</a>.</p>\n\n<p translation-result=\"on\"><em>這就是 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素如何用作 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 中 <code>else</code> 子句的方式。</em></p><p translation-origin=\"off\"><em>This is how <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> elements are used as <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> else clauses.</em></p>\n\n<p translation-result=\"on\">此類範本變數可以與 <code><a href=\"api/common/NgTemplateOutlet\" class=\"code-anchor\">ngTemplateOutlet</a></code> 指令結合使用，以渲染 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 標籤內定義的內容。</p><p translation-origin=\"off\">Such template variables can be used in conjunction with <code><a href=\"api/common/NgTemplateOutlet\" class=\"code-anchor\">ngTemplateOutlet</a></code> directives to render the content defined inside <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> tags.</p>\n\n<h3 id=\"querying\" translation-result=\"on\">查詢<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#querying\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Querying<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#querying\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><a href=\"api/core/Query\">查詢</a>（例如 <code><a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a></code> ）可以找到與 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素關聯的 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> ，以便可以以程式設計方式使用它；例如，將其傳遞給 <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> 方法 <code>createEmbeddedView()</code> 。</p><p translation-origin=\"off\">A <a href=\"api/core/Query\">Query</a> (such as <code><a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a></code>) can find the <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> associated to an <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> element so that it can be used programmatically; for instance, to pass it to the <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> method <code>createEmbeddedView()</code>.</p>\n\n<h3 id=\"context\" translation-result=\"on\">上下文<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#context\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Context<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#context\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 標籤內，你可以參考周圍外部範本中存在的變數。此外，上下文物件可以與 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素相關聯。這樣的物件包含可以透過範本（ <code>let</code> 和 <code>as</code> ）來宣告可從範本內容中存取的變數。</p><p translation-origin=\"off\">Inside the <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> tags you can reference variables present in the surrounding outer template.\nAdditionally, a context object can be associated with <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> elements.\nSuch an object contains variables that can be accessed from within the template contents via template (<code>let</code> and <code>as</code>) declarations.</p>\n\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/NgFor\n - api/common/NgForOf\n - api/common/NgIf\n - api/core\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/ng-container\n - guide/angular-compiler-options\n - guide/binding-overview\n - guide/built-in-directives\n - guide/content-projection\n - guide/deprecations\n - guide/dynamic-component-loader\n - guide/structural-directives\n - guide/template-reference-variables\n - guide/template-typecheck\n - guide/understanding-template-expr-overview\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgIf\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/Query\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/core/ViewContainerRef\n - api/core/ng-template#context\n - api/core/ng-template#description\n - api/core/ng-template#ng-template\n - api/core/ng-template#querying\n - api/core/ng-template#structural-directives\n - api/core/ng-template#template-variables\n - api/core/ng-template#templateref\n - api/core/ng-template#usage-notes\n - api/core/ng-template#上下文\n - api/core/ng-template#查詢\n - api/core/ng-template#範本變數\n - api/core/ng-template#結構型指令\n - guide/structural-directives\n - guide/structural-directives#structural-directive-shorthand\n - guide/template-reference-variables#how-angular-assigns-values-to-template-variables\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/special-elements/core/ng-template.md?message=docs(core)%3A%20請簡述你的修改...\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/aio/content/special-elements/core/ng-template.md\n-->"}