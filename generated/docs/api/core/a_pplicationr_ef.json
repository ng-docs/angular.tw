{"id":"api/core/ApplicationRef","title":"ApplicationRef","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/ApplicationRef\", \"name\": \"ApplicationRef\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L839-L1445\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L839-L1445\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"applicationref\">ApplicationRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#applicationref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">對頁面上執行的 Angular 應用程式的參考。</p><p translation-origin=\"off\">A reference to an Angular application running on a page.</p>\n\n\n  </section><section ng-should-translate=\"\" class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#destroyed\"><span class=\"member-name\">destroyed</span></a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#componentTypes\"><span class=\"member-name\">componentTypes</span>: Type&lt;any&gt;[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#components\"><span class=\"member-name\">components</span>: ComponentRef&lt;any&gt;[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#isStable\"><span class=\"member-name\">isStable</span>: Observable&lt;boolean&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#injector\"><span class=\"member-name\">injector</span>: EnvironmentInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#viewCount\"><span class=\"member-name\">viewCount</span></a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(componentOrFactory: ComponentFactory&lt;C&gt; | Type&lt;C&gt;, rootSelectorOrNode?: any): ComponentRef&lt;C&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#tick\"><span class=\"member-name\">tick</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#attachView\"><span class=\"member-name\">attachView</span>(viewRef: ViewRef): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#detachView\"><span class=\"member-name\">detachView</span>(viewRef: ViewRef): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#onDestroy\"><span class=\"member-name\">onDestroy</span>(callback: () =&gt; void): VoidFunction</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#destroy\"><span class=\"member-name\">destroy</span>(): void</a>\n}\n</code-example>\n\n</section>\n\n<h2 id=\"提供於\">提供於<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#提供於\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n  <li>\n    <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">'root'</code-example>\n  </li>\n</ul>\n  \n  \n<section ng-should-translate=\"\" class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>屬性</th>\n        <th>說明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"destroyed\"></a>\n          <code class=\"\"><span class=\"member-name\">destroyed</span></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\">表明此例項是否已銷燬。</p><p translation-origin=\"off\">Indicates whether this instance was destroyed.</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"componentTypes\"></a>\n          <code class=\"\"><span class=\"member-name\">componentTypes</span>: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;[]</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\">獲取註冊到該應用程式的元件型別的列表。在建立元件之前，會填充此列表。</p><p translation-origin=\"off\">Get a list of component types registered to this application.\nThis list is populated even before the component is created.</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"components\"></a>\n          <code class=\"\"><span class=\"member-name\">components</span>: <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;any&gt;[]</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\">獲取已註冊到該應用中的元件的列表。</p><p translation-origin=\"off\">Get a list of components registered to this application.</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"isStable\"></a>\n          <code class=\"\"><span class=\"member-name\">isStable</span>: Observable&lt;boolean&gt;</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\">返回一個 Observable，指示應用程式何時變得穩定或不穩定。</p><p translation-origin=\"off\">Returns an Observable that indicates when the application is stable or unstable.</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"injector\"></a>\n          <code class=\"\"><span class=\"member-name\">injector</span>: <a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\">用於建立此應用程式的 <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code>。</p><p translation-origin=\"off\">The <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code> used to create this application.</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"viewCount\"></a>\n          <code class=\"\"><span class=\"member-name\">viewCount</span></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\">返回已附加檢視的數量。</p><p translation-origin=\"off\">Returns the number of attached views.</p>\n</div>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section ng-should-translate=\"\" class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"bootstrap\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"bootstrap\">bootstrap()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1160-L1267\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1160-L1267\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">將元件引導到其選擇器標識的元素上，或者（可選）引導到指定的元素。</p><p translation-origin=\"off\">Bootstrap a component onto the element identified by its selector or, optionally, to a\nspecified element.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(component: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;C&gt;, rootSelectorOrNode?: any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;C&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>component</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;C&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>rootSelectorOrNode</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p>可選值。預設值為 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef&lt;C&gt;</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(componentFactory: <a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a>&lt;C&gt;, rootSelectorOrNode?: any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;C&gt;</code-example>\n  <div class=\"deprecated\">\n    <p translation-result=\"on\">將元件工廠作為 <code>Application.bootstrap</code> 函式引數傳遞已棄用。改為傳遞元件型別。</p><p translation-origin=\"off\"><strong>Deprecated</strong> Passing Component factories as the <code>Application.bootstrap</code> function argument is\ndeprecated. Pass Component Types instead.</p>\n\n\n  </div>\n\n  <h6 class=\"no-anchor\" id=\"引數-1\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>componentFactory</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory&lt;C&gt;</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>rootSelectorOrNode</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p>可選值。預設值為 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef&lt;C&gt;</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"bootstrap-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"bootstrap-process\" translation-result=\"on\">引導過程<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-process\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Bootstrap process<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-process\"><i class=\"material-icons\">link</i></a></h5>\n\n<p translation-result=\"on\">引導元件時，Angular 會將其掛載到目標 DOM 元素上並啟動自動變更檢測。可以用 <code>rootSelectorOrNode</code> 引數提供目標 DOM 元素。</p><p translation-origin=\"off\">When bootstrapping a component, Angular mounts it onto a target DOM element\nand kicks off automatic change detection. The target DOM element can be\nprovided using the <code>rootSelectorOrNode</code> argument.</p>\n\n<p translation-result=\"on\">（可選）可以將元件安裝到與 componentType 的選擇器不匹配的 DOM 元素上。</p><p translation-origin=\"off\">If the target DOM element is not provided, Angular tries to find one on a page\nusing the <code>selector</code> of the component that is being bootstrapped\n(first matched element is used).</p>\n\n<h5 id=\"example\" translation-result=\"on\">範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#example\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#example\"><i class=\"material-icons\">link</i></a></h5>\n\n<p translation-result=\"on\">一般來說，我們在 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>bootstrap</code> 陣列中定義要引導的元件，但它需要我們在編寫應用程式程式碼時瞭解元件。</p><p translation-origin=\"off\">Generally, we define the component to bootstrap in the <code>bootstrap</code> array of <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>,\nbut it requires us to know the component while writing the application code.</p>\n\n<p translation-result=\"on\">想象這樣一種情況，我們必須等待 API 呼叫來決定要引導的元件。我們可以用 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>ngDoBootstrap</code> 鉤子並呼叫此方法來動態引導元件。</p><p translation-origin=\"off\">Imagine a situation where we have to wait for an API call to decide about the component to\nbootstrap. We can use the <code>ngDoBootstrap</code> hook of the <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> and call this method to\ndynamically bootstrap a component.</p>\n\n<code-example path=\"core/ts/platform/platform.ts\" region=\"componentSelector\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  this.fetchDataFromApi().then((componentName: string) =&gt; {\n    if (componentName === 'ComponentOne') {\n      appRef.bootstrap(ComponentOne);\n    } else {\n      appRef.bootstrap(ComponentTwo);\n    }\n  });\n}\n\n</code-example>\n<p translation-result=\"on\">可選地，可以將元件安裝到與引導元件的選擇器不匹配的 DOM 元素上。</p><p translation-origin=\"off\">Optionally, a component can be mounted onto a DOM element that does not match the\nselector of the bootstrapped component.</p>\n\n<p translation-result=\"on\">在下面的範例中，我們提供了一個 CSS 選擇器來匹配目標元素。</p><p translation-origin=\"off\">In the following example, we are providing a CSS selector to match the target element.</p>\n\n<code-example path=\"core/ts/platform/platform.ts\" region=\"cssSelector\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.bootstrap(ComponentThree, '#root-element');\n}\n\n</code-example>\n<p translation-result=\"on\">在此範例中，我們提供對 DOM 節點的參考。</p><p translation-origin=\"off\">While in this example, we are providing reference to a DOM node.</p>\n\n<code-example path=\"core/ts/platform/platform.ts\" region=\"domNode\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  const element = document.querySelector('#root-element');\n  appRef.bootstrap(ComponentFour, element);\n}\n\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"tick\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"tick\">tick()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#tick\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1268-L1308\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1268-L1308\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">呼叫此方法可以顯式處理變更檢測及其副作用。</p><p translation-origin=\"off\">Invoke this method to explicitly process change detection and its side-effects.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\"><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a></span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-2\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">在開發模式下，<code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> 還會執行第二個變更檢測週期，以確保沒有檢測到其他更改。如果在第二個週期內獲取了其他更改，則應用程式中的繫結就會產生副作用，這些副作用無法透過一次變更檢測過程解決。在這種情況下，Angular 就會引發錯誤，因為 Angular 應用程式只能進行一次變更檢測遍歷，在此過程中必須完成所有變更檢測。</p><p translation-origin=\"off\">In development mode, <code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> also performs a second change detection cycle to ensure that no\nfurther changes are detected. If additional changes are picked up during this second cycle,\nbindings in the app have side-effects that cannot be resolved in a single change detection\npass.\nIn this case, Angular throws an error, since an Angular application can only have one change\ndetection pass during which all change detection must complete.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"attachView\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"attachview\">attachView()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#attachview\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1309-L1323\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1309-L1323\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">附加檢視，以便對其進行髒檢查。檢視銷燬後將自動分離。如果檢視已附加到 ViewContainer，則會丟擲此錯誤。</p><p translation-origin=\"off\">Attaches a view so that it will be dirty checked.\nThe view will be automatically detached when it is destroyed.\nThis will throw if the view is already attached to a ViewContainer.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">attachView</span>(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-3\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>viewRef</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"detachView\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"detachview\">detachView()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#detachview\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1324-L1336\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1324-L1336\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">再次從髒檢查中分離檢視。</p><p translation-origin=\"off\">Detaches a view from dirty checking again.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">detachView</span>(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-4\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>viewRef</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"onDestroy\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"ondestroy\">onDestroy()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#ondestroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1376-L1397\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1376-L1397\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">註冊一個偵聽器，在例項被銷燬時呼叫。</p><p translation-origin=\"off\">Registers a listener to be called when an instance is destroyed.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">onDestroy</span>(callback: () =&gt; void): VoidFunction</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-5\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>callback</code>\n      </td>\n      <td class=\"param-type\"><code>() =&gt; void</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">新增為偵聽器的回呼(Callback)函式。</p><p translation-origin=\"off\">A callback function to add as a listener.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-5\">返回值</h6>\n  <p translation-result=\"on\">登出偵聽器的函式。</p><p translation-origin=\"off\"><code>VoidFunction</code>: A function which unregisters a listener.</p>\n\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"destroy\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"destroy\">destroy()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#destroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1398-L1426\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1398-L1426\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">銷燬此 <code><a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a></code> 表示的 Angular 應用程式。呼叫此函式將破壞關聯的環境注入器以及所有帶有檢視的引導元件。</p><p translation-origin=\"off\">Destroys an Angular application represented by this <code><a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a></code>. Calling this function\nwill destroy the associated environment injectors as well as all the bootstrapped components\nwith their views.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">destroy</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-6\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"返回值-6\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"is-stable-examples\"></a>\n<h3 id=\"isstable-examples-and-caveats\" translation-result=\"on\">isStable 範例和注意事項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#isstable-examples-and-caveats\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">isStable examples and caveats<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#isstable-examples-and-caveats\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">請注意關於 <code>isStable</code> 兩個要點，在下面的範例中進行了示範：</p><p translation-origin=\"off\">Note two important points about <code>isStable</code>, demonstrated in the examples below:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">如果在應用程式啟動時啟動任何型別的迴圈非同步任務，應用程式將永遠不會穩定（例如，對於輪詢過程，使用 <code>setInterval</code> 、 <code>setTimeout</code> 或使用 RxJS 運運算元如 <code>interval</code> ）；</p><p translation-origin=\"off\">the application will never be stable if you start any kind\nof recurrent asynchronous task when the application starts\n(for example for a polling process, started with a <code>setInterval</code>, a <code>setTimeout</code>\nor using RxJS operators like <code>interval</code>);</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>isStable</code> Observable 在 Angular 區域之外執行。</p><p translation-origin=\"off\">the <code>isStable</code> Observable runs outside of the Angular zone.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">假設你開始一個迴圈任務（這裡使用 RxJS <code>interval</code> 遞增一個計數器），同時訂閱 <code>isStable</code>。</p><p translation-origin=\"off\">Let's imagine that you start a recurrent task\n(here incrementing a counter, using RxJS <code>interval</code>),\nand at the same time subscribe to <code>isStable</code>.</p>\n\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n     filter(stable =&gt; stable)\n  ).subscribe(() =&gt; console.log('App is stable now');\n  interval(1000).subscribe(counter =&gt; console.log(counter));\n}\n</code-example>\n<p translation-result=\"on\">在此範例中，<code>isStable</code> 永遠不會發出 <code>true</code>，並且永遠不會記錄“A​​pp 現在穩定”的追蹤。</p><p translation-origin=\"off\">In this example, <code>isStable</code> will never emit <code>true</code>,\nand the trace \"App is stable now\" will never get logged.</p>\n\n<p translation-result=\"on\">如果你想在應用程式穩定時執行某些操作，則必須等待應用程式穩定後再開始輪詢過程。</p><p translation-origin=\"off\">If you want to execute something when the app is stable,\nyou have to wait for the application to be stable\nbefore starting your polling process.</p>\n\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    tap(stable =&gt; console.log('App is stable now')),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; console.log(counter));\n}\n</code-example>\n<p translation-result=\"on\">在此範例中，將記錄追蹤“應用程式現在穩定”，然後計數器開始每秒遞增。</p><p translation-origin=\"off\">In this example, the trace \"App is stable now\" will be logged\nand then the counter starts incrementing every second.</p>\n\n<p translation-result=\"on\">另請注意，此 Observable 在 Angular 區域之外執行，這意味著訂閱此 Observable 中的程式碼不會觸發變更檢測。</p><p translation-origin=\"off\">Note also that this Observable runs outside of the Angular zone,\nwhich means that the code in the subscription\nto this Observable will not trigger the change detection.</p>\n\n<p translation-result=\"on\">假設你不記錄計數器值，而是更新元件的一個欄位並將其顯示在其範本中。</p><p translation-origin=\"off\">Let's imagine that instead of logging the counter value,\nyou update a field of your component\nand display it in its template.</p>\n\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; this.value = counter);\n}\n</code-example>\n<p translation-result=\"on\">由於 <code>isStable</code> Observable 在 zone 外執行，<code>value</code> 欄位會正確更新，但範本不會重新整理！</p><p translation-origin=\"off\">As the <code>isStable</code> Observable runs outside the zone,\nthe <code>value</code> field will be updated properly,\nbut the template will not be refreshed!</p>\n\n<p translation-result=\"on\">你必須手動觸發變更檢測才能更新範本。</p><p translation-origin=\"off\">You'll have to manually trigger the change detection to update the template.</p>\n\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, cd: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; {\n    this.value = counter;\n    cd.detectChanges();\n  });\n}\n</code-example>\n<p translation-result=\"on\">或者讓訂閱回呼(Callback)在區域內執行。</p><p translation-origin=\"off\">Or make the subscription callback run inside the zone.</p>\n\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, zone: <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; zone.run(() =&gt; this.value = counter));\n}\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationModule\n - api/core/DoBootstrap\n - api/core/createComponent\n - api/platform-browser\n - api/platform-browser/bootstrapApplication\n - api/platform-browser/createApplication\n - api/platform-server/renderApplication\n - errors/NG0506\n - guide/bootstrapping\n - guide/component-interaction\n - guide/deprecations\n - guide/elements\n - guide/service-worker-communications\n - guide/universal\n - guide/zone\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/ApplicationRef#applicationref\n - api/core/ApplicationRef#attachView\n - api/core/ApplicationRef#attachview\n - api/core/ApplicationRef#bootstrap\n - api/core/ApplicationRef#bootstrap-process\n - api/core/ApplicationRef#bootstrap-usage-notes\n - api/core/ApplicationRef#componentTypes\n - api/core/ApplicationRef#components\n - api/core/ApplicationRef#destroy\n - api/core/ApplicationRef#destroyed\n - api/core/ApplicationRef#detachView\n - api/core/ApplicationRef#detachview\n - api/core/ApplicationRef#example\n - api/core/ApplicationRef#injector\n - api/core/ApplicationRef#instance-methods\n - api/core/ApplicationRef#instance-properties\n - api/core/ApplicationRef#isStable\n - api/core/ApplicationRef#isstable-examples-and-caveats\n - api/core/ApplicationRef#isstable-範例和注意事項\n - api/core/ApplicationRef#onDestroy\n - api/core/ApplicationRef#ondestroy\n - api/core/ApplicationRef#tick\n - api/core/ApplicationRef#usage-notes\n - api/core/ApplicationRef#viewCount\n - api/core/ApplicationRef#引導過程\n - api/core/ApplicationRef#提供於\n - api/core/ApplicationRef#範例\n - api/core/ChangeDetectorRef\n - api/core/ComponentFactory\n - api/core/ComponentRef\n - api/core/EnvironmentInjector\n - api/core/NgModule\n - api/core/NgZone\n - api/core/Type\n - api/core/ViewRef\n - api/core/testing/tick\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1160-L1267\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1268-L1308\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1309-L1323\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1324-L1336\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1376-L1397\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L1398-L1426\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/application_ref.ts?message=docs(core)%3A%20請簡述你的修改...#L839-L1445\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1160-L1267\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1268-L1308\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1309-L1323\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1324-L1336\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1376-L1397\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L1398-L1426\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/application_ref.ts#L839-L1445\n-->"}