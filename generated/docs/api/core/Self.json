{"id":"api/core/Self","title":"Self","contents":"\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/Self\", \"name\": \"Self\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/core/src/di/metadata.ts?message=docs(core)%3A%20請簡述你的修改...#L199-L201\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/core/src/di/metadata.ts#L199-L201\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"self\">Self<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Self#self\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label decorator\">decorator</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">將在建構函式引數上使用引數裝飾器，該裝飾器告訴 DI 框架從本地注入器開始解析依賴項。</p><p translation-origin=\"off\">Parameter decorator to be used on constructor parameters,\nwhich tells the DI framework to start dependency resolution from the local injector.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/core/Self#description\">檢視\"說明\"...</a></p>\n  </section>\n  \n\n  \n\n  \n\n\n\n  \n<section ng-should-translate=\"\" class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Self#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><p><code><a href=\"api/core/SkipSelf\" class=\"code-anchor\">SkipSelf</a></code></p>\n</li>\n    <li><p><code><a href=\"api/core/Optional\" class=\"code-anchor\">Optional</a></code></p>\n</li>\n  </ul>\n</section>\n\n\n  \n\n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Self#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">解析器在注入器層次結構中向上查詢，因此此類別的子級必須配置其自己的提供者或為空結果做好準備。</p><p translation-origin=\"off\">Resolution works upward through the injector hierarchy, so the children\nof this class must configure their own providers or be prepared for a <code>null</code> result.</p>\n\n\n  <p>Further information available in the <a href=\"api/core/Self#usage-notes\">Usage Notes</a>...</p>\n</section>\n\n\n\n<section ng-should-translate=\"\" class=\"decorator-options\">\n  <h2 id=\"options\">選項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Self#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n</section>\n\n  \n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Self#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">在以下範例中，依賴關係可以在例項化類本身時由本地注入器解析，而在例項化子代時不能解析。</p><p translation-origin=\"off\">In the following example, the dependency can be resolved\nby the local injector when instantiating the class itself, but not\nwhen instantiating a child.</p>\n\n<code-example path=\"core/di/ts/metadata_spec.ts\" region=\"Self\">\nclass Dependency {}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass NeedsDependency {\n  constructor(@<a href=\"api/core/Self\" class=\"code-anchor\">Self</a>() public dependency: Dependency) {}\n}\n\nlet inj = Injector.create({\n  providers: [\n    {provide: Dependency, deps: []},\n    {provide: NeedsDependency, deps: [[new <a href=\"api/core/Self\" class=\"code-anchor\">Self</a>(), Dependency]]}\n  ]\n});\nconst nd = inj.get(NeedsDependency);\n\nexpect(nd.dependency instanceof Dependency).toBe(true);\n\nconst child = Injector.create({\n  providers: [{provide: NeedsDependency, deps: [[new <a href=\"api/core/Self\" class=\"code-anchor\">Self</a>(), Dependency]]}],\n  parent: inj\n});\nexpect(() =&gt; child.get(NeedsDependency)).toThrowError();\n\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/InjectFlags\n - api/core/SkipSelf\n - guide/dependency-injection-in-action\n - guide/example-apps-list\n - guide/hierarchical-dependency-injection\n - guide/ivy-compatibility\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Injectable\n - api/core/Optional\n - api/core/Self#description\n - api/core/Self#options\n - api/core/Self#see-also\n - api/core/Self#self\n - api/core/Self#usage-notes\n - api/core/SkipSelf\n - https://github.com/angular/angular-cn/edit/aio/packages/core/src/di/metadata.ts?message=docs(core)%3A%20請簡述你的修改...#L199-L201\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/core/src/di/metadata.ts#L199-L201\n-->"}