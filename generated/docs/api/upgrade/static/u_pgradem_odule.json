{"id":"api/upgrade/static/UpgradeModule","title":"UpgradeModule","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/upgrade\", \"name\": \"@angular/upgrade\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/upgrade/static\", \"name\": \"@angular/upgrade/static\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/upgrade/static/UpgradeModule\", \"name\": \"UpgradeModule\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/upgrade\">@angular/upgrade</a> &gt; <a href=\"api/upgrade/static\">@angular/upgrade/static</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/static/src/upgrade_module.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L17-L441\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/static/src/upgrade_module.ts#L17-L441\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"upgrademodule\">UpgradeModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#upgrademodule\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label ngmodule\">ngmodule</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">一個 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>，你匯入它以提供 AngularJS 核心服務，並有一個用於引導混合升級應用程式的例項方法。</p><p translation-origin=\"off\">An <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>, which you import to provide AngularJS core services,\nand has an instance method used to bootstrap the hybrid upgrade application.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/upgrade/static/UpgradeModule#description\">檢視\"說明\"...</a></p>\n  </section>\n  <section ng-should-translate=\"\" class=\"ngmodule-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a> {\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeModule#%24injector\"><span class=\"member-name\">$injector</span>: any</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeModule#injector\"><span class=\"member-name\">injector</span>: Injector</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeModule#ngZone\"><span class=\"member-name\">ngZone</span>: NgZone</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeModule#bootstrap\"><span class=\"member-name\">bootstrap</span>(element: Element, modules: string[] = [], config?: any): any</a>\n}\n</code-example>\n\n</section>\n\n\n  \n  \n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\"><em>支援 AOT 編譯的混合升級應用程式的<a href=\"api?query=upgrade/static\">upgrade/靜態</a>庫的一部分</em></p><p translation-origin=\"off\"><em>Part of the <a href=\"api?query=upgrade/static\">upgrade/static</a>\nlibrary for hybrid upgrade apps that support AOT compilation</em></p>\n\n<p translation-result=\"on\"><code><a href=\"api/upgrade/static\" class=\"code-anchor\">upgrade/static</a></code> 包包含幫助器，允許在支援 AOT 編譯的混合升級應用程式中一起使用 AngularJS 和\nAngular 元件。</p><p translation-origin=\"off\">The <code><a href=\"api/upgrade/static\" class=\"code-anchor\">upgrade/static</a></code> package contains helpers that allow AngularJS and Angular components\nto be used together inside a hybrid upgrade application, which supports AOT compilation.</p>\n\n<p translation-result=\"on\">具體來說，<code><a href=\"api/upgrade/static\" class=\"code-anchor\">upgrade/static</a></code> 模組中的類和函式允許以下內容：</p><p translation-origin=\"off\">Specifically, the classes and functions in the <code><a href=\"api/upgrade/static\" class=\"code-anchor\">upgrade/static</a></code> module allow the following:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">建立一個包裝並公開 AngularJS 元件的 Angular 指令，以便可以在 Angular 範本中使用它。請參閱\n<code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code>。</p><p translation-origin=\"off\">Creation of an Angular directive that wraps and exposes an AngularJS component so\nthat it can be used in an Angular template. See <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">建立一個包裝並公開 Angular 元件的 AngularJS 指令，以便它可以在 AngularJS 範本中使用。請參閱\n<code><a href=\"api/upgrade/static/downgradeComponent\" class=\"code-anchor\">downgradeComponent</a></code>。</p><p translation-origin=\"off\">Creation of an AngularJS directive that wraps and exposes an Angular component so\nthat it can be used in an AngularJS template. See <code><a href=\"api/upgrade/static/downgradeComponent\" class=\"code-anchor\">downgradeComponent</a></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">建立一個包裝並公開 AngularJS 服務的 Angular 根注入器提供程式，以便可以將其注入 Angular\n上下文。請參閱下面的<a href=\"api/upgrade/static/UpgradeModule#upgrading-an-angular-1-service\">升級 AngularJS 服務</a>。</p><p translation-origin=\"off\">Creation of an Angular root injector provider that wraps and exposes an AngularJS\nservice so that it can be injected into an Angular context. See\n<a href=\"api/upgrade/static/UpgradeModule#upgrading-an-angular-1-service\">Upgrading an AngularJS service</a> below.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">建立一個包裝並公開 Angular 可注入物的 AngularJS 服務，以便可以將其注入 AngularJS\n上下文。請參閱 <code><a href=\"api/upgrade/static/downgradeInjectable\" class=\"code-anchor\">downgradeInjectable</a></code>。</p><p translation-origin=\"off\">Creation of an AngularJS service that wraps and exposes an Angular injectable\nso that it can be injected into an AngularJS context. See <code><a href=\"api/upgrade/static/downgradeInjectable\" class=\"code-anchor\">downgradeInjectable</a></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">混合 Angular 應用程式的引導，該應用程式包含在單個應用程式中共存的兩個框架。</p><p translation-origin=\"off\">Bootstrapping of a hybrid Angular application which contains both of the frameworks\ncoexisting in a single application.</p>\n\n</li>\n</ol>\n  <p>Further information is available in the <a href=\"api/upgrade/static/UpgradeModule#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n  \n  \n\n  \n<section ng-should-translate=\"\" class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>屬性</th>\n        <th>說明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"$injector\"></a>\n          <code class=\"\"><span class=\"member-name\">$injector</span>: any</code>\n        </td>\n        <td>\n          <div no-translate=\"\"><p translation-result=\"on\">升級應用程式的 AngularJS <code>$injector</code>。</p><p translation-origin=\"off\">The AngularJS <code>$injector</code> for the upgrade application.</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"injector\"></a>\n          <code class=\"\"><span class=\"member-name\">injector</span>: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>\n        </td>\n        <td>\n          <div no-translate=\"\"><p translation-result=\"on\">Angular 注入器</p><p translation-origin=\"off\">The Angular Injector</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngZone\"></a>\n          <code class=\"\"><span class=\"member-name\">ngZone</span>: <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a></code>\n        </td>\n        <td>\n          <div no-translate=\"\"><p>The bootstrap zone for the upgrade application</p></div>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n\n  \n<section ng-should-translate=\"\" class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"bootstrap\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"bootstrap\">bootstrap()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#bootstrap\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/static/src/upgrade_module.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L272-L440\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/static/src/upgrade_module.ts#L272-L440\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">從此 NgModule 引導 AngularJS 應用程式</p><p translation-origin=\"off\">Bootstrap an AngularJS application from this NgModule</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">bootstrap</span>(element: Element, modules: string[] = [], config?: any): any</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>element</code>\n      </td>\n      <td class=\"param-type\"><code>Element</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要引導 AngularJS 應用程式的元素</p><p translation-origin=\"off\">the element on which to bootstrap the AngularJS application</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>modules</code>\n      </td>\n      <td class=\"param-type\"><code>string[]</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要為此應用程式引導的 AngularJS 模組</p><p translation-result=\"on\">可選值。預設值為 <code>[]</code>。</p><p translation-origin=\"off\">the AngularJS modules to bootstrap for this application</p>\n\n\n        \n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>config</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">可選的額外 AngularJS 引導配置</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">optional extra AngularJS bootstrap configuration</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p translation-result=\"on\"><a href=\"https://docs.angularjs.org/api/ng/function/angular.bootstrap\">angular.bootstrap()</a>返回的值。</p><p translation-origin=\"off\"><code>any</code>: The value returned by\n<a href=\"https://docs.angularjs.org/api/ng/function/angular.bootstrap\">angular.bootstrap()</a>.</p>\n\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n  \n  <a name=\"providers\"></a>\n  \n<section ng-should-translate=\"\" class=\"providers\">\n    <h2 id=\"提供者\">提供者<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#提供者\"><i class=\"material-icons\">link</i></a></h2>\n    <table class=\"is-full-width list-table property-table\">\n      <thead>\n        <tr>\n          <th>提供者</th>\n        </tr>\n      </thead>\n      <tbody>\n      \n        <tr>\n          <td>\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">\n              angular1Providers\n            </code-example>\n          </td>\n        </tr>\n      \n      </tbody>\n    </table>\n  </section>\n\n  \n\n  \n  \n\n\n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <code-example language=\"ts\">\nimport {<a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a>} from '@angular/upgrade/<a href=\"api/upgrade/static\" class=\"code-anchor\">static</a>';\n</code-example>\n<p translation-result=\"on\">另請參閱下面的 <a href=\"api/upgrade/static/UpgradeModule#examples\">範例</a>。</p><p translation-origin=\"off\">See also the <a href=\"api/upgrade/static/UpgradeModule#examples\">examples</a> below.</p>\n\n<h3 id=\"mental-model\" translation-result=\"on\">心理模型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#mental-model\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Mental Model<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#mental-model\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在推理混合應用程式的工作方式時，有一個心智模型會很有用，它可以描述正在發生的事情並在最低級別解釋正在發生的事情。</p><p translation-origin=\"off\">When reasoning about how a hybrid application works it is useful to have a mental model which\ndescribes what is happening and explains what is happening at the lowest level.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在單個應用程式中執行有兩個獨立的框架，每個框架都將另一個框架視為黑盒。</p><p translation-origin=\"off\">There are two independent frameworks running in a single application, each framework treats\nthe other as a black box.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">頁面上的每個 DOM 元素都歸一個框架所有。無論哪個框架例項化此元素，都是所有者。每個框架都只更新自己的 DOM 元素/互動，而忽略其他框架。</p><p translation-origin=\"off\">Each DOM element on the page is owned exactly by one framework. Whichever framework\ninstantiated the element is the owner. Each framework only updates/interacts with its own\nDOM elements and ignores others.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">AngularJS 指令始終在 AngularJS 框架程式碼庫中執行，無論它們在何處例項化。</p><p translation-origin=\"off\">AngularJS directives always execute inside the AngularJS framework codebase regardless of\nwhere they are instantiated.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">Angular 元件始終在 Angular 框架程式碼庫中執行，無論它們在何處例項化。</p><p translation-origin=\"off\">Angular components always execute inside the Angular framework codebase regardless of\nwhere they are instantiated.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">AngularJS 元件可以“升級”為 Angular 元件。這是透過定義 Angular 指令來實現的，該指令在 DOM 中的位置引導 AngularJS 元件。請參閱 <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code>。</p><p translation-origin=\"off\">An AngularJS component can be \"upgraded\"\" to an Angular component. This is achieved by\ndefining an Angular directive, which bootstraps the AngularJS component at its location\nin the DOM. See <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">Angular 元件可以“降級”為 AngularJS 元件。這是透過定義一個 AngularJS 指令來實現的，該指令在 DOM 中的位置引導 Angular 元件。請參閱 <code><a href=\"api/upgrade/static/downgradeComponent\" class=\"code-anchor\">downgradeComponent</a></code>。</p><p translation-origin=\"off\">An Angular component can be \"downgraded\" to an AngularJS component. This is achieved by\ndefining an AngularJS directive, which bootstraps the Angular component at its location\nin the DOM. See <code><a href=\"api/upgrade/static/downgradeComponent\" class=\"code-anchor\">downgradeComponent</a></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">每當例項化“升級”/“降級”元件時，宿主元素就由進行例項化的框架擁有。然後另一個框架例項化並擁有該元件的檢視。</p><p translation-origin=\"off\">Whenever an \"upgraded\"/\"downgraded\" component is instantiated the host element is owned by\nthe framework doing the instantiation. The other framework then instantiates and owns the\nview for that component.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">這意味著元件繫結將始終遵循例項化框架的語義。</p><p translation-origin=\"off\">This implies that the component bindings will always follow the semantics of the\ninstantiation framework.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">DOM 屬性由擁有當前範本的框架解析。所以 AngularJS 範本中的屬性必須使用 kebab-case，而 AngularJS 範本必須使用 camelCase。</p><p translation-origin=\"off\">The DOM attributes are parsed by the framework that owns the current template. So\nattributes in AngularJS templates must use kebab-case, while AngularJS templates must use\ncamelCase.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">然而，範本繫結語法將始終使用 Angular 樣式，例如用於屬性繫結的方括號 ( <code>[...]</code> )。</p><p translation-origin=\"off\">However the template binding syntax will always use the Angular style, e.g. square\nbrackets (<code>[...]</code>) for property binding.</p>\n\n</li>\n</ol>\n</li>\n<li>\n<p translation-result=\"on\">Angular 首先被引導； AngularJS 是第二個載入程式。AngularJS 始終擁有應用程式的根元件。</p><p translation-origin=\"off\">Angular is bootstrapped first; AngularJS is bootstrapped second. AngularJS always owns the\nroot component of the application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">新應用程式在 Angular 區域中執行，因此它不再需要呼叫 <code>$apply()</code>。</p><p translation-origin=\"off\">The new application is running in an Angular zone, and therefore it no longer needs calls to\n<code>$apply()</code>.</p>\n\n</li>\n</ol>\n<h3 id=\"the-upgrademodule-class\" translation-result=\"on\"><code><a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a></code> 模組類<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#upgrademodule-模組類\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">The <code><a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a></code> class<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#the-upgrademodule-class\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">這個類是一個 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>，你匯入它來提供 AngularJS 核心服務，並且有一個用於引導混合升級應用程式的例項方法。</p><p translation-origin=\"off\">This class is an <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>, which you import to provide AngularJS core services,\nand has an instance method used to bootstrap the hybrid upgrade application.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">核心 AngularJS 服務</p><p translation-origin=\"off\">Core AngularJS services<br>\nImporting this <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> will add providers for the core\n<a href=\"https://docs.angularjs.org/api/ng/service\">AngularJS services</a> to the root injector.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">載入程式</p><p translation-origin=\"off\">Bootstrap<br>\nThe runtime instance of this class contains a <a href=\"api/upgrade/static/UpgradeModule#bootstrap\">`bootstrap()`</a>\nmethod, which you use to bootstrap the top level AngularJS module onto an element in the\nDOM for the hybrid upgrade app.</p>\n\n<p translation-result=\"on\">它還包含存取 <a href=\"api/upgrade/static/UpgradeModule#injector\">root injector</a>、bootstrap <code><a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a></code> 和<a href=\"https://docs.angularjs.org/api/auto/service/$injector\">AngularJS $injector</a>的屬性。</p><p translation-origin=\"off\">It also contains properties to access the <a href=\"api/upgrade/static/UpgradeModule#injector\">root injector</a>, the\nbootstrap <code><a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a></code> and the\n<a href=\"https://docs.angularjs.org/api/auto/service/$injector\">AngularJS $injector</a>.</p>\n\n</li>\n</ul>\n<h3 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#examples\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#examples\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">將 <code><a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a></code> 匯入你的最上層 <a href=\"api/core/NgModule\">Angular `NgModule`</a>。</p><p translation-origin=\"off\">Import the <code><a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a></code> into your top level <a href=\"api/core/NgModule\">Angular `NgModule`</a>.</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"ng2-module\">\n// This <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> represents the Angular pieces of the application\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [Ng2HeroesComponent, Ng1HeroComponentWrapper],\n  providers: [\n    HeroesService,\n    // Register an Angular provider whose value is the \"upgraded\" AngularJS service\n    {provide: TextFormatter, useFactory: (i: any) =&gt; i.get('textFormatter'), deps: ['$injector']}\n  ],\n  // We must import `<a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a>` to get access to the AngularJS core services\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a>]\n})\nexport class Ng2AppModule {\n}\n\n</code-example>\n<p translation-result=\"on\">然後將 <code><a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a></code> 注入 Angular <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 並使用它在 <code>ngDoBootstrap()</code> 方法中引導最上層<a href=\"https://docs.angularjs.org/api/ng/type/angular.Module\">AngularJS 模組</a>。</p><p translation-origin=\"off\">Then inject <code><a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a></code> into your Angular <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> and use it to bootstrap the top level\n<a href=\"https://docs.angularjs.org/api/ng/type/angular.Module\">AngularJS module</a> in the\n<code>ngDoBootstrap()</code> method.</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"bootstrap-ng1\">\nexport class Ng2AppModule {\n  constructor(private upgrade: <a href=\"api/upgrade/static/UpgradeModule\" class=\"code-anchor\">UpgradeModule</a>) {}\n\n  ngDoBootstrap() {\n    // We bootstrap the AngularJS app.\n    this.upgrade.bootstrap(document.body, [ng1AppModule.name]);\n  }\n}\n\n</code-example>\n<p translation-result=\"on\">最後，透過引導你的最上層 Angular <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 來啟動整個過程。</p><p translation-origin=\"off\">Finally, kick off the whole process, by bootstrapping your top level Angular <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>.</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"bootstrap-ng2\">\n// We bootstrap the Angular module as we would do in a normal Angular app.\n// (We are using the dynamic <a href=\"api/animations/browser\" class=\"code-anchor\">browser</a> platform as this example has not been compiled AOT.)\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(Ng2AppModule);\n\n</code-example>\n<a id=\"upgrading-an-angular-1-service\"></a>\n<h3 id=\"upgrading-an-angularjs-service\" translation-result=\"on\">升級 AngularJS 服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#upgrading-an-angularjs-service\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Upgrading an AngularJS service<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeModule#upgrading-an-angularjs-service\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">沒有用於升級 AngularJS 服務的特定 API。相反，你應該遵循以下食譜：</p><p translation-origin=\"off\">There is no specific API for upgrading an AngularJS service. Instead you should just follow the\nfollowing recipe:</p>\n\n<p translation-result=\"on\">假設你有一個 AngularJS 服務：</p><p translation-origin=\"off\">Let's say you have an AngularJS service:</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"ng1-text-formatter-service\">\nexport class TextFormatter {\n  titleCase(value: string) {\n    return value.replace(/((^|\\s)[a-z])/g, (_, c) =&gt; c.toUpperCase());\n  }\n}\n\n// This AngularJS service will be \"upgraded\" to be used in Angular\nng1AppModule.service('textFormatter', [TextFormatter]);\n\n</code-example>\n<p translation-result=\"on\">然後你應該定義一個 Angular provider 來包含在你的 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> <code>providers</code> 屬性中。</p><p translation-origin=\"off\">Then you should define an Angular provider to be included in your <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> <code>providers</code>\nproperty.</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"upgrade-ng1-service\">\n// Register an Angular provider whose value is the \"upgraded\" AngularJS service\n{provide: TextFormatter, useFactory: (i: any) =&gt; i.get('textFormatter'), deps: ['$injector']}\n\n</code-example>\n<p translation-result=\"on\">然後，你可以透過將“升級後的”AngularJS 服務注入到 Angular 元件或服務中來使用它。</p><p translation-origin=\"off\">Then you can use the \"upgraded\" AngularJS service by injecting it into an Angular component\nor service.</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"use-ng1-upgraded-service\">\nconstructor(textFormatter: TextFormatter) {\n  // Change all the hero names to title case, using the \"upgraded\" AngularJS service\n  this.heroes.forEach((hero: Hero) =&gt; hero.name = textFormatter.titleCase(hero.name));\n}\n\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/upgrade/$locationShimProvider\n - api/router/upgrade/RouterUpgradeInitializer\n - api/router/upgrade/locationSyncBootstrapListener\n - api/router/upgrade/setUpLocationSync\n - api/upgrade/static\n - api/upgrade/static/downgradeInjectable\n - api/upgrade/static/downgradeModule\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - guide/upgrade\n - guide/upgrade-performance\n-->\n<!-- links from this doc:\n - /api\n - api/animations/browser\n - api/core/Injector\n - api/core/NgModule\n - api/core/NgZone\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - api/upgrade\n - api/upgrade/static\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/UpgradeModule#%24injector\n - api/upgrade/static/UpgradeModule#bootstrap\n - api/upgrade/static/UpgradeModule#description\n - api/upgrade/static/UpgradeModule#examples\n - api/upgrade/static/UpgradeModule#injector\n - api/upgrade/static/UpgradeModule#instance-methods\n - api/upgrade/static/UpgradeModule#instance-properties\n - api/upgrade/static/UpgradeModule#mental-model\n - api/upgrade/static/UpgradeModule#ngZone\n - api/upgrade/static/UpgradeModule#the-upgrademodule-class\n - api/upgrade/static/UpgradeModule#upgrademodule\n - api/upgrade/static/UpgradeModule#upgrademodule-模組類\n - api/upgrade/static/UpgradeModule#upgrading-an-angular-1-service\n - api/upgrade/static/UpgradeModule#upgrading-an-angularjs-service\n - api/upgrade/static/UpgradeModule#usage-notes\n - api/upgrade/static/UpgradeModule#例子\n - api/upgrade/static/UpgradeModule#升級-angularjs-服務\n - api/upgrade/static/UpgradeModule#心理模型\n - api/upgrade/static/UpgradeModule#提供者\n - api/upgrade/static/downgradeComponent\n - api/upgrade/static/downgradeInjectable\n - api?query=upgrade/static\n - https://docs.angularjs.org/api/auto/service/$injector\n - https://docs.angularjs.org/api/ng/function/angular.bootstrap\n - https://docs.angularjs.org/api/ng/service\n - https://docs.angularjs.org/api/ng/type/angular.Module\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/static/src/upgrade_module.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L17-L441\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/static/src/upgrade_module.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L272-L440\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/static/src/upgrade_module.ts#L17-L441\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/static/src/upgrade_module.ts#L272-L440\n-->"}