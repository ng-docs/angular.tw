{"id":"api/upgrade/static/UpgradeComponent","title":"UpgradeComponent","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/upgrade\", \"name\": \"@angular/upgrade\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/upgrade/static\", \"name\": \"@angular/upgrade/static\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/upgrade/static/UpgradeComponent\", \"name\": \"UpgradeComponent\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/upgrade\">@angular/upgrade</a> &gt; <a href=\"api/upgrade/static\">@angular/upgrade/static</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/static/src/upgrade_component.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L29-L343\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/static/src/upgrade_component.ts#L29-L343\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"upgradecomponent\">UpgradeComponent<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#upgradecomponent\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label directive\">directive</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">允許從 Angular 使用 AngularJS 元件的幫助器類別。</p><p translation-origin=\"off\">A helper class that allows an AngularJS component to be used from Angular.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/upgrade/static/UpgradeComponent#description\">檢視\"說明\"...</a></p>\n  </section>\n  \n\n  \n\n  \n  <section ng-should-translate=\"\" class=\"description\">\n    <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p translation-result=\"on\"><em>支援 AOT 編譯的混合升級應用程式的<a href=\"api?query=upgrade%2Fstatic\">upgrade/靜態</a>庫的一部分。</em></p><p translation-origin=\"off\"><em>Part of the <a href=\"api?query=upgrade%2Fstatic\">upgrade/static</a>\nlibrary for hybrid upgrade apps that support AOT compilation.</em></p>\n\n<p translation-result=\"on\">此幫助器類應該用作建立包裝需要“升級”的 AngularJS 元件的 Angular 指令的基底類別。</p><p translation-origin=\"off\">This helper class should be used as a base class for creating Angular directives\nthat wrap AngularJS components that need to be \"upgraded\".</p>\n\n\n    <h3 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#examples\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#examples\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">假設你有一個名為 <code>ng1Hero</code> 的 AngularJS 元件，需要在 Angular 範本中使用。</p><p translation-origin=\"off\">Let's assume that you have an AngularJS component called <code>ng1Hero</code> that needs\nto be made available in Angular templates.</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"ng1-hero\">\n// This AngularJS component will be \"upgraded\" to be used in Angular\nng1AppModule.component('ng1Hero', {\n  bindings: {hero: '&lt;', onRemove: '&amp;'},\n  transclude: true,\n  template: `&lt;div class=\"title\" ng-transclude&gt;&lt;/div&gt;\n             &lt;h2&gt;{{ $ctrl.hero.name }}&lt;/h2&gt;\n             &lt;p&gt;{{ $ctrl.hero.description }}&lt;/p&gt;\n             &lt;button ng-click=\"$ctrl.onRemove()\"&gt;Remove&lt;/button&gt;`\n});\n\n</code-example>\n<p translation-result=\"on\">我們必須建立一個 <code><a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code>，使這個 AngularJS 元件在 Angular 範本中可用。</p><p translation-origin=\"off\">We must create a <code><a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code> that will make this AngularJS component\navailable inside Angular templates.</p>\n\n<code-example path=\"upgrade/static/ts/full/module.ts\" region=\"ng1-hero-wrapper\">\n// This Angular directive will act as an interface to the \"upgraded\" AngularJS component\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'ng1-hero'})\nexport class Ng1HeroComponentWrapper extends <a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a> {\n  // The names of the input and output properties here must match the names of the\n  // `&lt;` and `&amp;` bindings in the AngularJS component that is being wrapped\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() hero!: Hero;\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() onRemove!: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;void&gt;;\n\n  constructor(elementRef: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>, injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>) {\n    // We must pass the name of the directive as used by AngularJS to the super\n    super('ng1Hero', elementRef, injector);\n  }\n}\n\n</code-example>\n<p translation-result=\"on\">在此範例中，你可以看到我們必須從 <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code> 基底類別派生，但也提供了一個 <a href=\"api/core/Directive\">`@Directive`</a> 裝飾器。這是因為 AOT 編譯器要求此資訊在編譯時靜態可用。</p><p translation-origin=\"off\">In this example you can see that we must derive from the <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code>\nbase class but also provide an <a href=\"api/core/Directive\">`@Directive`</a> decorator. This is\nbecause the AOT compiler requires that this information is statically available at\ncompile time.</p>\n\n<p translation-result=\"on\">請注意，我們必須執行以下操作：</p><p translation-origin=\"off\">Note that we must do the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">指定指令的選擇器 ( <code>ng1-hero</code> )</p><p translation-origin=\"off\">specify the directive's selector (<code>ng1-hero</code>)</p>\n\n</li>\n<li>\n<p translation-result=\"on\">指定 AngularJS 元件期望的所有輸入和輸出</p><p translation-origin=\"off\">specify all inputs and outputs that the AngularJS component expects</p>\n\n</li>\n<li>\n<p translation-result=\"on\">派生自 <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code></p><p translation-origin=\"off\">derive from <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">從建構函式呼叫基底類別，傳遞</p><p translation-origin=\"off\">call the base class from the constructor, passing</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">元件的 AngularJS 名稱 ( <code>ng1Hero</code> )</p><p translation-origin=\"off\">the AngularJS name of the component (<code>ng1Hero</code>)</p>\n\n</li>\n<li>\n<p translation-result=\"on\">元件包裝器的 <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> 和 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code></p><p translation-origin=\"off\">the <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> and <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> for the component wrapper</p>\n\n</li>\n</ul>\n</li>\n</ul>\n\n  </section>\n\n  \n  \n  \n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core/DoCheck\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/upgrade/static\n - api/upgrade/static/UpgradeModule\n - api/upgrade/static/downgradeModule\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - guide/upgrade\n-->\n<!-- links from this doc:\n - /api\n - api/core/Directive\n - api/core/ElementRef\n - api/core/EventEmitter\n - api/core/Injector\n - api/core/Input\n - api/core/Output\n - api/upgrade\n - api/upgrade/static\n - api/upgrade/static/UpgradeComponent#description\n - api/upgrade/static/UpgradeComponent#examples\n - api/upgrade/static/UpgradeComponent#upgradecomponent\n - api/upgrade/static/UpgradeComponent#例子\n - api?query=upgrade%2Fstatic\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/static/src/upgrade_component.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L29-L343\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/static/src/upgrade_component.ts#L29-L343\n-->"}