{"id":"api/upgrade/UpgradeAdapter","title":"UpgradeAdapter","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/upgrade\", \"name\": \"@angular/upgrade\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/upgrade/UpgradeAdapter\", \"name\": \"UpgradeAdapter\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/upgrade\">@angular/upgrade</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L21-L792\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L21-L792\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"upgradeadapter\">UpgradeAdapter<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#upgradeadapter\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"api-status-label deprecated\">已棄用</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">使用 <code><a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a></code> 允許 AngularJS 和 Angular 在單個應用程式中共存。</p><p translation-origin=\"off\">Use <code><a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a></code> to allow AngularJS and Angular to coexist in a single application.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/upgrade/UpgradeAdapter#description\">檢視\"說明\"...</a></p>\n  </section>\n<section ng-should-translate=\"\" class=\"deprecated\">\n  <p><strong>已棄用:</strong> Deprecated since v5. Use <code><a href=\"api/upgrade/static\" class=\"code-anchor\">upgrade/static</a></code> instead, which also supports\n<a href=\"guide/aot-compiler\">Ahead-of-Time compilation</a>.</p>\n<p>自 v5 後已棄用。使用 <code><a href=\"api/upgrade/static\" class=\"code-anchor\">upgrade/static</a></code> 代替，它也支援<a href=\"guide/aot-compiler\">Ahead-of-Time compilation</a>。</p>\n\n</section><section ng-should-translate=\"\" class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a> {\n  <a class=\"code-anchor\" href=\"api/upgrade/UpgradeAdapter#constructor()\"><span class=\"member-name\">constructor</span>(ng2AppModule: Type&lt;any&gt;, compilerOptions?: CompilerOptions)</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/UpgradeAdapter#downgradeNg2Component\"><span class=\"member-name\">downgradeNg2Component</span>(component: Type&lt;any&gt;): Function</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/UpgradeAdapter#upgradeNg1Component\"><span class=\"member-name\">upgradeNg1Component</span>(name: string): Type&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/UpgradeAdapter#registerForNg1Tests\"><span class=\"member-name\">registerForNg1Tests</span>(modules?: string[]): UpgradeAdapterRef</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/UpgradeAdapter#bootstrap\"><span class=\"member-name\">bootstrap</span>(element: Element, modules?: any[], config?: IAngularBootstrapConfig): UpgradeAdapterRef</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/UpgradeAdapter#upgradeNg1Provider\"><span class=\"member-name\">upgradeNg1Provider</span>(name: string, options?: { asToken: any; })</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/UpgradeAdapter#downgradeNg2Provider\"><span class=\"member-name\">downgradeNg2Provider</span>(token: any): Function</a>\n}\n</code-example>\n\n</section>\n\n  \n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\"><code><a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a></code> 允許：</p><p translation-origin=\"off\">The <code><a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a></code> allows:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">從 AngularJS 元件指令建立 Angular 元件（參見[UpgradeAdapter#upgradeNg1Component()][UpgradeAdapter#upgradeNg1Component()] ）</p><p translation-origin=\"off\">creation of Angular component from AngularJS component directive\n(See [UpgradeAdapter#upgradeNg1Component()])</p>\n\n</li>\n<li>\n<p translation-result=\"on\">從 Angular 元件建立 AngularJS 指令。（參見[UpgradeAdapter#downgradeNg2Component()][UpgradeAdapter#downgradeNg2Component()] ）</p><p translation-origin=\"off\">creation of AngularJS directive from Angular component.\n(See [UpgradeAdapter#downgradeNg2Component()])</p>\n\n</li>\n<li>\n<p translation-result=\"on\">混合 Angular 應用程式的引導，該應用程式包含在單個應用程式中共存的兩個框架。</p><p translation-origin=\"off\">Bootstrapping of a hybrid Angular application which contains both of the frameworks\ncoexisting in a single application.</p>\n\n</li>\n</ol>\n  <p>Further information is available in the <a href=\"api/upgrade/UpgradeAdapter#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n<h2 id=\"constructor\">建構函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#constructor\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">constructor</span>(ng2AppModule: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;, compilerOptions?: <a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a>)</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>ng2AppModule</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>compilerOptions</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a></code></td>\n      <td class=\"param-description\">\n        <p>可選值。預設值為 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<section ng-should-translate=\"\" class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"downgradeNg2Component\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"downgradeng2component\">downgradeNg2Component()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#downgradeng2component\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L172-L250\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L172-L250\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">允許從 AngularJS 使用 Angular 元件。</p><p translation-origin=\"off\">Allows Angular Component to be used from AngularJS.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">downgradeNg2Component</span>(component: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;): Function</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-1\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>component</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>Function</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">使用 <code>downgradeNg2Component</code> 從 Angular 元件建立 AngularJS 指令定義工廠。介面卡將從 AngularJS 範本中引導 Angular 元件。</p><p translation-origin=\"off\">Use <code>downgradeNg2Component</code> to create an AngularJS Directive Definition Factory from\nAngular Component. The adapter will bootstrap Angular component from within the\nAngularJS template.</p>\n\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"downgradeNg2Component-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#downgradeNg2Component-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"mental-model\" translation-result=\"on\">心理模型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#mental-model\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Mental Model<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#mental-model\"><i class=\"material-icons\">link</i></a></h5>\n\n<ol>\n<li>\n<p translation-result=\"on\">該元件是透過在 AngularJS 範本中列出來例項化的。這意味著宿主元素由 AngularJS 控制，但元件的檢視將由 Angular 控制。</p><p translation-origin=\"off\">The component is instantiated by being listed in AngularJS template. This means that the\nhost element is controlled by AngularJS, but the component's view will be controlled by\nAngular.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">即使元件是在 AngularJS 中例項化的，它也將使用 Angular 語法。必須這樣做，因為我們必須遵循 Angular 元件，而不是宣告應該如何解釋屬性。</p><p translation-origin=\"off\">Even thought the component is instantiated in AngularJS, it will be using Angular\nsyntax. This has to be done, this way because we must follow Angular components do not\ndeclare how the attributes should be interpreted.</p>\n\n</li>\n<li>\n<p><code>ng-model</code> is controlled by AngularJS and communicates with the downgraded Angular component\nby way of the <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> interface from <code>@angular/forms</code>. Only components that\nimplement this interface are eligible.</p>\n</li>\n</ol>\n<h5 id=\"supported-features\">Supported Features<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#supported-features\"><i class=\"material-icons\">link</i></a></h5>\n<ul>\n<li>Bindings:\n<ul>\n<li>Attribute: <code>&lt;comp name=\"World\"&gt;</code></li>\n<li>Interpolation:  <code>&lt;comp greeting=\"Hello {{name}}!\"&gt;</code></li>\n<li>Expression:  <code>&lt;comp [name]=\"username\"&gt;</code></li>\n<li>Event:  <code>&lt;comp (close)=\"doSomething()\"&gt;</code></li>\n<li>ng-model: <code>&lt;comp ng-model=\"name\"&gt;</code></li>\n</ul>\n</li>\n<li>Content projection: yes</li>\n</ul>\n<h5 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst adapter = new <a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a>(<a href=\"api/core/forwardRef\" class=\"code-anchor\">forwardRef</a>(() =&gt; MyNg2Module));\nconst module = angular.module('myExample', []);\nmodule.directive('greet', adapter.downgradeNg2Component(Greeter));\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'greet',\n  template: '{{salutation}} {{name}}! - &lt;ng-content&gt;&lt;/ng-content&gt;'\n})\nclass Greeter {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() salutation: string;\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() name: string;\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [Greeter],\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>]\n})\nclass MyNg2Module {}\n\ndocument.body.innerHTML =\n  'ng1 template: &lt;greet salutation=\"Hello\" [name]=\"world\"&gt;text&lt;/greet&gt;';\n\nadapter.bootstrap(document.body, ['myExample']).ready(function() {\n  expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n});\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"upgradeNg1Component\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"upgradeng1component\">upgradeNg1Component()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#upgradeng1component\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L251-L415\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L251-L415\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">允許從 Angular 使用 AngularJS 元件。</p><p translation-origin=\"off\">Allows AngularJS Component to be used from Angular.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">upgradeNg1Component</span>(name: string): <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-2\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">使用 <code>upgradeNg1Component</code> 從 AngularJS Component 指令建立一個 Angular 元件。介面卡將從 Angular 範本中引導 AngularJS 元件。</p><p translation-origin=\"off\">Use <code>upgradeNg1Component</code> to create an Angular component from AngularJS Component\ndirective. The adapter will bootstrap AngularJS component from within the Angular\ntemplate.</p>\n\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"upgradeNg1Component-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#upgradeNg1Component-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"mental-model-1\" translation-result=\"on\">心理模型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#mental-model-1\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Mental Model<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#mental-model-1\"><i class=\"material-icons\">link</i></a></h5>\n\n<ol>\n<li>\n<p translation-result=\"on\">該元件是透過在 Angular 範本中列出來例項化的。這意味著宿主元素由 Angular 控制，但元件的檢視將由 AngularJS 控制。</p><p translation-origin=\"off\">The component is instantiated by being listed in Angular template. This means that the\nhost element is controlled by Angular, but the component's view will be controlled by\nAngularJS.</p>\n\n</li>\n</ol>\n<h5 id=\"supported-features-1\" translation-result=\"on\">支援的特性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#supported-features-1\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Supported Features<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#supported-features-1\"><i class=\"material-icons\">link</i></a></h5>\n\n<ul>\n<li>\n<p translation-result=\"on\">繫結：</p><p translation-origin=\"off\">Bindings:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">屬性：<code>&lt;comp name=\"World\"&gt;</code></p><p translation-origin=\"off\">Attribute: <code>&lt;comp name=\"World\"&gt;</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">插值：<code>&lt;comp greeting=\"Hello {{name}}!\"&gt;</code></p><p translation-origin=\"off\">Interpolation:  <code>&lt;comp greeting=\"Hello {{name}}!\"&gt;</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">表示式：<code>&lt;comp [name]=\"username\"&gt;</code></p><p translation-origin=\"off\">Expression:  <code>&lt;comp [name]=\"username\"&gt;</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">事件：<code>&lt;comp (close)=\"doSomething()\"&gt;</code></p><p translation-origin=\"off\">Event:  <code>&lt;comp (close)=\"doSomething()\"&gt;</code></p>\n\n</li>\n</ul>\n</li>\n<li>\n<p translation-result=\"on\">透傳：是</p><p translation-origin=\"off\">Transclusion: yes</p>\n\n</li>\n<li>\n<p translation-result=\"on\">僅支援<a href=\"https://docs.angularjs.org/api/ng/service/$compile\">指令定義物件</a>的某些特性：</p><p translation-origin=\"off\">Only some of the features of\n<a href=\"https://docs.angularjs.org/api/ng/service/$compile\">Directive Definition Object</a> are\nsupported:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>compile</code>：不支援，因為宿主元素歸 Angular 所有，它不允許在編譯期間修改 DOM 結構。</p><p translation-origin=\"off\"><code>compile</code>: not supported because the host element is owned by Angular, which does\nnot allow modifying DOM structure during compilation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>controller</code>：支援。（注意：不支援注入 <code>$attrs</code> 和 <code>$transclude</code>。）</p><p translation-origin=\"off\"><code>controller</code>: supported. (NOTE: injection of <code>$attrs</code> and <code>$transclude</code> is not supported.)</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>controllerAs</code>：支援。</p><p translation-origin=\"off\"><code>controllerAs</code>: supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>bindToController</code>：支援。</p><p translation-origin=\"off\"><code>bindToController</code>: supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>link</code>：支援。（注意：僅支援預連結功能。）</p><p translation-origin=\"off\"><code>link</code>: supported. (NOTE: only pre-link function is supported.)</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>name</code>：支援。</p><p translation-origin=\"off\"><code>name</code>: supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>priority</code>：忽略。</p><p translation-origin=\"off\"><code>priority</code>: ignored.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>replace</code>：不支援。</p><p translation-origin=\"off\"><code>replace</code>: not supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>require</code>：支援。</p><p translation-origin=\"off\"><code>require</code>: supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>restrict</code>：必須設定為 'E'。</p><p translation-origin=\"off\"><code>restrict</code>: must be set to 'E'.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>scope</code>：支援。</p><p translation-origin=\"off\"><code>scope</code>: supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>template</code>：支援。</p><p translation-origin=\"off\"><code>template</code>: supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>templateUrl</code>：支援。</p><p translation-origin=\"off\"><code>templateUrl</code>: supported.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>terminal</code>：被忽略。</p><p translation-origin=\"off\"><code>terminal</code>: ignored.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>transclude</code>：支援。</p><p translation-origin=\"off\"><code>transclude</code>: supported.</p>\n\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"example-1\" translation-result=\"on\">範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-1\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-1\"><i class=\"material-icons\">link</i></a></h5>\n\n<code-example>\nconst adapter = new <a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a>(<a href=\"api/core/forwardRef\" class=\"code-anchor\">forwardRef</a>(() =&gt; MyNg2Module));\nconst module = angular.module('myExample', []);\n\nmodule.directive('greet', function() {\n  return {\n    scope: {salutation: '=', name: '=' },\n    template: '{{salutation}} {{name}}! - &lt;span ng-transclude&gt;&lt;/span&gt;'\n  };\n});\n\nmodule.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng2',\n  template: 'ng2 template: &lt;greet salutation=\"Hello\" [name]=\"world\"&gt;text&lt;/greet&gt;'\n})\nclass Ng2Component {\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>]\n})\nclass MyNg2Module {}\n\ndocument.body.innerHTML = '&lt;ng2&gt;&lt;/ng2&gt;';\n\nadapter.bootstrap(document.body, ['myExample']).ready(function() {\n  expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n});\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"registerForNg1Tests\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"registerforng1tests\">registerForNg1Tests()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#registerforng1tests\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L416-L482\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L416-L482\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">註冊介面卡的 AngularJS 升級模組以在 AngularJS 中進行單元測試。使用它而不是 <code>angular.mock.module()</code> 將升級模組載入到 AngularJS 測試注入器中。</p><p translation-origin=\"off\">Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\nUse this instead of <code>angular.mock.module()</code> to load the upgrade module into\nthe AngularJS testing injector.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerForNg1Tests</span>(modules?: string[]): <a href=\"api/upgrade/UpgradeAdapterRef\" class=\"code-anchor\">UpgradeAdapterRef</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-3\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>modules</code>\n      </td>\n      <td class=\"param-type\"><code>string[]</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">any AngularJS modules that the upgrade module should depend upon</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p translation-result=\"on\">一個 <code><a href=\"api/upgrade/UpgradeAdapterRef\" class=\"code-anchor\">UpgradeAdapterRef</a></code>，一旦 Angular 元件準備好透過 AngularJS 進行測試，它允許你註冊一個 <code>ready()</code> 回呼(Callback)來執行斷言。</p><p translation-origin=\"off\"><code><a href=\"api/upgrade/UpgradeAdapterRef\" class=\"code-anchor\">UpgradeAdapterRef</a></code>: an <code><a href=\"api/upgrade/UpgradeAdapterRef\" class=\"code-anchor\">UpgradeAdapterRef</a></code>, which lets you register a <code>ready()</code> callback to\nrun assertions once the Angular components are ready to test through AngularJS.</p>\n\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"registerForNg1Tests-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#registerForNg1Tests-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-2\" translation-result=\"on\">範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-2\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-2\"><i class=\"material-icons\">link</i></a></h5>\n\n<code-example>\nconst upgradeAdapter = new <a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a>(MyNg2Module);\n\n// configure the adapter with upgrade/downgrade components and services\nupgradeAdapter.downgradeNg2Component(MyComponent);\n\nlet upgradeAdapterRef: <a href=\"api/upgrade/UpgradeAdapterRef\" class=\"code-anchor\">UpgradeAdapterRef</a>;\nlet $compile, $rootScope;\n\n// We must register the adapter before any calls to `inject()`\nbeforeEach(() =&gt; {\n  upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n});\n\nbeforeEach(inject((_$compile_, _$rootScope_) =&gt; {\n  $compile = _$compile_;\n  $rootScope = _$rootScope_;\n}));\n\nit(\"says hello\", (done) =&gt; {\n  upgradeAdapterRef.ready(() =&gt; {\n    const element = $compile(\"&lt;my-component&gt;&lt;/my-component&gt;\")($rootScope);\n    $rootScope.$apply();\n    expect(element.html()).toContain(\"Hello World\");\n    done();\n  })\n});\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"bootstrap\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"bootstrap\">bootstrap()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#bootstrap\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L483-L570\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L483-L570\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">引導混合 AngularJS / Angular 應用程式。</p><p translation-origin=\"off\">Bootstrap a hybrid AngularJS / Angular application.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">bootstrap</span>(element: Element, modules?: any[], config?: IAngularBootstrapConfig): <a href=\"api/upgrade/UpgradeAdapterRef\" class=\"code-anchor\">UpgradeAdapterRef</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-4\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>element</code>\n      </td>\n      <td class=\"param-type\"><code>Element</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>modules</code>\n      </td>\n      <td class=\"param-type\"><code>any[]</code></td>\n      <td class=\"param-description\">\n        <p>可選值。預設值為 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>config</code>\n      </td>\n      <td class=\"param-type\"><code>IAngularBootstrapConfig</code></td>\n      <td class=\"param-description\">\n        <p>可選值。預設值為 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p><code><a href=\"api/upgrade/UpgradeAdapterRef\" class=\"code-anchor\">UpgradeAdapterRef</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">此 <code>bootstrap</code> 方法是 AngularJS <a href=\"https://docs.angularjs.org/api/ng/function/angular.bootstrap\"><code>bootstrap</code></a>方法的直接替換（採用相同的引數）。與 AngularJS 不同，此載入程式是非同步的。</p><p translation-origin=\"off\">This <code>bootstrap</code> method is a direct replacement (takes same arguments) for AngularJS\n<a href=\"https://docs.angularjs.org/api/ng/function/angular.bootstrap\"><code>bootstrap</code></a> method. Unlike\nAngularJS, this bootstrap is asynchronous.</p>\n\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"bootstrap-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#bootstrap-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-3\" translation-result=\"on\">範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-3\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-3\"><i class=\"material-icons\">link</i></a></h5>\n\n<code-example>\nconst adapter = new <a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a>(MyNg2Module);\nconst module = angular.module('myExample', []);\nmodule.directive('ng2', adapter.downgradeNg2Component(Ng2));\n\nmodule.directive('ng1', function() {\n  return {\n     scope: { title: '=' },\n     template: 'ng1[Hello {{title}}!](&lt;span ng-transclude&gt;&lt;/span&gt;)'\n  };\n});\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng2',\n  inputs: ['name'],\n  template: 'ng2[&lt;ng1 [title]=\"name\"&gt;transclude&lt;/ng1&gt;](&lt;ng-content&gt;&lt;/ng-content&gt;)'\n})\nclass Ng2 {\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>]\n})\nclass MyNg2Module {}\n\ndocument.body.innerHTML = '&lt;ng2 name=\"World\"&gt;project&lt;/ng2&gt;';\n\nadapter.bootstrap(document.body, ['myExample']).ready(function() {\n  expect(document.body.textContent).toEqual(\n      \"ng2[ng1[Hello World!](transclude)](project)\");\n});\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"upgradeNg1Provider\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"upgradeng1provider\">upgradeNg1Provider()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#upgradeng1provider\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L571-L615\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L571-L615\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">允許從 Angular 存取 AngularJS 服務。</p><p translation-origin=\"off\">Allows AngularJS service to be accessible from Angular.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">upgradeNg1Provider</span>(name: string, options?: { asToken: any; })</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-5\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ asToken: any; }</code></td>\n      <td class=\"param-description\">\n        <p>可選值。預設值為 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"upgradeNg1Provider-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#upgradeNg1Provider-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-4\" translation-result=\"on\">範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-4\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-4\"><i class=\"material-icons\">link</i></a></h5>\n\n<code-example>\nclass Login { ... }\nclass Server { ... }\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Example {\n  constructor(@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>('server') server, login: Login) {\n    ...\n  }\n}\n\nconst module = angular.module('myExample', []);\nmodule.service('server', Server);\nmodule.service('login', Login);\n\nconst adapter = new <a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a>(MyNg2Module);\nadapter.upgradeNg1Provider('server');\nadapter.upgradeNg1Provider('login', {asToken: Login});\n\nadapter.bootstrap(document.body, ['myExample']).ready((ref) =&gt; {\n  const example: Example = ref.ng2Injector.get(Example);\n});\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"downgradeNg2Provider\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"downgradeng2provider\">downgradeNg2Provider()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#downgradeng2provider\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L616-L645\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L616-L645\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">允許從 AngularJS 存取 Angular 服務。</p><p translation-origin=\"off\">Allows Angular service to be accessible from AngularJS.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">downgradeNg2Provider</span>(token: any): Function</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-6\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>token</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p><code>Function</code></p>\n\n</div>\n      </td>\n    </tr>\n    \n  </tbody>\n</table>\n</section>\n\n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"mental-model-2\" translation-result=\"on\">心理模型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#mental-model-2\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Mental Model<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#mental-model-2\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在推理混合應用程式的工作方式時，有一個心智模型會很有用，它可以描述正在發生的事情並在最低級別解釋正在發生的事情。</p><p translation-origin=\"off\">When reasoning about how a hybrid application works it is useful to have a mental model which\ndescribes what is happening and explains what is happening at the lowest level.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在單個應用程式中執行有兩個獨立的框架，每個框架都將另一個框架視為黑盒。</p><p translation-origin=\"off\">There are two independent frameworks running in a single application, each framework treats\nthe other as a black box.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">頁面上的每個 DOM 元素都歸一個框架所有。無論哪個框架例項化此元素，都是所有者。每個框架都只更新自己的 DOM 元素/互動，而忽略其他框架。</p><p translation-origin=\"off\">Each DOM element on the page is owned exactly by one framework. Whichever framework\ninstantiated the element is the owner. Each framework only updates/interacts with its own\nDOM elements and ignores others.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">AngularJS 指令始終在 AngularJS 框架程式碼庫中執行，無論它們是在哪裡例項化的。</p><p translation-origin=\"off\">AngularJS directives always execute inside AngularJS framework codebase regardless of\nwhere they are instantiated.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">Angular 元件始終在 Angular 框架程式碼庫中執行，無論它們在哪裡例項化。</p><p translation-origin=\"off\">Angular components always execute inside Angular framework codebase regardless of\nwhere they are instantiated.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">AngularJS 元件可以升級為 Angular 元件。這會建立一個 Angular 指令，它會引導該位置的 AngularJS 元件指令。</p><p translation-origin=\"off\">An AngularJS component can be upgraded to an Angular component. This creates an\nAngular directive, which bootstraps the AngularJS component directive in that location.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">Angular 元件可以降級為 AngularJS 元件指令。這會建立一個 AngularJS 指令，該指令會引導該位置的 Angular 元件。</p><p translation-origin=\"off\">An Angular component can be downgraded to an AngularJS component directive. This creates\nan AngularJS directive, which bootstraps the Angular component in that location.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">每當例項化介面卡元件時，宿主元素都歸進行例項化的框架所有。然後，另一個框架會例項化並擁有該元件的檢視。這意味著元件繫結將始終遵循例項化框架的語義。語法始終是 Angular 語法。</p><p translation-origin=\"off\">Whenever an adapter component is instantiated the host element is owned by the framework\ndoing the instantiation. The other framework then instantiates and owns the view for that\ncomponent. This implies that component bindings will always follow the semantics of the\ninstantiation framework. The syntax is always that of Angular syntax.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">AngularJS 始終首先引導並擁有最底部的檢視。</p><p translation-origin=\"off\">AngularJS is always bootstrapped first and owns the bottom most view.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">新應用程式在 Angular 區域中執行，因此它不再需要呼叫 <code>$apply()</code>。</p><p translation-origin=\"off\">The new application is running in Angular zone, and therefore it no longer needs calls to\n<code>$apply()</code>.</p>\n\n</li>\n</ol>\n<h3 id=\"example-6\" translation-result=\"on\">範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-6\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/UpgradeAdapter#example-6\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example>\nconst adapter = new <a href=\"api/upgrade/UpgradeAdapter\" class=\"code-anchor\">UpgradeAdapter</a>(<a href=\"api/core/forwardRef\" class=\"code-anchor\">forwardRef</a>(() =&gt; MyNg2Module), myCompilerOptions);\nconst module = angular.module('myExample', []);\nmodule.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n\nmodule.directive('ng1Hello', function() {\n  return {\n     scope: { title: '=' },\n     template: 'ng1[Hello {{title}}!](&lt;span ng-transclude&gt;&lt;/span&gt;)'\n  };\n});\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng2-comp',\n  inputs: ['name'],\n  template: 'ng2[&lt;ng1-hello [title]=\"name\"&gt;transclude&lt;/ng1-hello&gt;](&lt;ng-content&gt;&lt;/ng-content&gt;)',\n  directives:\n})\nclass Ng2Component {\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>]\n})\nclass MyNg2Module {}\n\ndocument.body.innerHTML = '&lt;ng2-comp name=\"World\"&gt;project&lt;/ng2-comp&gt;';\n\nadapter.bootstrap(document.body, ['myExample']).ready(function() {\n  expect(document.body.textContent).toEqual(\n      \"ng2[ng1[Hello World!](transclude)](project)\");\n});\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/upgrade\n-->\n<!-- links from this doc:\n - /api\n - api/core/CompilerOptions\n - api/core/Component\n - api/core/Inject\n - api/core/Injectable\n - api/core/Input\n - api/core/NgModule\n - api/core/Type\n - api/core/forwardRef\n - api/forms/ControlValueAccessor\n - api/platform-browser/BrowserModule\n - api/upgrade\n - api/upgrade/UpgradeAdapter#bootstrap\n - api/upgrade/UpgradeAdapter#bootstrap-usage-notes\n - api/upgrade/UpgradeAdapter#constructor\n - api/upgrade/UpgradeAdapter#constructor()\n - api/upgrade/UpgradeAdapter#description\n - api/upgrade/UpgradeAdapter#downgradeNg2Component\n - api/upgrade/UpgradeAdapter#downgradeNg2Component-usage-notes\n - api/upgrade/UpgradeAdapter#downgradeNg2Provider\n - api/upgrade/UpgradeAdapter#downgradeNg2Provider-usage-notes\n - api/upgrade/UpgradeAdapter#downgradeng2component\n - api/upgrade/UpgradeAdapter#downgradeng2provider\n - api/upgrade/UpgradeAdapter#example\n - api/upgrade/UpgradeAdapter#example-1\n - api/upgrade/UpgradeAdapter#example-2\n - api/upgrade/UpgradeAdapter#example-3\n - api/upgrade/UpgradeAdapter#example-4\n - api/upgrade/UpgradeAdapter#example-5\n - api/upgrade/UpgradeAdapter#example-6\n - api/upgrade/UpgradeAdapter#instance-methods\n - api/upgrade/UpgradeAdapter#mental-model\n - api/upgrade/UpgradeAdapter#mental-model-1\n - api/upgrade/UpgradeAdapter#mental-model-2\n - api/upgrade/UpgradeAdapter#registerForNg1Tests\n - api/upgrade/UpgradeAdapter#registerForNg1Tests-usage-notes\n - api/upgrade/UpgradeAdapter#registerforng1tests\n - api/upgrade/UpgradeAdapter#supported-features\n - api/upgrade/UpgradeAdapter#supported-features-1\n - api/upgrade/UpgradeAdapter#upgradeNg1Component\n - api/upgrade/UpgradeAdapter#upgradeNg1Component-usage-notes\n - api/upgrade/UpgradeAdapter#upgradeNg1Provider\n - api/upgrade/UpgradeAdapter#upgradeNg1Provider-usage-notes\n - api/upgrade/UpgradeAdapter#upgradeadapter\n - api/upgrade/UpgradeAdapter#upgradeng1component\n - api/upgrade/UpgradeAdapter#upgradeng1provider\n - api/upgrade/UpgradeAdapter#usage-notes\n - api/upgrade/UpgradeAdapter#心理模型\n - api/upgrade/UpgradeAdapter#心理模型-1\n - api/upgrade/UpgradeAdapter#心理模型-2\n - api/upgrade/UpgradeAdapter#支援的特性\n - api/upgrade/UpgradeAdapter#範例\n - api/upgrade/UpgradeAdapter#範例-1\n - api/upgrade/UpgradeAdapter#範例-2\n - api/upgrade/UpgradeAdapter#範例-3\n - api/upgrade/UpgradeAdapter#範例-4\n - api/upgrade/UpgradeAdapter#範例-5\n - api/upgrade/UpgradeAdapterRef\n - api/upgrade/static\n - guide/aot-compiler\n - https://docs.angularjs.org/api/ng/function/angular.bootstrap\n - https://docs.angularjs.org/api/ng/service/$compile\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L172-L250\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L21-L792\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L251-L415\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L416-L482\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L483-L570\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L571-L615\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/upgrade/src/dynamic/src/upgrade_adapter.ts?message=docs(upgrade)%3A%20請簡述你的修改...#L616-L645\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L172-L250\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L21-L792\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L251-L415\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L416-L482\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L483-L570\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L571-L615\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/upgrade/src/dynamic/src/upgrade_adapter.ts#L616-L645\n-->"}