{"id":"api/forms/SelectControlValueAccessor","title":"SelectControlValueAccessor","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/forms/SelectControlValueAccessor\", \"name\": \"SelectControlValueAccessor\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/forms/src/directives/select_control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L30-L194\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/forms/src/directives/select_control_value_accessor.ts#L30-L194\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"selectcontrolvalueaccessor\">SelectControlValueAccessor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#selectcontrolvalueaccessor\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label directive\">directive</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">該 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> 用於寫入 select 控制項的值，並監聽 select 控制項的變化。該值存取器會被\n<code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>、<code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code> 和 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 指令使用。</p><p translation-origin=\"off\">The <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> for writing select control values and listening to select control\nchanges. The value accessor is used by the <code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>, <code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code>, and\n<code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> directives.</p>\n\n\n  </section>\n<h2 id=\"匯出自\">匯出自<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#匯出自\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n  <li>\n    <a href=\"api/forms/ReactiveFormsModule\">\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">ReactiveFormsModule</code-example>\n    </a>\n  </li>\n  <li>\n    <a href=\"api/forms/FormsModule\">\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">FormsModule</code-example>\n    </a>\n  </li>\n</ul>\n  \n<section ng-should-translate=\"\" class=\"selector-list\">\n  <h2 id=\"selectors\">選擇器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#selectors\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><code>select<i>:not([<a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a>])</i>[<a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>]</code></li>\n    <li><code>select<i>:not([<a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a>])</i>[formControl]</code></li>\n    <li><code>select<i>:not([<a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a>])</i>[<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>]</code></li>\n  </ul>\n</section>\n\n  \n<section ng-should-translate=\"\" class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>屬性</th>\n        <th>說明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"compareWith\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">compareWith</span>: (o1: any, o2: any) =&gt; boolean</code>\n        </td>\n        <td>\n          <span class=\"write-only-property\">只寫</span>\n          <div no-translate=\"\"><p translation-result=\"on\">追蹤選項的比較演算法，以在檢查變更時追蹤其標識。</p><p translation-origin=\"off\">Tracks the option comparison algorithm for tracking identities when\nchecking for changes.</p>\n</div>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n\n  \n  <section ng-should-translate=\"\" class=\"description\">\n    <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#description\"><i class=\"material-icons\">link</i></a></h2>\n    \n    <h3 id=\"using-select-controls-in-a-reactive-form\" translation-result=\"on\">在響應式表單中使用 select 控制項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#using-select-controls-in-a-reactive-form\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Using select controls in a reactive form<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#using-select-controls-in-a-reactive-form\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">下面的例子示範瞭如何在響應式表單中使用 select 控制項。</p><p translation-origin=\"off\">The following examples show how to use a select control in a reactive form.</p>\n\n<code-example path=\"forms/ts/reactiveSelectControl/reactive_select_control_example.ts\" region=\"Component\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\nimport {<a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>, <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>} from '@angular/forms';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  template: `\n    &lt;form [formGroup]=\"form\"&gt;\n      &lt;select <a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>=\"state\"&gt;\n        &lt;option *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let state of states\" [ngValue]=\"state\"&gt;\n          {{ state.abbrev }}\n        &lt;/option&gt;\n      &lt;/select&gt;\n    &lt;/form&gt;\n\n     &lt;p&gt;<a href=\"api/forms/Form\" class=\"code-anchor\">Form</a> value: {{ form.value | json }}&lt;/p&gt;\n     &lt;!-- {state: {name: 'New York', abbrev: 'NY'} } --&gt;\n  `,\n})\nexport class ReactiveSelectComp {\n  states = [\n    {name: 'Arizona', abbrev: 'AZ'},\n    {name: 'California', abbrev: 'CA'},\n    {name: 'Colorado', abbrev: 'CO'},\n    {name: 'New York', abbrev: 'NY'},\n    {name: 'Pennsylvania', abbrev: 'PA'},\n  ];\n\n  form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n    state: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(this.states[3]),\n  });\n}\n\n</code-example>\n<h3 id=\"using-select-controls-in-a-template-driven-form\" translation-result=\"on\">在範本驅動表單中使用 select 控制項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#using-select-controls-in-a-template-driven-form\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Using select controls in a template-driven form<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#using-select-controls-in-a-template-driven-form\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要在範本驅動表單中使用 <code>select</code>，只要把 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 和 <code>name</code> 屬性加到 <code>&lt;select&gt;</code> 標籤上即可。</p><p translation-origin=\"off\">To use a select in a template-driven form, simply add an <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> and a <code>name</code>\nattribute to the main <code>&lt;select&gt;</code> tag.</p>\n\n<code-example path=\"forms/ts/selectControl/select_control_example.ts\" region=\"Component\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  template: `\n    &lt;form #f=\"<a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a>\"&gt;\n      &lt;select name=\"state\" <a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>&gt;\n        &lt;option value=\"\" disabled&gt;Choose a state&lt;/option&gt;\n        &lt;option *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let state of states\" [ngValue]=\"state\"&gt;\n          {{ state.abbrev }}\n        &lt;/option&gt;\n      &lt;/select&gt;\n    &lt;/form&gt;\n\n     &lt;p&gt;<a href=\"api/forms/Form\" class=\"code-anchor\">Form</a> value: {{ f.value | json }}&lt;/p&gt;\n     &lt;!-- example value: {state: {name: 'New York', abbrev: 'NY'} } --&gt;\n  `,\n})\nexport class SelectControlComp {\n  states = [\n    {name: 'Arizona', abbrev: 'AZ'},\n    {name: 'California', abbrev: 'CA'},\n    {name: 'Colorado', abbrev: 'CO'},\n    {name: 'New York', abbrev: 'NY'},\n    {name: 'Pennsylvania', abbrev: 'PA'},\n  ];\n}\n\n</code-example>\n<h3 id=\"customizing-option-selection\" translation-result=\"on\">自訂 <code>option</code> 的選擇結果<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#customizing-option-selection\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Customizing option selection<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#customizing-option-selection\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">Angular\n使用物件標識作為選項。條目標識可能在其實質性資料沒有變化的情況發生變化。比如，如果這些條目是透過\nRPC 的方式從伺服器端取到的，當重新執行 RPC\n時，就算資料沒有變化，第二個響應也會產生一些具有不同物件標識的物件。</p><p translation-origin=\"off\">Angular uses object identity to select option. It's possible for the identities of items\nto change while the data does not. This can happen, for example, if the items are produced\nfrom an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\nsecond response will produce objects with different identities.</p>\n\n<p translation-result=\"on\">要想自訂預設的選項比較演算法，<code>&lt;select&gt;</code> 支援一個名叫 <code>compareWith</code> 的輸入。\n<code>compareWith</code> 接受一個<strong>函式</strong>，它具有兩個引數：<code>option1</code> 和 <code>option2</code>。\n如果指定了 <code>compareWith</code>，則 Angular 會根據該函式的返回值來選取一個選項。</p><p translation-origin=\"off\">To customize the default option comparison algorithm, <code>&lt;select&gt;</code> supports <code>compareWith</code> input.\n<code>compareWith</code> takes a <strong>function</strong> which has two arguments: <code>option1</code> and <code>option2</code>.\nIf <code>compareWith</code> is given, Angular selects option by the return value of the function.</p>\n\n<code-example language=\"ts\">\nconst selectedCountriesControl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>();\n</code-example>\n<code-example>\n&lt;select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\"&gt;\n    &lt;option *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let country of countries\" [ngValue]=\"country\"&gt;\n        {{country.name}}\n    &lt;/option&gt;\n&lt;/select&gt;\n\ncompareFn(c1: Country, c2: Country): boolean {\n    return c1 &amp;&amp; c2 ? c1.id === c2.id : c1 === c2;\n}\n</code-example>\n<p translation-result=\"on\"><strong>注意：</strong>我們要監聽 <code>change</code> 事件，因為 <code>input</code> 事件不會在 IE 的 <code>select</code>\n元素上觸發：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility</a></p><p translation-origin=\"off\"><strong>Note:</strong> We listen to the 'change' event because 'input' events aren't fired\nfor selects in IE, see:\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility</a></p>\n\n\n  </section>\n\n  \n  \n  \n  </div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/ControlValueAccessor\n - api/forms/FormControlName\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/forms/NgSelectOption\n - api/forms/ReactiveFormsModule\n - api/forms/SelectMultipleControlValueAccessor\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgFor\n - api/core/Component\n - api/core/Input\n - api/forms\n - api/forms/ControlValueAccessor\n - api/forms/Form\n - api/forms/FormControl\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroup\n - api/forms/FormsModule\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/ReactiveFormsModule\n - api/forms/SelectControlValueAccessor#customizing-option-selection\n - api/forms/SelectControlValueAccessor#description\n - api/forms/SelectControlValueAccessor#instance-properties\n - api/forms/SelectControlValueAccessor#selectcontrolvalueaccessor\n - api/forms/SelectControlValueAccessor#selectors\n - api/forms/SelectControlValueAccessor#using-select-controls-in-a-reactive-form\n - api/forms/SelectControlValueAccessor#using-select-controls-in-a-template-driven-form\n - api/forms/SelectControlValueAccessor#在響應式表單中使用-select-控制項\n - api/forms/SelectControlValueAccessor#在範本驅動表單中使用-select-控制項\n - api/forms/SelectControlValueAccessor#匯出自\n - api/forms/SelectControlValueAccessor#自訂-option-的選擇結果\n - api/forms/SelectMultipleControlValueAccessor\n - https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/forms/src/directives/select_control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L30-L194\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/forms/src/directives/select_control_value_accessor.ts#L30-L194\n-->"}