{"id":"api/forms/ControlValueAccessor","title":"ControlValueAccessor","contents":"\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/forms/ControlValueAccessor\", \"name\": \"ControlValueAccessor\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L10-L186\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L10-L186\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"controlvalueaccessor\">ControlValueAccessor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#controlvalueaccessor\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">定義一個介面，該介面充當 Angular 表單 API 和 DOM 中的原生元素之間的橋樑。</p><p translation-origin=\"off\">Defines an interface that acts as a bridge between the Angular forms API and a\nnative element in the DOM.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/forms/ControlValueAccessor#description\">檢視\"說明\"...</a></p>\n  </section>\n  \n\n  \n\n  <section ng-should-translate=\"\" class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a> {\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#writeValue\"><span class=\"member-name\">writeValue</span>(obj: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnChange\"><span class=\"member-name\">registerOnChange</span>(fn: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnTouched\"><span class=\"member-name\">registerOnTouched</span>(fn: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#setDisabledState\"><span class=\"member-name\">setDisabledState</span>(isDisabled: boolean)?: void</a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n  <div class=\"descendants class\">\n    <h2 id=\"實現類\">實現類<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#實現類\"><i class=\"material-icons\">link</i></a></h2>\n    \n\n<ul>\n  \n    <li>\n      <code><a href=\"api/forms/CheckboxControlValueAccessor\" class=\"code-anchor\">CheckboxControlValueAccessor</a></code>\n      \n\n\n    </li>\n  \n    <li>\n      <code><a href=\"api/forms/DefaultValueAccessor\" class=\"code-anchor\">DefaultValueAccessor</a></code>\n      \n\n\n    </li>\n  \n    <li>\n      <code><a href=\"api/forms/NumberValueAccessor\" class=\"code-anchor\">NumberValueAccessor</a></code>\n      \n\n\n    </li>\n  \n    <li>\n      <code><a href=\"api/forms/RadioControlValueAccessor\" class=\"code-anchor\">RadioControlValueAccessor</a></code>\n      \n\n\n    </li>\n  \n    <li>\n      <code><a href=\"api/forms/RangeValueAccessor\" class=\"code-anchor\">RangeValueAccessor</a></code>\n      \n\n\n    </li>\n  \n    <li>\n      <code><a href=\"api/forms/SelectControlValueAccessor\" class=\"code-anchor\">SelectControlValueAccessor</a></code>\n      \n\n\n    </li>\n  \n    <li>\n      <code><a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">SelectMultipleControlValueAccessor</a></code>\n      \n\n\n    </li>\n  \n</ul>\n\n\n  </div>\n  \n\n</section>\n\n  \n<section ng-should-translate=\"\" class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><p>DefaultValueAccessor</p>\n</li>\n  </ul>\n</section>\n\n\n  \n  \n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">實現此介面以建立與 Angular 表單整合的自訂表單控制項指令。</p><p translation-origin=\"off\">Implement this interface to create a custom form control directive\nthat integrates with Angular forms.</p>\n\n\n  \n</section>\n\n\n  \n\n  \n\n<section ng-should-translate=\"\" class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"writeValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"writevalue\">\n      writeValue()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#writevalue\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L28-L60\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L28-L60\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">將新值寫入元素。</p><p translation-origin=\"off\">Writes a new value to the element.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">writeValue</span>(obj: any): void</code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"引數\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>obj</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">元素的新值</p><p translation-origin=\"off\">The new value for the element</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>void</code></p>\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">當請求從模型到檢視的程式設計更改時，表單 API 會呼叫此方法以寫入檢視。</p><p translation-origin=\"off\">This method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.</p>\n\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"writeValue-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#writeValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"write-a-value-to-the-element\" translation-result=\"on\">向元素寫入值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#write-a-value-to-the-element\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\" id=\"write-a-value-to-the-element\">Write a value to the element<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#write-a-value-to-the-element\"><i class=\"material-icons\">link</i></a></h5>\n\n<p translation-result=\"on\">以下範例將一個值寫入原生 DOM 元素。</p><p translation-origin=\"off\">The following example writes a value to the native DOM element.</p>\n\n<code-example language=\"ts\">\nwriteValue(value: any): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n}\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"registerOnChange\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"registeronchange\">\n      registerOnChange()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registeronchange\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L61-L111\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L61-L111\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">註冊一個回呼(Callback)函式，該控制項的值在 UI 中更改時將呼叫該回調函式。</p><p translation-origin=\"off\">Registers a callback function that is called when the control's value\nchanges in the UI.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerOnChange</span>(fn: any): void</code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"引數-1\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>fn</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要註冊的回呼(Callback)函式</p><p translation-origin=\"off\">The callback function to register</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code>void</code></p>\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">當值從檢視傳播到模型時，表單 API 會在初始化時呼叫此方法以更新表單模型。</p><p translation-result=\"on\">在你自己的值存取器中實現 <code>registerOnChange</code> 方法時，請儲存給定的函式，以便你的類在適當的時機呼叫它。</p><p translation-origin=\"off\">This method is called by the forms API on initialization to update the form\nmodel when values propagate from the view to the model.</p>\n\n<p translation-origin=\"off\">When implementing the <code>registerOnChange</code> method in your own value accessor,\nsave the given function so your class calls it at the appropriate time.</p>\n\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"registerOnChange-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registerOnChange-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"store-the-change-function\" translation-result=\"on\">儲存變更函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#store-the-change-function\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\" id=\"store-the-change-function\">Store the change function<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#store-the-change-function\"><i class=\"material-icons\">link</i></a></h5>\n\n<p translation-result=\"on\">以下範例將所提供的函式儲存為內部方法。</p><p translation-origin=\"off\">The following example stores the provided function as an internal method.</p>\n\n<code-example language=\"ts\">\nregisterOnChange(fn: (_: any) =&gt; void): void {\n  this._onChange = fn;\n}\n</code-example>\n<p translation-result=\"on\">當用戶介面中的值更改時，請呼叫已註冊的函式以允許表單 API 自行更新：</p><p translation-origin=\"off\">When the value changes in the UI, call the registered\nfunction to allow the forms API to update itself:</p>\n\n<code-example language=\"ts\">\nhost: {\n   '(change)': '_onChange($event.target.value)'\n}\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"registerOnTouched\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"registerontouched\">\n      registerOnTouched()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registerontouched\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L112-L158\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L112-L158\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">註冊一個在初始化時由表單 API 呼叫的回呼(Callback)函式，以在失焦時更新表單模型。</p><p translation-origin=\"off\">Registers a callback function that is called by the forms API on initialization\nto update the form model on blur.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerOnTouched</span>(fn: any): void</code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"引數-2\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>fn</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要註冊的回呼(Callback)函式</p><p translation-origin=\"off\">The callback function to register</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p><code>void</code></p>\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">在你自己的值存取器中實現 <code>registerOnTouched</code> ，請儲存給定函式，以便你的類在應將控制項視為失焦或“已接觸過”時呼叫它。</p><p translation-origin=\"off\">When implementing <code>registerOnTouched</code> in your own value accessor, save the given\nfunction so your class calls it when the control should be considered\nblurred or \"touched\".</p>\n\n\n      </td>\n    </tr>\n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"registerOnTouched-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registerOnTouched-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"store-the-callback-function\" translation-result=\"on\">儲存回呼(Callback)函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#store-the-callback-function\"><i class=\"material-icons\">link</i></a></h5><h5 translation-origin=\"off\" id=\"store-the-callback-function\">Store the callback function<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#store-the-callback-function\"><i class=\"material-icons\">link</i></a></h5>\n\n<p translation-result=\"on\">以下範例將所提供的函式儲存為內部方法。</p><p translation-origin=\"off\">The following example stores the provided function as an internal method.</p>\n\n<code-example language=\"ts\">\nregisterOnTouched(fn: any): void {\n  this._onTouched = fn;\n}\n</code-example>\n<p translation-result=\"on\">在 blur（或等效事件）時，你的類應呼叫已註冊的函式以允許表單 API 自行更新：</p><p translation-origin=\"off\">On blur (or equivalent), your class should call the registered function to allow\nthe forms API to update itself:</p>\n\n<code-example language=\"ts\">\nhost: {\n   '(blur)': '_onTouched()'\n}\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n    <a id=\"setDisabledState\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"setdisabledstate\">\n      setDisabledState()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#setdisabledstate\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L159-L185\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L159-L185\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">當控制項狀態更改為 “DISABLED” 或從 “DISABLED” 更改時，表單 API 要呼叫的函式。根據其狀態，它會啟用或禁用適當的 DOM 元素。</p><p translation-origin=\"off\">Function that is called by the forms API when the control status changes to\nor from 'DISABLED'. Depending on the status, it enables or disables the\nappropriate DOM element.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setDisabledState</span>(isDisabled: boolean)?: void</code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"引數-3\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>isDisabled</code>\n      </td>\n      <td class=\"param-type\"><code>boolean</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要在元素上設定的禁用狀態</p><p translation-origin=\"off\">The disabled status to set on the element</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p><code>void</code></p>\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n  \n\n  \n\n  <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"setDisabledState-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#setDisabledState-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <p translation-result=\"on\">以下是將 disabled 屬性寫入原生 DOM 元素的範例：</p><p translation-origin=\"off\">The following is an example of writing the disabled property to a native DOM element:</p>\n\n<code-example language=\"ts\">\nsetDisabledState(isDisabled: boolean): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n}\n</code-example>\n\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/CheckboxControlValueAccessor\n - api/forms/DefaultValueAccessor\n - api/forms/FormsModule\n - api/forms/NG_VALUE_ACCESSOR\n - api/forms/NgControl\n - api/forms/NumberValueAccessor\n - api/forms/RadioControlValueAccessor\n - api/forms/RangeValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/upgrade/UpgradeAdapter\n - guide/built-in-directives\n - guide/forms-overview\n-->\n<!-- links from this doc:\n - /api\n - api/forms\n - api/forms/CheckboxControlValueAccessor\n - api/forms/ControlValueAccessor#controlvalueaccessor\n - api/forms/ControlValueAccessor#description\n - api/forms/ControlValueAccessor#instance-methods\n - api/forms/ControlValueAccessor#registerOnChange\n - api/forms/ControlValueAccessor#registerOnChange-usage-notes\n - api/forms/ControlValueAccessor#registerOnTouched\n - api/forms/ControlValueAccessor#registerOnTouched-usage-notes\n - api/forms/ControlValueAccessor#registeronchange\n - api/forms/ControlValueAccessor#registerontouched\n - api/forms/ControlValueAccessor#see-also\n - api/forms/ControlValueAccessor#setDisabledState\n - api/forms/ControlValueAccessor#setDisabledState-usage-notes\n - api/forms/ControlValueAccessor#setdisabledstate\n - api/forms/ControlValueAccessor#store-the-callback-function\n - api/forms/ControlValueAccessor#store-the-change-function\n - api/forms/ControlValueAccessor#write-a-value-to-the-element\n - api/forms/ControlValueAccessor#writeValue\n - api/forms/ControlValueAccessor#writeValue-usage-notes\n - api/forms/ControlValueAccessor#writevalue\n - api/forms/ControlValueAccessor#實現類\n - api/forms/DefaultValueAccessor\n - api/forms/NumberValueAccessor\n - api/forms/RadioControlValueAccessor\n - api/forms/RangeValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L10-L186\n - https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L112-L158\n - https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L159-L185\n - https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L28-L60\n - https://github.com/angular/angular-cn/edit/aio/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20請簡述你的修改...#L61-L111\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L10-L186\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L112-L158\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L159-L185\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L28-L60\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L61-L111\n-->"}