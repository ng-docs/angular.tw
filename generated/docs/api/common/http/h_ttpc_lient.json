{"id":"api/common/http/HttpClient","title":"HttpClient","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/http\", \"name\": \"@angular/common/http\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/common/http/HttpClient\", \"name\": \"HttpClient\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/common\">@angular/common</a> &gt; <a href=\"api/common/http\">@angular/common/http</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L61-L4423\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L61-L4423\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"httpclient\">HttpClient<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#httpclient\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">執行 HTTP 請求。該服務作為可注入類提供，帶有執行 HTTP\n請求的方法。每個請求方法都有多個簽名，並且返回型別會根據所呼叫的簽名（主要的值是 <code>observe</code> 和\n<code>responseType</code>）而有所不同。</p><p translation-origin=\"off\">Performs HTTP requests.\nThis service is available as an injectable class, with methods to perform HTTP requests.\nEach request method has multiple signatures, and the return type varies based on\nthe signature that is called (mainly the values of <code>observe</code> and <code>responseType</code>).</p>\n\n\n    <p no-translate=\"\"><a href=\"api/common/http/HttpClient#description\">檢視\"說明\"...</a></p>\n  </section><section ng-should-translate=\"\" class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a> {\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(first: string | HttpRequest&lt;any&gt;, url?: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; body?: any; } = {}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#jsonp\"><span class=\"member-name\">jsonp</span>&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a>\n}\n</code-example>\n\n</section>\n\n<section ng-should-translate=\"\" class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p translation-result=\"on\"><a href=\"guide/http\">HTTP 指南</a></p><p translation-origin=\"off\"><a href=\"guide/http\">HTTP Guide</a></p>\n</li>\n    <li><p translation-result=\"on\"><a href=\"guide/http\">HTTP 指南</a></p><p translation-origin=\"off\"><a href=\"api/common/http/HttpRequest\">HTTP Request</a></p>\n</li>\n  </ul>\n</section>\n  \n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">請注意，<code>responseType</code>\n<em>選項</em>的值是一個字串，用於標識此響應的單一資料型別。該方法的各個重載版本處理每種響應型別。正如組合簽名所暗示的那樣\n<code>responseType</code> 的值不能為聯合型別。</p><p translation-origin=\"off\">Note that the <code>responseType</code> <em>options</em> value is a String that identifies the\nsingle data type of the response.\nA single overload version of the method handles each response type.\nThe value of <code>responseType</code> cannot be a union, as the combined signature could imply.</p>\n\n  <p>Further information is available in the <a href=\"api/common/http/HttpClient#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n<section ng-should-translate=\"\" class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"request\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"request\">request()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#request\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L700-L887\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L700-L887\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">為任意 HTTP\n請求構造一個可觀察的物件，該請求在被訂閱時將透過已註冊的攔截器鏈觸發該請求，然後傳送到伺服器。</p><p translation-origin=\"off\">Constructs an observable for a generic HTTP request that, when subscribed,\nfires the request through the chain of registered interceptors and on to the\nserver.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"17-個重載形式\">17 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">傳送 <code>HTTPRequest</code> 並返回 <code>HTTPEvents</code> 流。</p><p translation-origin=\"off\">Sends an <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> and returns a stream of <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;any&gt;): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>req</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;any&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>HTTPEvents</code> 流。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code>: An <code>Observable</code> of the response, with the response body as a stream of <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a request that interprets the body as an <code>ArrayBuffer</code> and returns the response in\nan <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boole...): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-1\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boole...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，將請求體解釋為 <code>Blob</code> 型別，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\">Constructs a request that interprets the body as a blob and returns\nthe response as a blob.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-2\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response, with the response body of type <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為字串，並且返回一個字串。</p><p translation-origin=\"off\">Constructs a request that interprets the body as a text string and\nreturns a string value.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-3\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a request that interprets the body as an <code>ArrayBuffer</code> and returns the\nthe full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; observe: \"events\"; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: bo...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-4\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; observe: \"events\"; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: bo...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p translation-result=\"on\">一個響應物件的 <code>Observable</code>，其響應主體為此請求的 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code></p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the response, with the response body as an array of <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for\nthe request.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 <code>Blob</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a request that interprets the body as a <code>Blob</code> and returns\nthe full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-5\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-5\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a text string and returns the full event\nstream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-6\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-6\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JavaScript object and returns the full\nevent stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"events\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;any&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-7\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要和此請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the  request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-7\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;any&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JavaScript object and returns the full\nevent stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"events\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-8\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-8\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>R</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type <code>R</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as an <code>ArrayBuffer</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-9\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-9\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a <code>Blob</code> and returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-10\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-10\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為文字流，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a text stream and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-11\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-11\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HTTP response</code> 的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the HTTP response, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 JSON 物件，並返回完整 <code>HTTPResponse</code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JavaScript object and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"response\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-12\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-12\">返回值</h6>\n  <p translation-result=\"on\">此請求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>,\nwith the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 JSON 物件，並返回帶有請求主體型別 <code>HTTPResponse</code></p><p translation-origin=\"off\">Constructs a request which interprets the body as a JavaScript object and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> with the response body in the requested type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"response\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;R&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-13\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-13\">返回值</h6>\n  <p translation-result=\"on\">此請求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其回應內文為 <code>R</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;R&gt;&gt;</code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>R</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 JSON 物件，並返回完整的 <code>HTTPResponse</code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JavaScript object and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> as a JavaScript object.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-14\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-14\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-16\">Overload #16</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，它將請求體解釋為 JSON 物件，並返回所請求型別的回應內文。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JavaScript object\nwith the response body of the requested type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; }): Observable&lt;R&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-15\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-15\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>R</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;R&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>R</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-17\">Overload #17</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個請求，其中的響應型別和所請求的可觀察物件都不是靜態已知的。</p><p translation-origin=\"off\">Constructs a request where response type and requested observable are not known statically.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; observe?: \"body\" | ... 1 more ... | \"response\"; reportProgress?: boolean; responseType?: \"arra...): Observable&lt;any&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-16\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; observe?: \"body\" | ... 1 more ... | \"response\"; reportProgress?: boolean; responseType?: \"arra...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-16\">返回值</h6>\n  <p translation-result=\"on\">所請求的響應物件的 <code>Observable</code>，其回應內文是 <code>any</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;any&gt;</code>: An <code>Observable</code> of the requested response, with body of type <code>any</code>.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">你可以直接把 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 作為唯一引數。在這種情況下，該呼叫將返回原始 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>\n流的可觀察值。</p><p translation-origin=\"off\">You can pass an <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> directly as the only parameter. In this case,\nthe call returns an observable of the raw <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> stream.</p>\n\n<p translation-result=\"on\">或者，你可以將 HTTP 方法作為第一個引數，將 URL\n字串作為第二個引數，將包含請求正文的選項雜湊作為第三個引數。參見\n<code>addBody()</code>。在這種情況下，指定的 <code>responseType</code> 和 <code>observe</code> 選項會決定要返回的 observable\n型別。</p><p translation-origin=\"off\">Alternatively you can pass an HTTP method as the first parameter,\na URL string as the second, and an options hash containing the request body as the third.\nSee <code>addBody()</code>. In this case, the specified <code>responseType</code> and <code>observe</code> options determine the\ntype of returned observable.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">此 <code>responseType</code> 值確定如何解析成功的回應內文。</p><p translation-origin=\"off\">The <code>responseType</code> value determines how a successful response body is parsed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果 <code>responseType</code> 是預設的 <code>json</code>，你可以將結果物件的型別介面作為型別引數傳遞給呼叫。</p><p translation-origin=\"off\">If <code>responseType</code> is the default <code>json</code>, you can pass a type interface for the resulting\nobject as a type parameter to the call.</p>\n\n<code-example>\n如果 `responseType` 是預設的 `json`，則可以將結果物件的型別介面作為型別引數傳遞給呼叫。\n</code-example>\n</li>\n</ul>\n<p translation-result=\"on\"><code>observe</code> 值根據你感興趣的觀察值確定其返回型別。</p><p translation-origin=\"off\">The <code>observe</code> value determines the return type, according to what you are interested in\nobserving.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">事件的 observable 值會返回原始 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 流的可 <code>observe</code> 值，預設包括進度事件。</p><p translation-origin=\"off\">An <code>observe</code> value of events returns an observable of the raw <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> stream, including\nprogress events by default.</p>\n\n<code-example>\n事件的 `observe` 值返回原始 `<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>` 流的可觀察值，預設情況下包括進度事件。\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">response 的 <code>observe</code> 值會返回 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse&lt;T&gt;</a></code> 的 observable，其中 <code>T</code> 引數取決於\n<code>responseType</code> 和任何可選提供的型別引數。</p><p translation-origin=\"off\">An <code>observe</code> value of response returns an observable of <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse&lt;T&gt;</a></code>,\nwhere the <code>T</code> parameter depends on the <code>responseType</code> and any optionally provided type\nparameter.</p>\n\n<code-example>\n響應物件的 `observe` 值返回 `<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;` 的可觀察物件，其中 `T` 引數取決於\n</code-example>\n<p><code>responseType</code> 和所提供的可選型別引數。</p>\n</li>\n<li>\n<p translation-result=\"on\"><code>observe</code> 的 body 值會返回與 <code>T</code> 的回應內文具有相同型別的 <code>&lt;T&gt;</code> 型可觀察物件。</p><p translation-origin=\"off\">An <code>observe</code> value of body returns an observable of <code>&lt;T&gt;</code> with the same <code>T</code> body type.</p>\n\n</li>\n</ul>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"delete\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"delete\">delete()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#delete\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L1340-L1370\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L1340-L1370\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 Observable，當它被訂閱時，會要求伺服器執行配置好的 <code>DELETE</code>\n請求。參見它的各個獨立重載形式，以瞭解其返回值型別。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>DELETE</code> request to execute on the server. See the individual overloads for\ndetails on the return type.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-個重載形式\">15 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1-1\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?:...): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-17\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?:...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-17\">返回值</h6>\n  <p translation-result=\"on\">型別為 <code>ArrayBuffer</code> 的回應內文的 <code>Observable</code>。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2-1\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回 <code>Blob</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-18\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-18\">返回值</h6>\n  <p translation-result=\"on\">型別為 <code>Blob</code> 的回應內文的 <code>Observable</code>。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3-1\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為字串，並且返回一個字串。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a text string and returns\na string.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-19\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-19\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4-1\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-20\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-20\">返回值</h6>\n  <p translation-result=\"on\">此請求的所有 <code>HTTPEvents</code> 的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5-1\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 <code>Blob</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a <code>Blob</code>\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-21\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-21\">返回值</h6>\n  <p translation-result=\"on\">此請求的所有 <code>HTTPEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response body as a\n<code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6-1\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a text string\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-22\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-22\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HTTPEvents</code> 的 <code>Observable</code>，回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response\nbody of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7-1\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as JSON\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-23\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-23\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HTTPEvents</code> 的 <code>Observable</code>，回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with response body of\ntype <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8-1\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code>request that interprets the body as JSON\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-24\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-24\">返回值</h6>\n  <p translation-result=\"on\">表示此請求的 <code>HTTPEvents</code> 的 <code>Observable</code>，回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response\nbody in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9-1\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; bod...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-25\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; bod...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-25\">返回值</h6>\n  <p translation-result=\"on\">此請求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10-1\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a <code>Blob</code> and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-26\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-26\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11-1\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為文字流，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a text stream and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-27\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-27\">返回值</h6>\n  <p translation-result=\"on\">此請求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12-1\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request the interprets the body as a JavaScript object and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-28\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-28\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13-1\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as JSON\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-29\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-29\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14-1\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 JSON 物件，並且返回 JSON 物件格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as JSON and\nreturns the response body as an object parsed from JSON.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-30\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-30\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response, with the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15-1\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>DELETE</code> 請求，它將請求體解釋為 JSON 物件，並且返回給定型別的響應。</p><p translation-origin=\"off\">Constructs a DELETE request that interprets the body as JSON and returns\nthe response in a given type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-31\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-31\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with response body in the requested type.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"get\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"get\">get()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#get\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L1809-L1830\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L1809-L1830\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 Observable，當它被訂閱時，會要求伺服器執行配置好的 <code>GET</code>\n請求。參見它的各個獨立重載形式，以瞭解其返回值型別。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>GET</code> request to execute on the server. See the individual overloads for\ndetails on the return type.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-個重載形式-1\">15 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1-2\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as an <code>ArrayBuffer</code> and returns the\nresponse in an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-32\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-32\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2-2\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回 <code>Blob</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a <code>Blob</code>\nand returns the response as a <code>Blob</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-33\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-33\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3-2\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為字串，並且返回字串格式的響應。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a text string\nand returns the response as a string value.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-34\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-34\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4-2\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nthe full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-35\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-35\">返回值</h6>\n  <p translation-result=\"on\">表示此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，回應內文為 n <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response\nbody as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5-2\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 <code>Blob</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a <code>Blob</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-36\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-36\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6-2\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a text string and returns\nthe full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-37\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-37\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7-2\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as JSON\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-38\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-38\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the response, with the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8-2\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as JSON and returns the full\nevent stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-39\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-39\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the response, with a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9-2\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-40\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-40\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10-2\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a <code>Blob</code> and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-41\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-41\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11-2\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為文字流，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a text stream and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-42\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-42\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12-2\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as JSON and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-43\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-43\">返回值</h6>\n  <p translation-result=\"on\">此請求的完整 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> 的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>,\nwith the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13-2\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as JSON and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-44\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-44\">返回值</h6>\n  <p translation-result=\"on\">此請求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14-2\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 JSON 物件，並且返回 JSON 物件格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as JSON and\nreturns the response body as an object parsed from JSON.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-45\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-45\">返回值</h6>\n  <p translation-result=\"on\">回應內文的 <code>Observable</code> 作為 JSON 物件。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response body as a JavaScript object.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15-2\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>GET</code> 請求，它將請求體解釋為 JSON 物件，並且返回給定型別的回應內文。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as JSON and returns\nthe response body in a given type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-46\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-46\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with a response body in the requested type.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"head\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"head\">head()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#head\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L2276-L2299\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L2276-L2299\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 Observable，當它被訂閱時，會要求伺服器執行配置好的 <code>HEAD</code> 請求。<code>HEAD</code>\n方法會返回該資源的元資料，而不會傳輸資源本身。參見它的各個獨立重載形式，以瞭解其返回型別。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>HEAD</code> request to execute on the server. The <code>HEAD</code> method returns\nmeta information about the resource without transferring the\nresource itself. See the individual overloads for\ndetails on the return type.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-個重載形式-2\">15 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1-3\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-47\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-47\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2-3\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回 <code>Blob</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-48\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-48\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3-3\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為字串，並且返回字串格式的響應。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a text string and returns the response\nas a string value.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-49\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-49\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4-3\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它把請求體解釋為 <code>ArrayBuffer</code>，並返回完整事件的流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as an  <code>ArrayBuffer</code>\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-50\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-50\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5-3\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 <code>Blob</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a <code>Blob</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-51\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-51\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6-3\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a text string\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-52\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-52\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HttpEvents for the request</code> 的 <code>Observable</code>，回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response body of type\nstring.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7-3\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as JSON\nand returns the full HTTP event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-53\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-53\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HTTPEvents</code> 的 <code>Observable</code>，回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response body of\ntype <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8-3\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as JSON and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-54\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-54\">返回值</h6>\n  <p translation-result=\"on\">表示此請求的 <code>HTTPEvents</code> 的 <code>Observable</code>，回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9-3\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full HTTP response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-55\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-55\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10-3\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a <code>Blob</code> and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-56\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-56\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 blob 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a blob.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11-3\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為文字流，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as text stream\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-57\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-57\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12-3\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as JSON and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-58\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-58\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13-3\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as JSON\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-59\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-59\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body of the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14-3\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 JSON 物件，並且返回 JSON 物件格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as JSON and\nreturns the response body as an object parsed from JSON.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-60\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-60\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 JSON 物件。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response, with the response body as an object parsed from JSON.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15-3\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>HEAD</code> 請求，它將請求體解釋為 JSON 物件，並且返回給定型別的響應。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as JSON and returns\nthe response in a given type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-61\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">與請求一起傳送的 HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-61\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為給定的型別。</p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body of the given type.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"jsonp\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"jsonp\">jsonp()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L2347-L2384\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L2347-L2384\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 <code>Observable</code>，當訂閱該 Observable 時，將透過攔截器管道分派特殊的 <code>JSONP</code> 方法。<a href=\"https://en.wikipedia.org/wiki/JSONP\">JSONP\n模式</a> 可繞過某些 API\n端點的侷限性，這些端點不支援新的方式。更推薦使用\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a> 協議。JSONP 將端點 API 視為\nJavaScript 檔案，並欺騙瀏覽器處理請求，即使 API\n端點與發出請求的客戶端應用不在同一個域（源）上。端點 API 必須支援 JSONP 回呼(Callback)，JSONP\n請求才能正常工作。此資源 API 會返回包裝在回呼(Callback)函式中的 JSON\n響應。你可以將回調函式名稱作為查詢引數之一傳遞。請注意，JSONP 請求只能與 <code>GET</code> 請求一起使用。</p><p translation-origin=\"off\">Constructs an <code>Observable</code> that, when subscribed, causes a request with the special method\n<code>JSONP</code> to be dispatched via the interceptor pipeline.\nThe <a href=\"https://en.wikipedia.org/wiki/JSONP\">JSONP pattern</a> works around limitations of certain\nAPI endpoints that don't support newer,\nand preferable <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a> protocol.\nJSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\nrequests even if the API endpoint is not located on the same domain (origin) as the client-side\napplication making the request.\nThe endpoint API must support JSONP callback for JSONP requests to work.\nThe resource API returns the JSON response wrapped in a callback function.\nYou can pass the callback function name as one of the query parameters.\nNote that JSONP requests can only be used with <code>GET</code> requests.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">為給定的 URL 和回呼(Callback)引數的名稱構造一個 <code>JSONP</code></p><p translation-origin=\"off\">Constructs a <code>JSONP</code> request for the given URL and name of the callback parameter.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">jsonp</span>(url: string, callbackParam: string): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-62\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">資源 URL。</p><p translation-origin=\"off\">The resource URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>callbackParam</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">回呼(Callback)函式名稱。</p><p translation-origin=\"off\">The callback function name.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-62\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為物件型別。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response object, with response body as an object.</p>\n\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">為給定的 URL 和回呼(Callback)引數的名稱構造一個 <code>JSONP</code></p><p translation-origin=\"off\">Constructs a <code>JSONP</code> request for the given URL and name of the callback parameter.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">jsonp</span>&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-63\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">資源 URL。</p><p translation-origin=\"off\">The resource URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>callbackParam</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">回呼(Callback)函式名稱。</p><p translation-origin=\"off\">The callback function name.</p>\n\n<p translation-result=\"on\">你必須安裝合適的攔截器，比如 <code><a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a></code>\n提供的攔截器。如果未經過此類攔截器，則所配置的後端可以拒絕 <code>JSONP</code></p><p translation-origin=\"off\">You must install a suitable interceptor, such as one provided by <code><a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a></code>.\nIf no such interceptor is reached,\nthen the <code>JSONP</code> request can be rejected by the configured backend.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-63\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the response object, with response body in the requested type.</p>\n\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"options\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"options\">options()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#options\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L2827-L2851\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L2827-L2851\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 <code>Observable</code>，當訂閱該 Observable 時，它會讓已配置的 <code>OPTIONS</code>\n請求在伺服器上執行。此方法允許客戶端確定所支援的 HTTP\n方法和端點的其他功能，而無需進行隱含資源操作。有關返回型別的詳細資訊，請參見各個重載。</p><p translation-origin=\"off\">Constructs an <code>Observable</code> that, when subscribed, causes the configured\n<code>OPTIONS</code> request to execute on the server. This method allows the client\nto determine the supported HTTP methods and other capabilities of an endpoint,\nwithout implying a resource action. See the individual overloads for\ndetails on the return type.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-個重載形式-3\">15 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1-4\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as an\n<code>ArrayBuffer</code> and returns the response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-64\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-64\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2-4\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回 <code>Blob</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-65\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-65\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3-4\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為字串，並且返回一個字串。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a text string and\nreturns a string value.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-66\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-66\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4-4\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-67\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-67\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5-4\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 <code>Blob</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a <code>Blob</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-68\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-68\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6-4\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a text string\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-69\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-69\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HTTPEvents</code> 的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7-4\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as JSON\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-70\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-70\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request with the response\nbody of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8-4\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as JSON and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-71\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-71\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9-4\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full HTTP response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-72\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-72\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10-4\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a <code>Blob</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-73\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-73\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11-4\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為文字流，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as text stream\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-74\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-74\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12-4\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as JSON\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-75\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-75\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13-4\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as JSON and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-76\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-76\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14-4\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 JSON 物件，並且返回 JSON 物件格式的回應內文。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as JSON and returns the\nresponse body as an object parsed from JSON.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-77\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-77\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 JSON 物件。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response, with the response body as an object parsed from JSON.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15-4\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>OPTIONS</code> 請求，它將請求體解釋為 JSON 物件，並且返回給定型別的響應。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as JSON and returns the\nresponse in a given type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-78\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-78\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為給定的型別。</p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with a response body of the given type.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"patch\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"patch\">patch()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L3356-L3377\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L3356-L3377\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 Observable，當它被訂閱時，會要求伺服器執行配置好的 <code>PATCH</code>\n請求。參見它的各個獨立重載形式，以瞭解其返回值型別。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>PATCH</code> request to execute on the server. See the individual overloads for\ndetails on the return type.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-個重載形式-4\">15 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1-5\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nthe response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-79\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-79\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2-5\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回 <code>Blob</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a <code>Blob</code> and returns the response\nas a <code>Blob</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-80\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-80\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3-5\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為字串，並且返回字串格式的響應。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a text string and\nreturns the response as a string value.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-81\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-81\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with a response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4-5\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-82\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-82\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HTTPevents</code> 的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5-5\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 <code>Blob</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a <code>Blob</code>\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-83\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-83\">返回值</h6>\n  <p translation-result=\"on\">表示此請求的 <code>HTTPevents</code> 的 <code>Observable</code>，回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the\nresponse body as <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6-5\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a text string and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-84\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-84\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HTTPevents</code> 的 <code>Observable</code>，回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a\nresponse body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7-5\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as JSON\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-85\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-85\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HTTPevents</code> 的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8-5\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as JSON\nand returns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-86\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-86\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HTTPevents</code> 的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9-5\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-87\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-87\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10-5\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a <code>Blob</code> and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-88\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-88\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11-5\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為文字流，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a text stream and returns the\nfull <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-89\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-89\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12-5\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as JSON\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-90\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-90\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13-5\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as JSON\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-91\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-91\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為給定的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the given type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14-5\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 JSON 物件，並且返回 JSON 物件格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as JSON and\nreturns the response body as an object parsed from JSON.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-92\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-92\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 JSON 物件。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response, with the response body as an object parsed from JSON.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15-5\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PATCH</code> 請求，它將請求體解釋為 JSON 物件，並且返回給定型別的響應。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as JSON\nand returns the response in a given type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-93\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要編輯的資源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-93\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為給定的型別。</p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the given type.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"post\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"post\">post()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#post\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L3879-L3901\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L3879-L3901\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 <code>Observable</code>，當訂閱該 Observable 時，它會讓已配置的 <code>POST</code>\n請求在伺服器上執行。。伺服器以替換後資源的位置進行響應。有關返回型別的詳細資訊，請參見各個重載。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>POST</code> request to execute on the server. The server responds with the location of\nthe replaced resource. See the individual overloads for\ndetails on the return type.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-個重載形式-5\">15 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1-6\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nan <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-94\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-94\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2-6\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回 <code>Blob</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a <code>Blob</code> and returns the\nresponse as a <code>Blob</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-95\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-95\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3-6\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為字串，並且返回字串格式的響應。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a text string and\nreturns the response as a string value.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-96\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-96\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with a response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4-6\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-97\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-97\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5-6\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它把請求體解釋為 <code>Blob</code>，並返回完整事件流的 <code>Observable</code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a <code>Blob</code>\nand returns the response in an observable of the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-98\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-98\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response body as <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6-6\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a text string and returns the full\nevent stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-99\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-99\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7-6\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a POST request that interprets the body as JSON and returns the full\nevent stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-100\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-100\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body of type <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8-6\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a POST request that interprets the body as JSON and returns the full\nevent stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-101\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-101\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9-6\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 POST 請求，它將請求體解釋為 <code>ArrayBuffer</code> 型別，並返回完整的 <code>HTTPresponse</code>。</p><p translation-origin=\"off\">Constructs a POST request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-102\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-102\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with the response body as an\n<code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10-6\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a <code>Blob</code> and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-103\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-103\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11-6\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為文字流，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a text stream and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-104\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-104\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12-6\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as JSON\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-105\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-105\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HTTPResponse</code> 的 <code>Observable</code>，回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body of type\n<code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13-6\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as JSON and returns the\nfull <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-106\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-106\">返回值</h6>\n  <p translation-result=\"on\">表示此請求的 <code>HTTPResponse</code> 的 <code>Observable</code>，回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body in the\nrequested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14-6\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 JSON 物件，並且返回 JSON 物件格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as JSON\nand returns the response body as an object parsed from JSON.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-107\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-107\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 JSON 物件。</p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response, with the response body as an object parsed from JSON.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15-6\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>POST</code> 請求，它將請求體解釋為 JSON 物件，並且返回響應物件的 <code>Observable</code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as JSON\nand returns an observable of the response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-108\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要替換的內容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-108\">返回值</h6>\n  <p translation-result=\"on\">表示此請求的 <code>HTTPResponse</code> 的 <code>Observable</code>，回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body in the\nrequested type.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"put\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"put\">put()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#put\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L4400-L4422\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L4400-L4422\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">構造一個 <code>Observable</code>，當訂閱該 Observable 時，它會讓已配置的 <code>PUT</code> 請求在伺服器上執行。。\n<code>PUT</code> 方法用一組新值替換現有資源。有關返回型別的詳細資訊，請參見各個重載。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>PUT</code> request to execute on the server. The <code>PUT</code> method replaces an existing resource\nwith a new set of values.\nSee the individual overloads for details on the return type.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-個重載形式-6\">15 個重載形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">顯示所有</span>\n              <span class=\"action-collapse\">隱藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1-7\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並且返回 <code>ArrayBuffer</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an <code>ArrayBuffer</code> and returns the\nresponse as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-109\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-109\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;ArrayBuffer&gt;</code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2-7\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回 <code>Blob</code> 格式的回應內文。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-110\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-110\">返回值</h6>\n  <p translation-result=\"on\">響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;Blob&gt;</code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3-7\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為字串，並且返回字串格式的響應。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a text string and\nreturns the response as a string value.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-111\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-111\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;string&gt;</code>: An <code>Observable</code> of the response, with a response body of type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4-7\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-112\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-112\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-5-7\">Overload #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 <code>Blob</code>，並返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a <code>Blob</code> and returns the full event\nstream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-113\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-113\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-6-7\">Overload #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為文字字串，並且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a text string and returns the full event\nstream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-114\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-114\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HttpEvents for the request</code> 的 <code>Observable</code>，回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response body\nof type string.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-7-7\">Overload #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as JSON and returns the full\nevent stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-115\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-115\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response body of\ntype <code>Object</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-8-7\">Overload #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 JSON 物件，並且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as JSON and returns the\nfull event stream.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-116\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-116\">返回值</h6>\n  <p translation-result=\"on\">此請求的 <code>HttpEvents</code> 的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-9-7\">Overload #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 <code>ArrayBuffer</code>，並返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an\n<code>ArrayBuffer</code> and returns an observable of the full HTTP response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-117\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-117\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>ArrayBuffer</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with the response body as an\n<code>ArrayBuffer</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-10-7\">Overload #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 <code>Blob</code>，並且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a <code>Blob</code> and returns the\nfull HTTP response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-118\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-118\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Blob</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-11-7\">Overload #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為文字流，並返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a text stream and returns the\nfull HTTP response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-119\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-119\">返回值</h6>\n  <p translation-result=\"on\">表示啥此請求的 <code>HTTPResponse</code> 的 <code>Observable</code>，回應內文為 string 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body of type\nstring.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-12-7\">Overload #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 JSON 物件，並返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as JSON and returns the full\nHTTP response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-120\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-120\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為 <code>Object</code> 型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body\nof type 'Object`.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-13-7\">Overload #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為所請求型別的例項，並返回完整的 HTTP 響應物件。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an instance of the requested type and\nreturns the full HTTP response.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-121\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-121\">返回值</h6>\n  <p translation-result=\"on\">此請求的響應物件的 <code>Observable</code>，其回應內文為所請求的型別。</p><p translation-origin=\"off\"><code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-14-7\">Overload #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為 JSON 物件，並返回 JSON 物件的 <code>Observable</code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as JSON\nand returns an observable of JavaScript object.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-122\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-122\">返回值</h6>\n  <p translation-result=\"on\">JSON 格式的響應物件的 <code>Observable</code></p><p translation-origin=\"off\"><code>Observable&lt;Object&gt;</code>: An <code>Observable</code> of the response as a JavaScript object.</p>\n\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-15-7\">Overload #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">構造一個 <code>PUT</code> 請求，它將請求體解釋為所請求型別的例項，並返回所請求型別的響應流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an instance of the requested type\nand returns an observable of the requested type.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-123\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">端點 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">要新增/更新的資源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">HTTP 選項</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">HTTP options</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-123\">返回值</h6>\n  <p translation-result=\"on\">所請求型別的 <code>Observable</code></p><p translation-origin=\"off\"><code>Observable&lt;T&gt;</code>: An <code>Observable</code> of the requested type.</p>\n\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\"><a href=\"/tutorial/tour-of-heroes/toh-pt0\">“英雄之旅”</a>應用程式的範例 HTTP 請求。</p><p translation-origin=\"off\">Sample HTTP requests for the <a href=\"/tutorial/tour-of-heroes/toh-pt0\">Tour of Heroes</a> application.</p>\n\n<h3 id=\"http-request-example\" translation-result=\"on\">HTTP 請求範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#http-request-example\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">HTTP Request Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#http-request-example\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example>\n // GET heroes whose name contains search term\nsearchHeroes(term: string): observable&lt;Hero[]&gt;{\n\n const params = new <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a>({fromString: 'name=term'});\n   return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n}\n</code-example>\n<p translation-result=\"on\">或者，可以透過直接加入 URL 來使用引數字串，而無需呼叫 HttpParams。</p><p translation-origin=\"off\">Alternatively, the parameter string can be used without invoking HttpParams\nby directly joining to the URL.</p>\n\n<code-example>\nthis.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n</code-example>\n<h3 id=\"jsonp-example\" translation-result=\"on\">JSONP 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp-example\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">JSONP Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp-example\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example>\nrequestJsonp(url, callback = 'callback') {\n return this.httpClient.jsonp(this.heroesURL, callback);\n}\n</code-example>\n<h3 id=\"patch-example\" translation-result=\"on\">PATCH 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch-example\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">PATCH Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch-example\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example>\n// PATCH one of the heroes' name\npatchHero (id: number, heroName: string): Observable&lt;{}&gt; {\nconst url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n return this.httpClient.patch(url, {name: heroName}, httpOptions)\n   .pipe(catchError(this.handleError('patchHero')));\n}\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HttpBackend\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/common/http/HttpInterceptorFn\n - api/common/http/provideHttpClient\n - api/common/http/testing\n - api/common/http/testing/HttpClientTestingModule\n - api/common/http/withInterceptors\n - api/common/http/withInterceptorsFromDi\n - api/common/http/withJsonpSupport\n - api/common/http/withNoXsrfProtection\n - api/common/http/withRequestsMadeViaParent\n - api/common/http/withXsrfConfiguration\n - api/core/APP_INITIALIZER\n - errors/NG02800\n - guide/architecture-next-steps\n - guide/architecture-services\n - guide/creating-injectable-service\n - guide/deprecations\n - guide/example-apps-list\n - guide/http\n - guide/http-handle-request-errors\n - guide/http-intercept-requests-and-responses\n - guide/http-interceptor-use-cases\n - guide/http-make-jsonp-request\n - guide/http-pass-metadata-to-interceptors\n - guide/http-request-data-from-server\n - guide/http-security-xsrf-protection\n - guide/http-send-data-to-server\n - guide/http-server-communication\n - guide/http-setup-server-communication\n - guide/http-test-requests\n - guide/http-track-show-request-progress\n - guide/observables-in-angular\n - guide/pipes\n - guide/schematics-for-libraries\n - guide/security\n - guide/styleguide\n - guide/testing-components-scenarios\n - guide/testing-services\n - guide/understanding-communicating-with-http\n - guide/universal\n - guide/update-to-version-14\n - guide/upgrade\n - guide/zone\n - start/start-data\n - tutorial/first-app/first-app-lesson-14\n - tutorial/tour-of-heroes/toh-pt4\n - tutorial/tour-of-heroes/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - /tutorial/tour-of-heroes/toh-pt0\n - api/common\n - api/common/http\n - api/common/http/HttpClient#delete\n - api/common/http/HttpClient#description\n - api/common/http/HttpClient#get\n - api/common/http/HttpClient#head\n - api/common/http/HttpClient#http-request-example\n - api/common/http/HttpClient#http-請求範例\n - api/common/http/HttpClient#httpclient\n - api/common/http/HttpClient#instance-methods\n - api/common/http/HttpClient#jsonp\n - api/common/http/HttpClient#jsonp-example\n - api/common/http/HttpClient#jsonp-範例\n - api/common/http/HttpClient#options\n - api/common/http/HttpClient#patch\n - api/common/http/HttpClient#patch-example\n - api/common/http/HttpClient#patch-範例\n - api/common/http/HttpClient#post\n - api/common/http/HttpClient#put\n - api/common/http/HttpClient#request\n - api/common/http/HttpClient#see-also\n - api/common/http/HttpClient#usage-notes\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpContext\n - api/common/http/HttpEvent\n - api/common/http/HttpHeaders\n - api/common/http/HttpParams\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - guide/http\n - https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n - https://en.wikipedia.org/wiki/JSONP\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L1340-L1370\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L1809-L1830\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L2276-L2299\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L2347-L2384\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L2827-L2851\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L3356-L3377\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L3879-L3901\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L4400-L4422\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L61-L4423\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/common/http/src/client.ts?message=docs(common)%3A%20請簡述你的修改...#L700-L887\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L1340-L1370\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L1809-L1830\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L2276-L2299\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L2347-L2384\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L2827-L2851\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L3356-L3377\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L3879-L3901\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L4400-L4422\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L61-L4423\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/common/http/src/client.ts#L700-L887\n-->"}