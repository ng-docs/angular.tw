{"id":"api/animations/state","title":"state","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/animations\", \"name\": \"@angular/animations\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/animations/state\", \"name\": \"state\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/animations\">@angular/animations</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20請簡述你的修改...#L1170-L1226\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/animations/src/animation_metadata.ts#L1170-L1226\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"state\">state<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/state#state\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">在附加到元素的觸發器上，宣告一個動畫狀態。</p><p translation-origin=\"off\">Declares an animation state within a trigger attached to an element.</p>\n\n\n  </section>\n\n  <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <span class=\"member-name\">state</span>(name: string, styles: <a href=\"api/animations/AnimationStyleMetadata\" class=\"code-anchor\">AnimationStyleMetadata</a>, options?: { params: { [name: string]: any; }; }): <a href=\"api/animations/AnimationStateMetadata\" class=\"code-anchor\">AnimationStateMetadata</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">所定義的狀態的一個或多個名字（用逗號分隔）。\n下面這些保留的狀態名可用於為一些特殊使用案例定義樣式：</p><p translation-origin=\"off\">One or more names for the defined state in a comma-separated string.\nThe following reserved state names can be supplied to define a style for specific use\ncases:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>void</code> 你可以使用該名稱關聯一些樣式，用於定義當該元素從應用中移除時的樣式。比如，當 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>\n的值為 <code>false</code> 時，相關元素的狀態就是 <code>void</code>。</p><p translation-origin=\"off\"><code>void</code> You can associate styles with this name to be used when\nthe element is detached from the application. For example, when an <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> evaluates\nto false, the state of the associated element is void.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>*</code>（星號）表示預設狀態。當觸發器中未宣告要設定的動畫狀態時，就會把該名稱所關聯的樣式用作回退（fallback）值。</p><p translation-origin=\"off\"><code>*</code> (asterisk) Indicates the default state. You can associate styles with this name\nto be used as the fallback when the state that is being animated is not declared\nwithin the trigger.</p>\n\n</li>\n</ul>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>styles</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/animations/AnimationStyleMetadata\" class=\"code-anchor\">AnimationStyleMetadata</a></code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">一組與該狀態相關的 CSS 樣式，使用 <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> 函式建立。\n一旦到達該狀態，這組樣式就會永久性的應用在該元素上。</p><p translation-origin=\"off\">A set of CSS styles associated with this state, created using the\n<code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> function.\nThis set of styles persists on the element once the state has been reached.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">一些在呼叫它時可傳給該狀態的引數。\n包含 0 或多個鍵值對。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">Parameters that can be passed to the state when it is invoked.\n0 or more key-value pairs.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p translation-result=\"on\">一個封裝了新狀態資料的物件。</p><p translation-origin=\"off\"><code><a href=\"api/animations/AnimationStateMetadata\" class=\"code-anchor\">AnimationStateMetadata</a></code>: An object that encapsulates the new state data.</p>\n\n\n</div>\n\n\n\n\n\n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/state#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">使用 <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> 函式來為動畫觸發器註冊狀態。\n使用 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 函式來在狀態之間執行動畫。\n當某個狀態在元件中啟用時，它所關聯的樣式會永久性的作用在該元素上 —— 即使該動畫已經結束了。</p><p translation-origin=\"off\">Use the <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> function to register states to an animation trigger.\nUse the <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> function to animate between states.\nWhen a state is active within a component, its associated styles persist on the element,\neven when the animation ends.</p>\n\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationMetadataType\n - api/animations/AnimationStateMetadata\n - api/animations/style\n - api/animations/trigger\n - api/core/Component\n - guide/animate-state-style\n - guide/animation-api-summary\n - guide/animation-transition-timing\n - guide/animations\n - guide/router-tutorial-toh\n - guide/transition-and-triggers\n-->\n<!-- links from this doc:\n - /api\n - api/animations\n - api/animations/AnimationStateMetadata\n - api/animations/AnimationStyleMetadata\n - api/animations/state#state\n - api/animations/state#usage-notes\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/common/NgIf\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20請簡述你的修改...#L1170-L1226\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/animations/src/animation_metadata.ts#L1170-L1226\n-->"}