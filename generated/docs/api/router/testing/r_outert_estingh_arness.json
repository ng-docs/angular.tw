{"id":"api/router/testing/RouterTestingHarness","title":"RouterTestingHarness","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/router\", \"name\": \"@angular/router\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/router/testing\", \"name\": \"@angular/router/testing\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/router/testing/RouterTestingHarness\", \"name\": \"RouterTestingHarness\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/router\">@angular/router</a> &gt; <a href=\"api/router/testing\">@angular/router/testing</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L44-L213\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L44-L213\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"routertestingharness\">RouterTestingHarness<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/testing/RouterTestingHarness#routertestingharness\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">用於 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 的測試工具，用於減少測試路由和路由元件所需的樣板檔案。</p><p translation-origin=\"off\">A testing harness for the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> to reduce the boilerplate needed to test routes and routed\ncomponents.</p>\n\n\n  </section><section ng-should-translate=\"\" class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/router/testing/RouterTestingHarness\" class=\"code-anchor\">RouterTestingHarness</a> {\n  <a class=\"code-anchor\" href=\"api/router/testing/RouterTestingHarness#create\">static <span class=\"member-name\">create</span>(initialUrl?: string): Promise&lt;RouterTestingHarness&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/testing/RouterTestingHarness#routeDebugElement\"><span class=\"member-name\">routeDebugElement</span>: DebugElement | null</a>\n  <a class=\"code-anchor\" href=\"api/router/testing/RouterTestingHarness#routeNativeElement\"><span class=\"member-name\">routeNativeElement</span>: HTMLElement | null</a>\n  <a class=\"code-anchor\" href=\"api/router/testing/RouterTestingHarness#detectChanges\"><span class=\"member-name\">detectChanges</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/router/testing/RouterTestingHarness#navigateByUrl\"><span class=\"member-name\">navigateByUrl</span>&lt;T&gt;(url: string, requiredRoutedComponentType?: Type&lt;T&gt;): Promise&lt;T | null&gt;</a>\n}\n</code-example>\n\n</section>\n\n  \n  \n<section ng-should-translate=\"\" class=\"static-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"static-methods\">靜態方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/testing/RouterTestingHarness#static-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"create\"></a>\n<table class=\"is-full-width method-table static-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"create\">create()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/testing/RouterTestingHarness#create\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L54-L80\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L54-L80\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">建立一個 <code><a href=\"api/router/testing/RouterTestingHarness\" class=\"code-anchor\">RouterTestingHarness</a></code> 例項。</p><p translation-origin=\"off\">Creates a <code><a href=\"api/router/testing/RouterTestingHarness\" class=\"code-anchor\">RouterTestingHarness</a></code> instance.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">create</span>(initialUrl?: string): Promise&lt;<a href=\"api/router/testing/RouterTestingHarness\" class=\"code-anchor\">RouterTestingHarness</a>&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table static-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"static-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>initialUrl</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">返回線束之前要觸發的導航目標。</p><p translation-result=\"on\">可選值。預設值為 <code>undefined</code>。</p><p translation-origin=\"off\">The target of navigation to trigger before returning the harness.</p>\n\n\n        \n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>Promise&lt;<a href=\"api/router/testing/RouterTestingHarness\" class=\"code-anchor\">RouterTestingHarness</a>&gt;</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\"><code><a href=\"api/router/testing/RouterTestingHarness\" class=\"code-anchor\">RouterTestingHarness</a></code> 還使用 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 建立自己的根元件，用於渲染路由元件。</p><p translation-origin=\"off\">The <code><a href=\"api/router/testing/RouterTestingHarness\" class=\"code-anchor\">RouterTestingHarness</a></code> also creates its own root component with a <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> for the\npurposes of rendering route components.</p>\n\n<p translation-result=\"on\">如果例項已建立，則丟擲錯誤。使用此工具還需要在 <code><a href=\"api/core/testing/ModuleTeardownOptions\" class=\"code-anchor\">ModuleTeardownOptions</a></code> 中設定 <code>destroyAfterEach: true</code></p><p translation-origin=\"off\">Throws an error if an instance has already been created.\nUse of this harness also requires <code>destroyAfterEach: true</code> in the <code><a href=\"api/core/testing/ModuleTeardownOptions\" class=\"code-anchor\">ModuleTeardownOptions</a></code></p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n<section ng-should-translate=\"\" class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/testing/RouterTestingHarness#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>屬性</th>\n        <th>說明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"routeDebugElement\"></a>\n          <code class=\"\"><span class=\"member-name\">routeDebugElement</span>: <a href=\"api/core/DebugElement\" class=\"code-anchor\">DebugElement</a> | null</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 元件的 <code><a href=\"api/core/DebugElement\" class=\"code-anchor\">DebugElement</a></code>。如果插座未啟用，則為 <code>null</code>。</p><p translation-origin=\"off\">The <code><a href=\"api/core/DebugElement\" class=\"code-anchor\">DebugElement</a></code> of the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> component. <code>null</code> if the outlet is not activated.</p>\n</div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"routeNativeElement\"></a>\n          <code class=\"\"><span class=\"member-name\">routeNativeElement</span>: HTMLElement | null</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">唯讀</span>\n          <div no-translate=\"\"><p translation-result=\"on\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 元件的原生元素。如果插座未啟用，則為 <code>null</code>。</p><p translation-origin=\"off\">The native element of the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> component. <code>null</code> if the outlet is not activated.</p>\n</div>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section ng-should-translate=\"\" class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/testing/RouterTestingHarness#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"detectChanges\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"detectchanges\">detectChanges()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/testing/RouterTestingHarness#detectchanges\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L84-L93\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L84-L93\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">指示根夾具執行變更檢測。</p><p translation-origin=\"off\">Instructs the root fixture to run change detection.</p>\n\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">detectChanges</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-1\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"navigateByUrl\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"navigatebyurl\">navigateByUrl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/testing/RouterTestingHarness#navigatebyurl\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L188-L212\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L188-L212\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">觸發 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 導航並等待它完成。</p><p translation-origin=\"off\">Triggers a <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> navigation and waits for it to complete.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">navigateByUrl</span>(url: string): Promise&lt;null | {}&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-2\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">導航的目標。傳遞給 <code>Router.navigateByUrl</code>。</p><p translation-origin=\"off\">The target of the navigation. Passed to <code>Router.navigateByUrl</code>.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p translation-result=\"on\">導航完成後 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的啟用元件例項（如果插座未啟用則為 <code>null</code> ）。</p><p translation-origin=\"off\"><code>Promise&lt;null | {}&gt;</code>: The activated component instance of the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> after navigation completes\n(<code>null</code> if the outlet does not get activated).</p>\n\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p translation-result=\"on\">觸發路由器導航並等待它完成。</p><p translation-origin=\"off\">Triggers a router navigation and waits for it to complete.</p>\n\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">navigateByUrl</span>&lt;T&gt;(url: string, requiredRoutedComponentType: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;T&gt;): Promise&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"引數-3\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">導航的目標。傳遞給 <code>Router.navigateByUrl</code>。</p><p translation-origin=\"off\">The target of the navigation. Passed to <code>Router.navigateByUrl</code>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>requiredRoutedComponentType</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Type\" class=\"code-anchor\">Type&lt;T&gt;</a></code></td>\n      <td class=\"param-description\">\n        <p translation-result=\"on\">導航完成後，<code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的啟用元件所需的型別。如果插座未啟用或激活了不同的元件，則此函式將引發錯誤。</p><p translation-origin=\"off\">After navigation completes, the required type for the\nactivated component of the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>. If the outlet is not activated or a different\ncomponent is activated, this function will throw an error.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p translation-result=\"on\">導航完成後啟用的 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 元件例項。</p><p translation-origin=\"off\"><code>Promise&lt;T&gt;</code>: The activated component instance of the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> after navigation completes.</p>\n\n\n  <div class=\"description\">\n    <p translation-result=\"on\">具有為線束建立的 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的根元件用於渲染 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 元件。</p><p translation-origin=\"off\">The root component with a <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> created for the harness is used to render <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>\ncomponents.</p>\n\n<code-example path=\"router/testing/test/router_testing_harness_examples.spec.ts\" region=\"RoutedComponent\">\nit('navigates to routed component', async () =&gt; {\n  @<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({standalone: true, template: 'hello {{name}}'})\n  class TestCmp {\n    name = 'world';\n  }\n\n  TestBed.configureTestingModule({\n    providers: [<a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a>([{path: '', component: TestCmp}])],\n  });\n\n  const harness = await RouterTestingHarness.create();\n  const activatedComponent = await harness.navigateByUrl('/', TestCmp);\n  expect(activatedComponent).toBeInstanceOf(TestCmp);\n  expect(harness.routeNativeElement?.innerHTML).toContain('hello world');\n});\n\n</code-example>\n<p translation-result=\"on\">在對 <code>navigateByUrl</code> 後續呼叫中，根元件在同一測試中重複使用。</p><p translation-origin=\"off\">The root component is reused within the same test in subsequent calls to <code>navigateByUrl</code>.</p>\n\n<p translation-result=\"on\">此功能還可以更輕鬆地測試依賴於 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 資料的元件。</p><p translation-origin=\"off\">This function also makes it easier to test components that depend on <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> data.</p>\n\n<code-example path=\"router/testing/test/router_testing_harness_examples.spec.ts\" region=\"ActivatedRoute\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  imports: [<a href=\"api/common/AsyncPipe\" class=\"code-anchor\">AsyncPipe</a>],\n  template: `search: {{(route.queryParams | <a href=\"api/common/AsyncPipe\" class=\"code-anchor\">async</a>)?.query}}`\n})\nclass SearchCmp {\n  constructor(readonly route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>, readonly router: <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>) {}\n\n  async searchFor(thing: string) {\n    await this.router.navigate([], {queryParams: {<a href=\"api/animations/query\" class=\"code-anchor\">query</a>: thing}});\n  }\n}\n\nTestBed.configureTestingModule({\n  providers: [<a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a>([{path: 'search', component: SearchCmp}])],\n});\n\nconst harness = await RouterTestingHarness.create();\nconst activatedComponent = await harness.navigateByUrl('/search', SearchCmp);\nawait activatedComponent.searchFor('books');\nharness.detectChanges();\nexpect(TestBed.inject(<a href=\"api/router/Router\" class=\"code-anchor\">Router</a>).url).toEqual('/search?<a href=\"api/animations/query\" class=\"code-anchor\">query</a>=books');\nexpect(harness.routeNativeElement?.innerHTML).toContain('books');\n\n</code-example>\n  </div>\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">具有為線束建立的 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的根元件用於渲染 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 元件。在對 <code>navigateForTest</code> 後續呼叫中，根元件在同一測試中重複使用。</p><p translation-origin=\"off\">The root component with a <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> created for the harness is used to render <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>\ncomponents. The root component is reused within the same test in subsequent calls to\n<code>navigateForTest</code>.</p>\n\n<p translation-result=\"on\">當使用拒絕導航的守衛測試 <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> 時，<code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 可能未啟用並且 <code>activatedComponent</code> 可能為 <code>null</code>。</p><p translation-origin=\"off\">When testing <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> with a guards that reject the navigation, the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> might not be\nactivated and the <code>activatedComponent</code> may be <code>null</code>.</p>\n\n<code-example path=\"router/testing/test/router_testing_harness_examples.spec.ts\" region=\"Guard\">\nlet isLoggedIn = false;\nconst isLoggedInGuard: <a href=\"api/router/CanActivateFn\" class=\"code-anchor\">CanActivateFn</a> = () =&gt; {\n  return isLoggedIn ? true : inject(<a href=\"api/router/Router\" class=\"code-anchor\">Router</a>).parseUrl('/login');\n};\n\nTestBed.configureTestingModule({\n  providers: [\n    <a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a>([\n      {path: 'admin', canActivate: [isLoggedInGuard], component: AdminComponent},\n      {path: 'login', component: LoginComponent},\n    ]),\n  ],\n});\n\nconst harness = await RouterTestingHarness.create('/admin');\nexpect(TestBed.inject(<a href=\"api/router/Router\" class=\"code-anchor\">Router</a>).url).toEqual('/login');\nisLoggedIn = true;\nawait harness.navigateByUrl('/admin');\nexpect(TestBed.inject(<a href=\"api/router/Router\" class=\"code-anchor\">Router</a>).url).toEqual('/admin');\n\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/router/testing\n - guide/testing-components-scenarios\n-->\n<!-- links from this doc:\n - /api\n - api/animations/query\n - api/common/AsyncPipe\n - api/core/Component\n - api/core/DebugElement\n - api/core/Type\n - api/core/testing/ModuleTeardownOptions\n - api/router\n - api/router/ActivatedRoute\n - api/router/CanActivateFn\n - api/router/Route\n - api/router/Router\n - api/router/RouterOutlet\n - api/router/Routes\n - api/router/provideRouter\n - api/router/testing\n - api/router/testing/RouterTestingHarness#create\n - api/router/testing/RouterTestingHarness#detectChanges\n - api/router/testing/RouterTestingHarness#detectchanges\n - api/router/testing/RouterTestingHarness#instance-methods\n - api/router/testing/RouterTestingHarness#instance-properties\n - api/router/testing/RouterTestingHarness#navigateByUrl\n - api/router/testing/RouterTestingHarness#navigatebyurl\n - api/router/testing/RouterTestingHarness#routeDebugElement\n - api/router/testing/RouterTestingHarness#routeNativeElement\n - api/router/testing/RouterTestingHarness#routertestingharness\n - api/router/testing/RouterTestingHarness#static-methods\n - api/upgrade/static\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L188-L212\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L44-L213\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L54-L80\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/router/testing/src/router_testing_harness.ts?message=docs(router)%3A%20請簡述你的修改...#L84-L93\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/docs/PUBLIC_API.md#final-classes\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L188-L212\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L44-L213\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L54-L80\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/testing/src/router_testing_harness.ts#L84-L93\n-->"}