{"id":"api/router/OnSameUrlNavigation","title":"OnSameUrlNavigation","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/router\", \"name\": \"@angular/router\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/router/OnSameUrlNavigation\", \"name\": \"OnSameUrlNavigation\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/router\">@angular/router</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/router/src/models.ts?message=docs(router)%3A%20請簡述你的修改...#L14-L48\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/src/models.ts#L14-L48\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"onsameurlnavigation\">OnSameUrlNavigation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/OnSameUrlNavigation#onsameurlnavigation\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label type-alias\">type-alias</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">定義當路由器收到一個導航到當前 URL 的請求時應該怎麼做。可取下列值之一：</p><p translation-origin=\"off\">How to handle a navigation request to the current URL. One of:</p>\n\n\n    <p no-translate=\"\"><a href=\"api/router/OnSameUrlNavigation#description\">檢視\"說明\"...</a></p>\n  </section>\n  <section ng-should-translate=\"\" class=\"type-alias-overview\">\n    <code-example language=\"ts\" hidecopy=\"true\">\n    type <a href=\"api/router/OnSameUrlNavigation\" class=\"code-anchor\">OnSameUrlNavigation</a> = 'reload' | 'ignore';\n    </code-example>\n  </section>\n\n<section ng-should-translate=\"\" class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/OnSameUrlNavigation#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p><code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code></p></li>\n    <li><p><code><a href=\"api/router/RunGuardsAndResolvers\" class=\"code-anchor\">RunGuardsAndResolvers</a></code></p></li>\n    <li><p><code><a href=\"api/router/NavigationBehaviorOptions\" class=\"code-anchor\">NavigationBehaviorOptions</a></code></p></li>\n    <li><p><code><a href=\"api/router/RouterConfigOptions\" class=\"code-anchor\">RouterConfigOptions</a></code></p></li>\n  </ul>\n</section>\n  \n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/OnSameUrlNavigation#description\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n<li>\n<p translation-result=\"on\"><code>'ignore'</code> : 路由器忽略請求，與當前狀態相同。</p><p translation-origin=\"off\"><code>'ignore'</code> :  The router ignores the request it is the same as the current state.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>'reload'</code>：路由器處理 URL，即使它與當前狀態沒有區別。你可能需要此選項的一個範例是，如果 <code>canMatch</code> 守衛取決於應用程式狀態並且最初拒絕導航到路由。修復狀態後，你想要重新導航到相同的 URL，以便可以啟用帶有 <code>canMatch</code> 守衛的路由。</p><p translation-origin=\"off\"><code>'reload'</code> : The router processes the URL even if it is not different from the current state.\nOne example of when you might want this option is if a <code>canMatch</code> guard depends on\napplication state and initially rejects navigation to a route. After fixing the state, you want\nto re-navigate to the same URL so the route with the <code>canMatch</code> guard can activate.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">請注意，這僅配置 Route 是否重新處理 URL 並觸發相關操作和事件，如重新導向、守衛和解析器。預設情況下，當路由器重新導航到相同的元件型別而不首先存取不同的元件時，它會重新使用元件例項。此行為由 <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code> 配置。為了在相同的 url 導航上重新載入路由元件，你需要將 <code>onSameUrlNavigation</code> 設定為 <code>'reload'</code><em> 並 </em> 提供一個 <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code>，它為 <code>shouldReuseRoute</code> 返回 <code>false</code>。此外，除非路徑或路徑引數更改（由 <code>runGuardsAndResolvers</code> 配置），否則解析器和大多數路由守衛不會執行。</p><p translation-origin=\"off\">Note that this only configures whether the Route reprocesses the URL and triggers related\naction and events like redirects, guards, and resolvers. By default, the router re-uses a\ncomponent instance when it re-navigates to the same component type without visiting a different\ncomponent first. This behavior is configured by the <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code>. In order to reload\nrouted components on same url navigation, you need to set <code>onSameUrlNavigation</code> to <code>'reload'</code>\n<em>and</em> provide a <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code> which returns <code>false</code> for <code>shouldReuseRoute</code>. Additionally,\nresolvers and most guards for routes do not run unless the path or path params changed\n(configured by <code>runGuardsAndResolvers</code>).</p>\n\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/NavigationBehaviorOptions\n - api/router/Router\n - api/router/RouterConfigOptions\n-->\n<!-- links from this doc:\n - /api\n - api/router\n - api/router/NavigationBehaviorOptions\n - api/router/OnSameUrlNavigation#description\n - api/router/OnSameUrlNavigation#onsameurlnavigation\n - api/router/OnSameUrlNavigation#see-also\n - api/router/RouteReuseStrategy\n - api/router/RouterConfigOptions\n - api/router/RunGuardsAndResolvers\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/router/src/models.ts?message=docs(router)%3A%20請簡述你的修改...#L14-L48\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/src/models.ts#L14-L48\n-->"}