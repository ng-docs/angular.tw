{"id":"guide/image-directive","title":"Getting started with NgOptimizedImage","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/image-directive.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"getting-started-with-ngoptimizedimage\" translation-result=\"on\">NgOptimizedImage 入門<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#getting-started-with-ngoptimizedimage\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Getting started with NgOptimizedImage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#getting-started-with-ngoptimizedimage\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\"><code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 指令可以輕鬆採用關於效能的最佳實踐來載入圖片。</p><p translation-origin=\"off\">The <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> directive makes it easy to adopt performance best practices for loading images.</p>\n\n<p translation-result=\"on\">該指令可確保<a href=\"http://web.dev/lcp\">最大內容繪製 （LCP）</a>圖片的載入優先順序為：</p><p translation-origin=\"off\">The directive ensures that the loading of the <a href=\"http://web.dev/lcp\">Largest Contentful Paint (LCP)</a> image is prioritized by:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">自動設定 <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> 標籤上的 <code>fetchpriority</code> 屬性</p><p translation-origin=\"off\">Automatically setting the <code>fetchpriority</code> attribute on the <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> tag</p>\n\n</li>\n<li>\n<p translation-result=\"on\">預設延遲載入其他圖片</p><p translation-origin=\"off\">Lazy loading other images by default</p>\n\n</li>\n<li>\n<p translation-result=\"on\">斷言文件頭中有相應的預連線連結標籤</p><p translation-origin=\"off\">Asserting that there is a corresponding preconnect link tag in the document head</p>\n\n</li>\n<li>\n<p translation-result=\"on\">自動產生 <code>srcset</code> 屬性</p><p translation-origin=\"off\">Automatically generating a <code>srcset</code> attribute</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果應用程式使用 SSR，則產生<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\">預載入提示</a></p><p translation-origin=\"off\">Generating a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\">preload hint</a> if app is using SSR</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">除了最佳化 LCP 圖片的載入之外，<code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 還實施了許多圖片最佳實踐，例如：</p><p translation-origin=\"off\">In addition to optimizing the loading of the LCP image, <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> enforces a number of image best practices, such as:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用<a href=\"https://web.dev/image-cdns/#how-image-cdns-use-urls-to-indicate-optimization-options\">圖片 CDN URL 應用圖片最佳化</a></p><p translation-origin=\"off\">Using <a href=\"https://web.dev/image-cdns/#how-image-cdns-use-urls-to-indicate-optimization-options\">image CDN URLs to apply image optimizations</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">透過要求 <code>width</code> 和 <code>height</code> 來防止佈局偏移</p><p translation-origin=\"off\">Preventing layout shift by requiring <code>width</code> and <code>height</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果 <code>width</code> 或 <code>height</code> 設定不正確，則會發出警告</p><p translation-origin=\"off\">Warning if <code>width</code> or <code>height</code> have been set incorrectly</p>\n\n</li>\n<li>\n<p translation-result=\"on\">給出渲染時圖片是否會在視覺上失真的警告</p><p translation-origin=\"off\">Warning if the image will be visually distorted when rendered</p>\n\n</li>\n</ul>\n<h2 id=\"getting-started\" translation-result=\"on\">快速上手<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#getting-started\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Getting Started<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#getting-started\"><i class=\"material-icons\">link</i></a></h2>\n\n<h4 id=\"step-1-import-ngoptimizedimage\" translation-result=\"on\">步驟 1：匯入 NgOptimizedImage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-1-import-ngoptimizedimage\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Step 1: Import NgOptimizedImage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-1-import-ngoptimizedimage\"><i class=\"material-icons\">link</i></a></h4>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport { <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a> } from '@angular/common'\n\n</code-example>\n<p translation-result=\"on\">該指令被定義為<a href=\"/guide/standalone-components\">獨立指令</a>，因此元件應該直接匯入它。</p><p translation-origin=\"off\">The directive is defined as a <a href=\"/guide/standalone-components\">standalone directive</a>, so components should import it directly.</p>\n\n<h4 id=\"step-2-optional-set-up-a-loader\" translation-result=\"on\">第 2 步：（可選）設定載入器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-2-optional-set-up-a-loader\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Step 2: (Optional) Set up a Loader<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-2-optional-set-up-a-loader\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">使用 NgOptimizedImage <strong>不一定需要</strong>圖片載入器，但使用帶有圖片 CDN 的載入器可以實現強大的效能特性，包括為圖片自動設定 <code>srcset</code>。</p><p translation-origin=\"off\">An image loader is not <strong>required</strong> in order to use NgOptimizedImage, but using one with an image CDN enables powerful performance features, including automatic <code>srcset</code>s for your images.</p>\n\n<p translation-result=\"on\">有關設定載入器的簡短指南，請參閱本頁末尾的<a href=\"guide/image-directive#configuring-an-image-loader-for-ngoptimizedimage\">配置圖片載入器</a>部分。</p><p translation-origin=\"off\">A brief guide for setting up a loader can be found in the <a href=\"guide/image-directive#configuring-an-image-loader-for-ngoptimizedimage\">Configuring an Image Loader</a> section at the end of this page.</p>\n\n<h4 id=\"step-3-enable-the-directive\" translation-result=\"on\">第 3 步：啟用該指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-3-enable-the-directive\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Step 3: Enable the directive<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-3-enable-the-directive\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">要啟用 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 指令，請將圖片的 <code>src</code> 屬性替換為 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a></code>。</p><p translation-origin=\"off\">To activate the <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> directive, replace your image's <code>src</code> attribute with <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a></code>.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"cat.jpg\"&gt;\n\n</code-example>\n<p translation-result=\"on\">如果你使用的是<a href=\"guide/image-directive#built-in-loaders\">內建的第三方載入器</a>，請確保忽略了 <code>src</code> 中的基本 URL 路徑，因為它會由此載入器自動附加。</p><p translation-origin=\"off\">If you're using a <a href=\"guide/image-directive#built-in-loaders\">built-in third-party loader</a>, make sure to omit the base URL path from <code>src</code>, as that will be prepended automatically by the loader.</p>\n\n<h4 id=\"step-4-mark-images-as-priority\" translation-result=\"on\">步驟 4：將圖片標記為 <code>priority</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-4-mark-images-as-priority\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Step 4: Mark images as <code>priority</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-4-mark-images-as-priority\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">始終將頁面上的 <a href=\"https://web.dev/lcp/#what-elements-are-considered\">LCP 圖片</a> 標記為 <code>priority</code> 的，以優先載入它。</p><p translation-origin=\"off\">Always mark the <a href=\"https://web.dev/lcp/#what-elements-are-considered\">LCP image</a> on your page as <code>priority</code> to prioritize its loading.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"cat.jpg\" width=\"400\" height=\"200\" priority&gt;\n\n</code-example>\n<p translation-result=\"on\">將圖片標記為 <code>priority</code> 會應用以下最佳化：</p><p translation-origin=\"off\">Marking an image as <code>priority</code> applies the following optimizations:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">設定 <code>fetchpriority=high</code> （在<a href=\"https://web.dev/priority-hints\">這裡</a>閱讀有關優先順序提示的更多內容）</p><p translation-origin=\"off\">Sets <code>fetchpriority=high</code> (read more about priority hints <a href=\"https://web.dev/priority-hints\">here</a>)</p>\n\n</li>\n<li>\n<p translation-result=\"on\">設定 <code>loading=eager</code> （在<a href=\"https://web.dev/browser-level-image-lazy-loading\">這裡</a>閱讀有關原生延遲載入的更多資訊）</p><p translation-origin=\"off\">Sets <code>loading=eager</code> (read more about native lazy loading <a href=\"https://web.dev/browser-level-image-lazy-loading\">here</a>)</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果做<a href=\"/guide/universal\">伺服器端渲染</a>，則會自動產生<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\">預載入連結元素</a>。</p><p translation-origin=\"off\">Automatically generates a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\">preload link element</a> if <a href=\"/guide/universal\">rendering on the server</a>.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">如果 LCP 元素是不具有 <code>priority</code> 屬性的圖片，則 Angular 會在開發過程中顯示警告。頁面的 LCP 元素可能會因許多因素而異 - 例如使用者螢幕的尺寸，因此一個頁面可能有多個應該標記為 <code>priority</code> 的圖片。有關更多詳細資訊，請參閱 <a href=\"https://web.dev/css-web-vitals/#images-and-largest-contentful-paint-lcp\">CSS for Web Vitals</a>。</p><p translation-origin=\"off\">Angular displays a warning during development if the LCP element is an image that does not have the <code>priority</code> attribute. A page’s LCP element can vary based on a number of factors - such as the dimensions of a user's screen, so a page may have multiple images that should be marked <code>priority</code>. See <a href=\"https://web.dev/css-web-vitals/#images-and-largest-contentful-paint-lcp\">CSS for Web Vitals</a> for more details.</p>\n\n<h4 id=\"step-5-include-height-and-width\" translation-result=\"on\">第 5 步：包括高度和寬度<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-5-include-height-and-width\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Step 5: Include Height and Width<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#step-5-include-height-and-width\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">為了防止<a href=\"https://web.dev/css-web-vitals/#images-and-layout-shifts\">與圖片相關的佈局移位</a>，NgOptimizedImage 要求你為圖片指定高度和寬度，如下所示：</p><p translation-origin=\"off\">In order to prevent <a href=\"https://web.dev/css-web-vitals/#images-and-layout-shifts\">image-related layout shifts</a>, NgOptimizedImage requires that you specify a height and width for your image, as follows:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"cat.jpg\" width=\"400\" height=\"200\"&gt;\n\n</code-example>\n<p translation-result=\"on\">對於<strong>響應式圖片</strong>（會相對於畫面而增長和縮小的圖片），<code>width</code> 和 <code>height</code> 屬性應該是圖片檔案的內在大小。</p><p translation-origin=\"off\">For <strong>responsive images</strong> (images which you've styled to grow and shrink relative to the viewport), the <code>width</code> and <code>height</code> attributes should be the instrinsic size of the image file.</p>\n\n<p translation-result=\"on\">對於<strong>固定大小的圖片</strong>，<code>width</code> 和 <code>height</code> 屬性應該反映圖片的所需渲染的大小。這些屬性的縱橫比應始終與圖片的固有縱橫比匹配。</p><p translation-origin=\"off\">For <strong>fixed size images</strong>, the <code>width</code> and <code>height</code> attributes should reflect the desired rendered size of the image. The aspect ratio of these attributes should always match the intrinsic aspect ratio of the image.</p>\n\n<p translation-result=\"on\">注意：如果你不知道圖片的大小，請考慮使用“填充（<code>fill</code>）模式”來繼承父容器的大小，如下所述：</p><p translation-origin=\"off\">Note: If you don't know the size of your images, consider using \"fill mode\" to inherit the size of the parent container, as described below:</p>\n\n<h3 id=\"using-fill-mode\" translation-result=\"on\">使用 <code>fill</code> 模式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#using-fill-mode\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Using <code>fill</code> mode<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#using-fill-mode\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果你希望讓圖片填充其容器元素，可以用 <code>fill</code> 屬性。當你想實現“背景圖片”行為時，這通常會很有用。當你不知道圖片的確切寬度和高度時，它也會很有幫助，但如果你確實有一個具有已知大小的父容器，可能希望將圖片適配進其中（請參閱下面的“object-fit”） .。</p><p translation-origin=\"off\">In cases where you want to have an image fill a containing element, you can use the <code>fill</code> attribute. This is often useful when you want to achieve a \"background image\" behavior. It can also be helpful when you don't know the exact width and height of your image, but you do have a parent container with a known size that you'd like to fit your image into (see \"object-fit\" below).</p>\n\n<p translation-result=\"on\">當你將 <code>fill</code> 屬性新增到圖片時，不需要也不應該包含 <code>width</code> 和 <code>height</code>，如下例所示：</p><p translation-origin=\"off\">When you add the <code>fill</code> attribute to your image, you do not need and should not include a <code>width</code> and <code>height</code>, as in this example:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"cat.jpg\" fill&gt;\n\n</code-example>\n<p translation-result=\"on\">你可以用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\">object-fit</a> 這個 CSS 屬性來更改圖片填充其容器的方式。如果你使用 <code>object-fit: \"contain\"</code> 來設定圖片的樣式，則圖片將保持其縱橫比並被黑邊化（譯註：類似於電影在不同解析度播放時加黑邊）以適配此元素。如果你設定了 <code>object-fit: \"cover\"</code>，則元素將保留其長寬比，完全填充元素，並且某些內容可能會被“裁剪”。</p><p translation-origin=\"off\">You can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\">object-fit</a> CSS property to change how the image will fill its container. If you style your image with <code>object-fit: \"contain\"</code>, the image will maintain its aspect ratio and be \"letterboxed\" to fit the element. If you set <code>object-fit: \"cover\"</code>, the element will retain its aspect ratio, fully fill the element, and some content may be \"cropped\" off. </p>\n\n<p translation-result=\"on\">請在 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\">MDN object-fit 文件</a>中檢視上述內容的視覺化範例。</p><p translation-origin=\"off\">See visual examples of the above at the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\">MDN object-fit documentation.</a></p>\n\n<p translation-result=\"on\">你還可以用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-position\">object-location 屬性來設定</a>圖片的樣式，以調整其在容器元素中的位置。</p><p translation-origin=\"off\">You can also style your image with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-position\">object-position property</a> to adjust its position within its containing element.</p>\n\n<p translation-result=\"on\"><strong>重要說明</strong>：為了正確渲染“fill”圖片，其父元素<strong>必須</strong>使用 <code>position: \"relative\"</code>、<code>position: \"fixed\"</code> 或 <code>position: \"absolute\"</code> 來設定樣式。</p><p translation-origin=\"off\"><strong>Important note:</strong> For the \"fill\" image to render properly, its parent element <strong>must</strong> be styled with <code>position: \"relative\"</code>, <code>position: \"fixed\"</code>, or <code>position: \"absolute\"</code>. </p>\n\n<h3 id=\"adjusting-image-styling\" translation-result=\"on\">調整圖片樣式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#adjusting-image-styling\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Adjusting image styling<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#adjusting-image-styling\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">根據圖片的樣式，新增 <code>width</code> 和 <code>height</code> 屬性可能會導致圖片的渲染方式不同。如果你的圖片樣式正在以扭曲的縱橫比渲染圖片，<code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 會發出警告。</p><p translation-origin=\"off\">Depending on the image's styling, adding <code>width</code> and <code>height</code> attributes may cause the image to render differently. <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> warns you if your image styling renders the image at a distorted aspect ratio.</p>\n\n<p translation-result=\"on\">你通常可以透過將 <code>height: auto</code> 或 <code>width: auto</code> 新增到圖片的樣式中來解決此問題。有關更多資訊，請參閱<a href=\"https://web.dev/patterns/web-vitals-patterns/images/img-tag\">關於 <code>&lt;img&gt;</code> 標籤的 web.dev 文章</a>。</p><p translation-origin=\"off\">You can typically fix this by adding <code>height: auto</code> or <code>width: auto</code> to your image styles. For more information, see the <a href=\"https://web.dev/patterns/web-vitals-patterns/images/img-tag\">web.dev article on the <code>&lt;img&gt;</code> tag</a>.</p>\n\n<p translation-result=\"on\">如果圖片上的 <code>height</code> 和 <code>width</code> 屬性讓你無法用 CSS 以你想要的方式調整圖片大小，請考慮改用“填充”模式，併為圖片的父元素設定樣式。</p><p translation-origin=\"off\">If the <code>height</code> and <code>width</code> attribute on the image are preventing you from sizing the image the way you want with CSS, consider using \"fill\" mode instead, and styling the image's parent element.</p>\n\n<h2 id=\"performance-features\" translation-result=\"on\">效能最佳化特性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#performance-features\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Performance Features<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#performance-features\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">NgOptimizedImage 包含許多旨在提高應用程式載入效能的特性。本節會介紹這些特性。</p><p translation-origin=\"off\">NgOptimizedImage includes a number of features designed to improve loading performance in your app. These features are described in this section.</p>\n\n<h3 id=\"add-resource-hints\" translation-result=\"on\">新增資源提示<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#add-resource-hints\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Add resource hints<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#add-resource-hints\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">你可以為圖片源新增 <a href=\"https://web.dev/preconnect-and-dns-prefetch\"><code>preconnect</code> 資源提示</a>，以確保 LCP 圖片儘快載入。始終將資源提示放在文件的 <code>&lt;head&gt;</code> 中。</p><p translation-origin=\"off\">You can add a <a href=\"https://web.dev/preconnect-and-dns-prefetch\"><code>preconnect</code> resource hint</a> for your image origin to ensure that the LCP image loads as quickly as possible. Always put resource hints in the <code>&lt;head&gt;</code> of the document.</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;link rel=\"preconnect\" href=\"https://my.cdn.origin\" /&gt;\n\n</code-example>\n<p translation-result=\"on\">預設情況下，如果你使用第三方圖片服務的載入器，當 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 指令檢測到提供 LCP 圖片的源缺少 <code>preconnect</code> 資源提示時，它將在開發期間發出警告。</p><p translation-origin=\"off\">By default, if you use a loader for a third-party image service, the <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> directive will warn during development if it detects that there is no <code>preconnect</code> resource hint for the origin that serves the LCP image.</p>\n\n<p translation-result=\"on\">要禁用這些警告，請注入 <code><a href=\"api/common/PRECONNECT_CHECK_BLOCKLIST\" class=\"code-anchor\">PRECONNECT_CHECK_BLOCKLIST</a></code> 標記：</p><p translation-origin=\"off\">To disable these warnings, inject the <code><a href=\"api/common/PRECONNECT_CHECK_BLOCKLIST\" class=\"code-anchor\">PRECONNECT_CHECK_BLOCKLIST</a></code> token:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nproviders: [\n  {provide: <a href=\"api/common/PRECONNECT_CHECK_BLOCKLIST\" class=\"code-anchor\">PRECONNECT_CHECK_BLOCKLIST</a>, useValue: 'https://your-domain.com'}\n],\n\n</code-example>\n<h3 id=\"request-images-at-the-correct-size-with-automatic-srcset\" translation-result=\"on\">使用自動 <code>srcset</code> 請求正確大小的圖片<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#request-images-at-the-correct-size-with-automatic-srcset\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Request images at the correct size with automatic <code>srcset</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#request-images-at-the-correct-size-with-automatic-srcset\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">定義 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/srcset\"><code>srcset</code> 屬性</a>可確保瀏覽器為使用者的畫面請求正確大小的圖片，因此不會浪費時間下載太大的圖片。<code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 會根據 img 標籤上 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes\"><code>sizes</code></a> 屬性的存在與否和值來為圖片產生適當的 <code>srcset</code>。</p><p translation-origin=\"off\">Defining a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/srcset\"><code>srcset</code> attribute</a> ensures that the browser requests an image at the right size for your user's viewport, so it doesn't waste time downloading an image that's too large. <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> generates an appropriate <code>srcset</code> for the image, based on the presence and value of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes\"><code>sizes</code> attribute</a> on the image tag.</p>\n\n<h4 id=\"fixed-size-images\" translation-result=\"on\">固定大小的圖片<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#fixed-size-images\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Fixed-size images<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#fixed-size-images\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">如果你的圖片的大小應該是“固定的”（即跨裝置的大小相同，除了<a href=\"https://web.dev/codelab-density-descriptors/\">畫素密度</a>不同），則無需設定 <code>sizes</code> 屬性。可以從圖片的 <code>width</code> 和 <code>height</code> 屬性自動產生 <code>srcset</code>，無需更多的輸入屬性。</p><p translation-origin=\"off\">If your image should be \"fixed\" in size  (i.e. the same size across devices, except for <a href=\"https://web.dev/codelab-density-descriptors/\">pixel density</a>), there is no need to set a <code>sizes</code> attribute. A <code>srcset</code> can be generated automatically from the image's width and height attributes with no further input required. </p>\n\n<p translation-result=\"on\">產生的範例 srcset：<code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> ... srcset=\"image-400w.jpg 1x, image-800w.jpg 2x\"&gt;</code></p><p translation-origin=\"off\">Example srcset generated: <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> ... srcset=\"image-400w.jpg 1x, image-800w.jpg 2x\"&gt;</code></p>\n\n<h4 id=\"responsive-images\" translation-result=\"on\">響應式圖片<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#responsive-images\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Responsive images<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#responsive-images\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">如果你的圖片應該是響應式的（即會根據畫面大小放大和縮小），那麼你需要定義一個 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes\"><code>sizes</code></a> 屬性來產生 <code>srcset</code>。</p><p translation-origin=\"off\">If your image should be responsive (i.e. grow and shrink according to viewport size), then you will need to define a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes\"><code>sizes</code> attribute</a> to generate the <code>srcset</code>.</p>\n\n<p translation-result=\"on\">如果你以前沒有使用過 <code>sizes</code>，一個很好的起點是根據畫面寬度來設定它。例如，如果你的 CSS 要讓圖片填充畫面寬度的 100%，則將 <code>sizes</code> 設定為 <code>100vw</code>，瀏覽器將選擇 <code>srcset</code> 中最接近畫面寬度的圖片（在考慮畫素密度之後）。如果你的圖片只可能佔螢幕的一半（例如：在側邊欄中），請將 <code>sizes</code> 設定為 <code>50vw</code> 以確保瀏覽器選擇較小的圖片。以此類推。</p><p translation-origin=\"off\">If you haven't used <code>sizes</code> before, a good place to start is to set it based on viewport width. For example, if your CSS causes the image to fill 100% of viewport width, set <code>sizes</code> to <code>100vw</code> and the browser will select the image in the <code>srcset</code> that is closest to the viewport width (after accounting for pixel density). If your image is only likely to take up half the screen (ex: in a sidebar), set <code>sizes</code> to <code>50vw</code> to ensure the browser selects a smaller image. And so on.</p>\n\n<p translation-result=\"on\">如果你發現上述內容無法涵蓋你所需的圖片行為，請參閱有關<a href=\"guide/image-directive#advanced-sizes-values\">高階尺寸值</a>的文件。</p><p translation-origin=\"off\">If you find that the above does not cover your desired image behavior, see the documentation on <a href=\"guide/image-directive#advanced-sizes-values\">advanced sizes values</a>.</p>\n\n<p translation-result=\"on\">預設情況下，響應式斷點是：</p><p translation-origin=\"off\">By default, the responsive breakpoints are:</p>\n\n<p><code>[16, 32, 48, 64, 96, 128, 256, 384, 640, 750, 828, 1080, 1200, 1920, 2048, 3840]</code></p>\n<p translation-result=\"on\">如果你想自訂這些斷點，可以用 <code><a href=\"api/common/IMAGE_CONFIG\" class=\"code-anchor\">IMAGE_CONFIG</a></code> 提供者來實現：</p><p translation-origin=\"off\">If you would like to customize these breakpoints, you can do so using the <code><a href=\"api/common/IMAGE_CONFIG\" class=\"code-anchor\">IMAGE_CONFIG</a></code> provider:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\nproviders: [\n  {\n    provide: <a href=\"api/common/IMAGE_CONFIG\" class=\"code-anchor\">IMAGE_CONFIG</a>,\n    useValue: {\n      breakpoints: [16, 48, 96, 128, 384, 640, 750, 828, 1080, 1200, 1920]\n    }\n  },\n],\n</code-example>\n<p translation-result=\"on\">如果你想手動定義 <code>srcset</code> 屬性，可以用 <code>ngSrcset</code> 屬性提供自己的：</p><p translation-origin=\"off\">If you would like to manually define a <code>srcset</code> attribute, you can provide your own using the <code>ngSrcset</code> attribute:</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"hero.jpg\" ngSrcset=\"100w, 200w, 300w\"&gt;\n\n</code-example>\n<p translation-result=\"on\">如果存在 <code>ngSrcset</code> 屬性，則 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 會根據包含的大小產生並設定 <code>srcset</code>。不要在 <code>ngSrcset</code> 中包含圖片檔名 - 該指令會從 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a></code> 推斷此資訊。該指令支援寬度描述符（例如 <code>100w</code> ）和密度描述符（例如 <code>1x</code> ）。</p><p translation-origin=\"off\">If the <code>ngSrcset</code> attribute is present, <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> generates and sets the <code>srcset</code> based on the sizes included. Do not include image file names in <code>ngSrcset</code> - the directive infers this information from <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a></code>. The directive supports both width descriptors (e.g. <code>100w</code>) and density descriptors (e.g. <code>1x</code>).</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"hero.jpg\" ngSrcset=\"100w, 200w, 300w\" sizes=\"50vw\"&gt;\n\n</code-example>\n<h3 id=\"disabling-automatic-srcset-generation\" translation-result=\"on\">禁用自動 srcset 產生<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#disabling-automatic-srcset-generation\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Disabling automatic srcset generation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#disabling-automatic-srcset-generation\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要禁用單個圖片的 srcset 產生，你可以在圖片上新增 <code>disableOptimizedSrcset</code> 屬性：</p><p translation-origin=\"off\">To disable srcset generation for a single image, you can add the <code>disableOptimizedSrcset</code> attribute on the image:</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"about.jpg\" disableOptimizedSrcset&gt;\n\n</code-example>\n<h3 id=\"disabling-image-lazy-loading\" translation-result=\"on\">禁用圖片延遲載入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#disabling-image-lazy-loading\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Disabling image lazy loading<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#disabling-image-lazy-loading\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">預設情況下，<code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 為所有未標記 <code>priority</code> 的圖片設定 <code>loading=lazy</code>。你可以透過設定 <code>loading</code> 屬性來為非優先圖片禁用此行為。此屬性會接受值：<code>eager</code> 、 <code>auto</code> 和 <code>lazy</code>。<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading#value\">有關詳細資訊，請參閱標準圖片 <code>loading</code> 屬性的文件</a>。</p><p translation-origin=\"off\">By default, <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> sets <code>loading=lazy</code> for all images that are not marked <code>priority</code>. You can disable this behavior for non-priority images by setting the <code>loading</code> attribute. This attribute accepts values: <code>eager</code>, <code>auto</code>, and <code>lazy</code>. <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading#value\">See the documentation for the standard image <code>loading</code> attribute for details</a>.</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"cat.jpg\" width=\"400\" height=\"200\" loading=\"eager\"&gt;\n\n</code-example>\n<h3 id=\"advanced-sizes-values\" translation-result=\"on\">進階的 <code>sizes</code> 值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#advanced-sizes-values\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Advanced 'sizes' values<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#advanced-sizes-values\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">你可能希望在不同大小的螢幕上以不同的寬度顯示圖片。這種模式的一個常見例子是基於網格或列的佈局，它在移動裝置上渲染為單列，在較大的裝置上渲染為兩列。你可以用“媒體查詢”語法在 <code>sizes</code> 屬性中捕獲此行為，例如以下內容：</p><p translation-origin=\"off\">You may want to have images displayed at varying widths on differently-sized screens. A common example of this pattern is a grid- or column-based layout that renders a single column on mobile devices, and two columns on larger devices. You can capture this behavior in the <code>sizes</code> attribute, using a \"media query\" syntax, such as the following:</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"cat.jpg\" width=\"400\" height=\"200\" sizes=\"(max-width: 768px) 100vw, 50vw\"&gt;\n\n</code-example>\n<p translation-result=\"on\">上面的範例中的 <code>sizes</code> 屬性表示“我希望此圖片在 768px 寬的裝置上是螢幕寬度的 100%。否則，我希望它是螢幕寬度的 50%。</p><p translation-origin=\"off\">The <code>sizes</code> attribute in the above example says \"I expect this image to be 100 percent of the screen width on devices under 768px wide. Otherwise, I expect it to be 50 percent of the screen width.</p>\n\n<p translation-result=\"on\">有關 <a href=\"https://web.dev/learn/design/responsive-images/#sizes\">size 屬性的其它資訊，請參閱 web.dev</a> <code>sizes</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes\">mdn</a>。</p><p translation-origin=\"off\">For additional information about the <code>sizes</code> attribute, see <a href=\"https://web.dev/learn/design/responsive-images/#sizes\">web.dev</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes\">mdn</a>.</p>\n\n<h2 id=\"configuring-an-image-loader-for-ngoptimizedimage\" translation-result=\"on\">為 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 配置圖片載入器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#為-ngoptimizedimage-配置圖片載入器\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Configuring an image loader for <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#configuring-an-image-loader-for-ngoptimizedimage\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">“載入器”是一個為給定圖片檔案產生<a href=\"https://web.dev/image-cdns/#how-image-cdns-use-urls-to-indicate-optimization-options\">圖片轉換 URL</a>的函式。如果合適，<code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 就會設定圖片的大小、格式和圖片品質轉換。</p><p translation-origin=\"off\">A \"loader\" is a function that generates an <a href=\"https://web.dev/image-cdns/#how-image-cdns-use-urls-to-indicate-optimization-options\">image transformation URL</a> for a given image file. When appropriate, <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> sets the size, format, and image quality transformations for an image.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 提供了一個不應用轉換的通用載入器和一個用於各種第三方圖片服務的載入器。它還支援編寫你自己的自訂載入器。</p><p translation-origin=\"off\"><code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> provides both a generic loader that applies no transformations, as well as loaders for various third-party image services. It also supports writing your own custom loader.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">載入器型別</nt-wrapper><nt-wrapper translation-origin=\"off\">Loader type</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">行為</nt-wrapper><nt-wrapper translation-origin=\"off\">Behavior</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">通用載入器</nt-wrapper><nt-wrapper translation-origin=\"off\">Generic loader</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">通用載入器返回的 URL 將始終與 <code>src</code> 的值匹配。換句話說，此載入器不應用任何轉換。使用 Angular 來提供圖片的站點是此載入器的主要預期使用案例。</nt-wrapper><nt-wrapper translation-origin=\"off\">The URL returned by the generic loader will always match the value of <code>src</code>. In other words, this loader applies no transformations. Sites that use Angular to serve images are the primary intended use case for this loader.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">第三方圖片服務的載入器</nt-wrapper><nt-wrapper translation-origin=\"off\">Loaders for third-party image services</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">此載入器為第三方圖片服務返回的 URL 將遵循該特定圖片服務使用的 API 約定。</nt-wrapper><nt-wrapper translation-origin=\"off\">The URL returned by the loaders for third-party image services will follow API conventions used by that particular image service.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">自訂載入器</nt-wrapper><nt-wrapper translation-origin=\"off\">Custom loaders</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">自訂載入器的行為由其開發人員定義。如果使用 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 預配置的載入器不支援你想要的圖片服務，就應該使用自訂載入器。</nt-wrapper><nt-wrapper translation-origin=\"off\">A custom loader's behavior is defined by its developer. You should use a custom loader if your image service isn't supported by the loaders that come preconfigured with <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code>.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p translation-result=\"on\">基於 Angular 應用程式常用的圖片服務，<code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 提供了預配置的載入器以使用以下圖片服務：</p><p translation-origin=\"off\">Based on the image services commonly used with Angular applications, <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> provides loaders preconfigured to work with the following image services:</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">圖片服務</nt-wrapper><nt-wrapper translation-origin=\"off\">Image Service</nt-wrapper></th>\n<th align=\"left\">Angular API</th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">文件</nt-wrapper><nt-wrapper translation-origin=\"off\">Documentation</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">Cloudflare 圖片大小調整</nt-wrapper><nt-wrapper translation-origin=\"off\">Cloudflare Image Resizing</nt-wrapper></td>\n<td align=\"left\"><code><a href=\"api/common/provideCloudflareLoader\" class=\"code-anchor\">provideCloudflareLoader</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><a href=\"https://developers.cloudflare.com/images/image-resizing/\">文件</a></nt-wrapper><nt-wrapper translation-origin=\"off\"><a href=\"https://developers.cloudflare.com/images/image-resizing/\">Documentation</a></nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\">Cloudinary</td>\n<td align=\"left\"><code><a href=\"api/common/provideCloudinaryLoader\" class=\"code-anchor\">provideCloudinaryLoader</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><a href=\"https://cloudinary.com/documentation/resizing_and_cropping\">文件</a></nt-wrapper><nt-wrapper translation-origin=\"off\"><a href=\"https://cloudinary.com/documentation/resizing_and_cropping\">Documentation</a></nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\">ImageKit</td>\n<td align=\"left\"><code><a href=\"api/common/provideImageKitLoader\" class=\"code-anchor\">provideImageKitLoader</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><a href=\"https://docs.imagekit.io/\">文件</a></nt-wrapper><nt-wrapper translation-origin=\"off\"><a href=\"https://docs.imagekit.io/\">Documentation</a></nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\">Imgix</td>\n<td align=\"left\"><code><a href=\"api/common/provideImgixLoader\" class=\"code-anchor\">provideImgixLoader</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><a href=\"https://docs.imgix.com/\">文件</a></nt-wrapper><nt-wrapper translation-origin=\"off\"><a href=\"https://docs.imgix.com/\">Documentation</a></nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p translation-result=\"on\">要使用<strong>通用載入器</strong>，無需額外的程式碼更改。這是預設行為。</p><p translation-origin=\"off\">To use the <strong>generic loader</strong> no additional code changes are necessary. This is the default behavior.</p>\n\n<h3 id=\"built-in-loaders\" translation-result=\"on\">內建載入器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#built-in-loaders\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Built-in Loaders<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#built-in-loaders\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要將現有的載入器用於<strong>第三方圖片服務</strong>，請將你選擇的服務的提供者工廠新增到 <code>providers</code> 陣列中。在下面的範例中，使用了 Imgix 載入器：</p><p translation-origin=\"off\">To use an existing loader for a <strong>third-party image service</strong>, add the provider factory for your chosen service to the <code>providers</code> array. In the example below, the Imgix loader is used:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\nproviders: [\n  <a href=\"api/common/provideImgixLoader\" class=\"code-anchor\">provideImgixLoader</a>('https://my.base.url/'),\n],\n</code-example>\n<p translation-result=\"on\">圖片資產的基本 URL 應作為引數傳遞給提供者工廠。對於大多數網站，此基本 URL 應匹配以下模式之一：</p><p translation-origin=\"off\">The base URL for your image assets should be passed to the provider factory as an argument. For most sites, this base URL should match one of the following patterns:</p>\n\n<ul>\n<li><a href=\"https://yoursite.yourcdn.com\">https://yoursite.yourcdn.com</a></li>\n<li><a href=\"https://subdomain.yoursite.com\">https://subdomain.yoursite.com</a></li>\n<li><a href=\"https://subdomain.yourcdn.com/yoursite\">https://subdomain.yourcdn.com/yoursite</a></li>\n</ul>\n<p translation-result=\"on\">你可以在相應 CDN 提供者的文件中瞭解有關基本 URL 結構的更多資訊。</p><p translation-origin=\"off\">You can learn more about the base URL structure in the docs of a corresponding CDN provider.</p>\n\n<h3 id=\"custom-loaders\" translation-result=\"on\">自訂載入器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#custom-loaders\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Custom Loaders<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#custom-loaders\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要使用<strong>自訂載入器</strong>，請提供你的載入器函式作為 <code><a href=\"api/common/IMAGE_LOADER\" class=\"code-anchor\">IMAGE_LOADER</a></code> DI 標記的值。在下面的範例中，自訂載入器函式會返回一個以 <code>https://example.com</code> 開頭的 URL，其中包含 <code>src</code> 和 <code>width</code> 作為 URL 引數。</p><p translation-origin=\"off\">To use a <strong>custom loader</strong>, provide your loader function as a value for the <code><a href=\"api/common/IMAGE_LOADER\" class=\"code-anchor\">IMAGE_LOADER</a></code> DI token. In the example below, the custom loader function returns a URL starting with <code>https://example.com</code> that includes <code>src</code> and <code>width</code> as URL parameters.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\nproviders: [\n  {\n    provide: <a href=\"api/common/IMAGE_LOADER\" class=\"code-anchor\">IMAGE_LOADER</a>,\n    useValue: (config: <a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a>) =&gt; {\n      return `https://example.com/images?src=${config.src}&amp;width=${config.width}`;\n    },\n  },\n],\n</code-example>\n<p translation-result=\"on\"><code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 指令的載入器函式將 <code><a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a></code> 型別的物件（來自 <code>@angular/common</code> ）作為其引數，並返回圖像資產（assets）的絕對 URL。<code><a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a></code> 物件包含 <code>src</code> 屬性，以及可選的 <code>width</code> 和 <code>loaderParams</code> 屬性。</p><p translation-origin=\"off\">A loader function for the <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> directive takes an object with the <code><a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a></code> type (from <code>@angular/common</code>) as its argument and returns the absolute URL of the image asset. The <code><a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a></code> object contains the <code>src</code> property, and optional <code>width</code> and <code>loaderParams</code> properties.</p>\n\n<p translation-result=\"on\">注意：即使 <code>width</code> 屬性可能並不總是存在，自訂載入器也必須使用它來支援請求各種寬度的圖像，以便讓 <code>ngSrcset</code> 正常工作。</p><p translation-origin=\"off\">Note: even though the <code>width</code> property may not always be present, a custom loader must use it to support requesting images at various widths in order for <code>ngSrcset</code> to work properly.</p>\n\n<h3 id=\"the-loaderparams-property\" translation-result=\"on\"><code>loaderParams</code> 屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#the-loaderparams-property\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">The <code>loaderParams</code> Property<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#the-loaderparams-property\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> 指令支援一個額外的屬性，稱為 <code>loaderParams</code>，它是專門為了支援自訂載入器的使用而設計的。<code>loaderParams</code> 屬性將以具有任何屬性的物件作為值，它自己不做任何事情。<code>loaderParams</code> 中的資料會被新增到傳遞給自訂載入器的 <code><a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a></code> 物件中，可用於控制載入器的行為。</p><p translation-origin=\"off\">There is an additional attribute supported by the <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">NgOptimizedImage</a></code> directive, called <code>loaderParams</code>, which is specifically designed to support the use of custom loaders. The <code>loaderParams</code> attribute take an object with any properties as a value, and does not do anything on its own. The data in <code>loaderParams</code> is added to the <code><a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a></code> object passed to your custom loader, and can be used to control the behavior of the loader.</p>\n\n<p translation-result=\"on\"><code>loaderParams</code> 的一個常見用途是控制高階圖像 CDN 功能。</p><p translation-origin=\"off\">A common use for <code>loaderParams</code> is controlling advanced image CDN features.</p>\n\n<h3 id=\"example-custom-loader\" translation-result=\"on\">範例自訂載入器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#example-custom-loader\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Example custom loader<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/image-directive#example-custom-loader\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">下面顯示了自訂載入器函式的範例。此範例函式連線 <code>src</code> 和 <code>width</code>，並使用 <code>loaderParams</code> 控制圓角的自訂 CDN 功能：</p><p translation-origin=\"off\">The following shows an example of a custom loader function. This example function concatenates <code>src</code> and <code>width</code>, and uses <code>loaderParams</code> to control a custom CDN feature for rounded corners:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\nconst myCustomLoader = (config: <a href=\"api/common/ImageLoaderConfig\" class=\"code-anchor\">ImageLoaderConfig</a>) =&gt; {\n  let url = `https://example.com/images/${config.src}?`;\n  let queryParams = [];\n  if (config.width) {\n    queryParams.push(`w=${config.width}`);\n  }\n  if (config.loaderParams?.roundedCorners) {\n    queryParams.push('mask=corners&amp;corner-radius=5');\n  }\n  return url + queryParams.join('&amp;');\n};\n</code-example>\n<p translation-result=\"on\">請注意，在上面的範例中，我們發明了“roundedCorners”屬性名稱來控制自訂載入器的特性。然後我們可以在建立圖像時使用此特性，如下所示：</p><p translation-origin=\"off\">Note that in the above example, we've invented the 'roundedCorners' property name to control a feature of our custom loader. We could then use this feature when creating an image, as follows:</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">ngSrc</a>=\"profile.jpg\" width=\"300\" height=\"300\" [loaderParams]=\"{roundedCorners: true}\"&gt;\n\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!--end links -->\n\n  <div class=\"reviewed\">最後複查時間：11/7/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - api/common/ImageConfig\n - guide/update-to-version-15\n-->\n<!-- links from this doc:\n - /guide/standalone-components\n - /guide/universal\n - api/common/IMAGE_CONFIG\n - api/common/IMAGE_LOADER\n - api/common/ImageLoaderConfig\n - api/common/NgOptimizedImage\n - api/common/PRECONNECT_CHECK_BLOCKLIST\n - api/common/provideCloudflareLoader\n - api/common/provideCloudinaryLoader\n - api/common/provideImageKitLoader\n - api/common/provideImgixLoader\n - guide/image-directive#add-resource-hints\n - guide/image-directive#adjusting-image-styling\n - guide/image-directive#advanced-sizes-values\n - guide/image-directive#built-in-loaders\n - guide/image-directive#configuring-an-image-loader-for-ngoptimizedimage\n - guide/image-directive#custom-loaders\n - guide/image-directive#disabling-automatic-srcset-generation\n - guide/image-directive#disabling-image-lazy-loading\n - guide/image-directive#example-custom-loader\n - guide/image-directive#fixed-size-images\n - guide/image-directive#getting-started\n - guide/image-directive#getting-started-with-ngoptimizedimage\n - guide/image-directive#loaderparams-屬性\n - guide/image-directive#ngoptimizedimage-入門\n - guide/image-directive#performance-features\n - guide/image-directive#request-images-at-the-correct-size-with-automatic-srcset\n - guide/image-directive#responsive-images\n - guide/image-directive#step-1-import-ngoptimizedimage\n - guide/image-directive#step-2-optional-set-up-a-loader\n - guide/image-directive#step-3-enable-the-directive\n - guide/image-directive#step-4-mark-images-as-priority\n - guide/image-directive#step-5-include-height-and-width\n - guide/image-directive#the-loaderparams-property\n - guide/image-directive#using-fill-mode\n - guide/image-directive#為-ngoptimizedimage-配置圖片載入器\n - guide/image-directive#使用-fill-模式\n - guide/image-directive#使用自動-srcset-請求正確大小的圖片\n - guide/image-directive#內建載入器\n - guide/image-directive#響應式圖片\n - guide/image-directive#固定大小的圖片\n - guide/image-directive#快速上手\n - guide/image-directive#效能最佳化特性\n - guide/image-directive#步驟-1匯入-ngoptimizedimage\n - guide/image-directive#步驟-4將圖片標記為-priority\n - guide/image-directive#新增資源提示\n - guide/image-directive#範例自訂載入器\n - guide/image-directive#禁用圖片延遲載入\n - guide/image-directive#禁用自動-srcset-產生\n - guide/image-directive#第-2-步可選設定載入器\n - guide/image-directive#第-3-步啟用該指令\n - guide/image-directive#第-5-步包括高度和寬度\n - guide/image-directive#自訂載入器\n - guide/image-directive#調整圖片樣式\n - guide/image-directive#進階的-sizes-值\n - http://web.dev/lcp\n - https://cloudinary.com/documentation/resizing_and_cropping\n - https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading#value\n - https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes\n - https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/srcset\n - https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\n - https://developer.mozilla.org/en-US/docs/Web/CSS/object-position\n - https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\n - https://developers.cloudflare.com/images/image-resizing/\n - https://docs.imagekit.io/\n - https://docs.imgix.com/\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/image-directive.md?message=docs%3A%20請簡述你的修改...\n - https://subdomain.yourcdn.com/yoursite\n - https://subdomain.yoursite.com\n - https://web.dev/browser-level-image-lazy-loading\n - https://web.dev/codelab-density-descriptors/\n - https://web.dev/css-web-vitals/#images-and-largest-contentful-paint-lcp\n - https://web.dev/css-web-vitals/#images-and-layout-shifts\n - https://web.dev/image-cdns/#how-image-cdns-use-urls-to-indicate-optimization-options\n - https://web.dev/lcp/#what-elements-are-considered\n - https://web.dev/learn/design/responsive-images/#sizes\n - https://web.dev/patterns/web-vitals-patterns/images/img-tag\n - https://web.dev/preconnect-and-dns-prefetch\n - https://web.dev/priority-hints\n - https://yoursite.yourcdn.com\n-->"}