{"id":"guide/accessibility","title":"Accessibility in Angular","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/accessibility.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"accessibility-in-angular\" translation-result=\"on\">Angular 中的無障礙功能<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-in-angular\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Accessibility in Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-in-angular\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">Web 會被各種各樣的人使用，包括有視覺或運動障礙的人。有多種輔助技術能使這些人更輕鬆地和基於 Web 的軟體應用進行互動。另外，將應用設計得更易於存取通常也能改善所有使用者的體驗。</p><p translation-origin=\"off\">The web is used by a wide variety of people, including those who have visual or motor impairments.\nA variety of assistive technologies are available that make it much easier for these groups to interact with web-based software applications.\nAlso, designing an application to be more accessible generally improves the user experience for all users.</p>\n\n<p translation-result=\"on\">關於如何設計無障礙應用的問題和技術的深入介紹，參閱 Google <a href=\"https://developers.google.com/web/fundamentals\">網路基礎知識</a>的<a href=\"https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\">無障礙功能</a>部分。</p><p translation-origin=\"off\">For an in-depth introduction to issues and techniques for designing accessible applications, see the <a href=\"https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\">Accessibility</a> section of the Google's <a href=\"https://developers.google.com/web/fundamentals\">Web Fundamentals</a>.</p>\n\n<p translation-result=\"on\">本頁討論了設計 Angular 應用的最佳實踐，這些實踐對所有使用者（包括依賴輔助技術的使用者）都適用。</p><p translation-origin=\"off\">This page discusses best practices for designing Angular applications that work well for all users, including those who rely on assistive technologies.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">本頁中所講的範例程式，參閱<live-example></live-example>。</p><p translation-origin=\"off\">For the sample application that this page describes, see the <live-example></live-example>.</p>\n\n</div>\n<h2 id=\"accessibility-attributes\" translation-result=\"on\">無障礙屬性（Attribute）<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-attributes\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Accessibility attributes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-attributes\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">建立無障礙的 Web 體驗通常會涉及設定 <a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-aria\">ARIA（Accessible Rich Internet Applications）屬性（Attribute）</a> 以提供可能會丟失的語義。使用 <a href=\"guide/attribute-binding\">Attribute 繫結</a>範本語法來控制與無障礙性相關的屬性（Attribute）值。</p><p translation-origin=\"off\">Building accessible web experience often involves setting <a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-aria\">Accessible Rich Internet Applications (ARIA) attributes</a> to provide semantic meaning where it might otherwise be missing.\nUse <a href=\"guide/attribute-binding\">attribute binding</a> template syntax to control the values of accessibility-related attributes.</p>\n\n<p translation-result=\"on\">在 Angular 中繫結 ARIA 屬性（Attribute）時，必須使用 <code>attr.</code> 字首。ARIA 規範針對的是 HTML 屬性（Attribute），而不是 DOM 元素的屬性（Property）。</p><p translation-origin=\"off\">When binding to ARIA attributes in Angular, you must use the <code>attr.</code> prefix. The ARIA specification depends specifically on HTML attributes rather than properties of DOM elements.</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;!-- Use attr. when binding to an ARIA attribute --&gt;\n&lt;button [attr.aria-label]=\"myActionLabel\"&gt;…&lt;/button&gt;\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\"><strong>注意</strong><br>\n此語法僅對於屬性（Attribute）<em>繫結</em>是必需的。靜態 ARIA 屬性（Attribute）不需要額外的語法。</p><p translation-origin=\"off\"><strong>NOTE</strong> <br>\nThis syntax is only necessary for attribute <em>bindings</em>.\nStatic ARIA attributes require no extra syntax.</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;!-- Static ARIA attributes require no extra syntax --&gt;\n&lt;button aria-label=\"Save document\"&gt;…&lt;/button&gt;\n\n</code-example>\n</div>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">按照約定，HTML 屬性（Attribute）使用小寫名稱（<code>tabindex</code>），而 Property 使用 camelCase 名稱（<code>tabIndex</code>）。</p><p translation-origin=\"off\">By convention, HTML attributes use lowercase names (<code>tabindex</code>), while properties use camelCase names (<code>tabIndex</code>).</p>\n\n<p translation-result=\"on\">關於 Attribute 和 Property 之間差異的更多背景資訊，參閱<a href=\"guide/binding-syntax#html-attribute-vs-dom-property\">範本語法</a>一章。</p><p translation-origin=\"off\">See the <a href=\"guide/binding-syntax#html-attribute-vs-dom-property\">Binding syntax</a> guide for more background on the difference between attributes and properties.</p>\n\n</div>\n<h2 id=\"angular-ui-components\" translation-result=\"on\">Angular UI 元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#angular-ui-components\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Angular UI components<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#angular-ui-components\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">由 Angular 團隊維護的 <a href=\"https://material.angular.cn\">Angular Material</a> 函式庫是旨在提供完全無障礙的一組可複用 UI 元件。<a href=\"https://material.angular.cn/cdk/categories\">元件開發工具套件（CDK）</a>中包括 <code>a11y</code> 軟體套件，該軟體套件提供了支援無障礙領域的各種工具。比如：</p><p translation-origin=\"off\">The <a href=\"https://material.angular.io\">Angular Material</a> library, which is maintained by the Angular team, is a suite of reusable UI components that aims to be fully accessible.\nThe <a href=\"https://material.angular.io/cdk/categories\">Component Development Kit (CDK)</a> includes the <code>a11y</code> package that provides tools to support various areas of accessibility.\nFor example:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>LiveAnnouncer</code> 用於使用 <code>aria-live</code> 區域向螢幕閱讀器使用者朗讀訊息。關於 <a href=\"https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\">aria-live 領域的</a>更多資訊，參閱 W3C 文件。</p><p translation-origin=\"off\"><code>LiveAnnouncer</code> is used to announce messages for screen-reader users using an <code>aria-live</code> region.\nSee the W3C documentation for more information on <a href=\"https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\">aria-live regions</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>cdkTrapFocus</code> 指令能將 Tab 鍵焦點捕獲在元素內。使用它可為必須限制焦點的模態對話方塊之類別的元件建立無障礙體驗。</p><p translation-origin=\"off\">The <code>cdkTrapFocus</code> directive traps Tab-key focus within an element.\nUse it to create accessible experience for components such as modal dialogs, where focus must be constrained.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">關於這些工具和其它工具的完整詳細資訊，參閱 <a href=\"https://material.angular.io/cdk/a11y/overview\">Angular CDK 無障礙功能概述</a>。</p><p translation-origin=\"off\">For full details of these and other tools, see the <a href=\"https://material.angular.io/cdk/a11y/overview\">Angular CDK accessibility overview</a>.</p>\n\n<h3 id=\"augmenting-native-elements\" translation-result=\"on\">增強原生元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#augmenting-native-elements\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Augmenting native elements<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#augmenting-native-elements\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">原生 HTML 元素捕獲了一些對無障礙性很重要的標準互動模式。在製作 Angular 元件時，應儘可能直接複用這些原生元素，而不是重新實現已獲良好支援的行為。</p><p translation-origin=\"off\">Native HTML elements capture several standard interaction patterns that are important to accessibility.\nWhen authoring Angular components, you should re-use these native elements directly when possible, rather than re-implementing well-supported behaviors.</p>\n\n<p translation-result=\"on\">比如，你可以建立一個元件，它使用屬性（Attribute）選擇器指向原生 <code>&lt;button&gt;</code> 元素，而不是為各種新按鈕建立自訂元素。通常這適用於 <code>&lt;button&gt;</code> 和 <code>&lt;a&gt;</code>，但也可以用於許多其它型別的元素。</p><p translation-origin=\"off\">For example, instead of creating a custom element for a new variety of button, create a component that uses an attribute selector with a native <code>&lt;button&gt;</code> element.\nThis most commonly applies to <code>&lt;button&gt;</code> and <code>&lt;a&gt;</code>, but can be used with many other types of element.</p>\n\n<p translation-result=\"on\">你可以在 Angular Material 中看到此模式的範例：<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\"><code>MatButton</code></a>，<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\"><code>MatTabNav</code></a>，<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\"><code>MatTable</code></a>。</p><p translation-origin=\"off\">You can see examples of this pattern in Angular Material:\n<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\"><code>MatButton</code></a>, <a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\"><code>MatTabNav</code></a>, and <a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\"><code>MatTable</code></a>.</p>\n\n<h3 id=\"using-containers-for-native-elements\" translation-result=\"on\">將容器用於原生元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#using-containers-for-native-elements\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Using containers for native elements<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#using-containers-for-native-elements\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">有時要使用的原生元素需要一個容器元素。比如，原生 <code>&lt;input&gt;</code> 元素不能有子元素，因此任何自訂的文字輸入元件都需要用額外的元素來包裝 <code>&lt;input&gt;</code>。如果只在自訂元件的範本中包含 <code>&lt;input&gt;</code>，該元件的將使用者無法為 <code>input</code> 元素設定任意 Property 和 Attribute。相反，你應該建立一個使用內容投影的容器元件，以將原生控制項包含在元件的 API 中。</p><p translation-origin=\"off\">Sometimes using the appropriate native element requires a container element.\nFor example, the native <code>&lt;input&gt;</code> element cannot have children, so any custom text entry components need to wrap an <code>&lt;input&gt;</code> with extra elements.\nBy just including <code>&lt;input&gt;</code> in your custom component's template, it's impossible for your component's users  to set arbitrary properties and attributes to the <code>&lt;input&gt;</code> element.\nInstead, create a container component that uses content projection to include the native control in the component's API.</p>\n\n<p translation-result=\"on\">你可以把 <a href=\"https://material.angular.cn/components/form-field/overview\"><code>MatFormField</code></a> 作為該模式的例子。</p><p translation-origin=\"off\">You can see <a href=\"https://material.angular.io/components/form-field/overview\"><code>MatFormField</code></a> as an example of this pattern.</p>\n\n<h2 id=\"case-study-building-a-custom-progress-bar\" translation-result=\"on\">案例研究：建構自訂進度條<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#case-study-building-a-custom-progress-bar\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Case study: Building a custom progress bar<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#case-study-building-a-custom-progress-bar\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">以下範例顯示如何透過使用宿主（host）繫結來控制與無障礙性相關的屬性（Attribute），來把進度條無障礙化。</p><p translation-origin=\"off\">The following example shows how to make a progress bar accessible by using host binding to control accessibility-related attributes.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">該元件使用標準的 HTML 屬性（Attribute）<code>role</code> 和 ARIA 屬性（Attribute）來定義要啟用無障礙支援的元素。ARIA 屬性（Attribute）<code>aria-valuenow</code> 繫結到使用者的輸入。</p><p translation-origin=\"off\">The component defines an accessibility-enabled element with both the standard HTML attribute <code>role</code>, and ARIA attributes.\nThe ARIA attribute <code>aria-valuenow</code> is bound to the user's input.</p>\n\n<code-example header=\"src/app/progress-bar.component.ts\" path=\"accessibility/src/app/progress-bar.component.ts\" region=\"progressbar-component\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a> } from '@angular/core';\n\n/**\n * Example progressbar component.\n */\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-example-progressbar',\n  template: '&lt;div class=\"bar\" [style.width.%]=\"value\"&gt;&lt;/div&gt;',\n  styleUrls: ['./progress-bar.component.css'],\n  host: {\n    // Sets the role for this component to \"progressbar\"\n    role: 'progressbar',\n\n    // Sets the minimum and maximum values for the progressbar role.\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n\n    // Binding that updates the current value of the progressbar.\n    '[attr.aria-valuenow]': 'value',\n  }\n})\nexport class ExampleProgressbarComponent  {\n  /** Current value of the progressbar. */\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() value = 0;\n}\n\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在範本中，<code>aria-label</code> 屬性（Attribute）可以確保螢幕閱讀器能存取該控制項。</p><p translation-origin=\"off\">In the template, the <code>aria-label</code> attribute ensures that the control is accessible to screen readers.</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"accessibility/src/app/app.component.html\" region=\"template\">\n&lt;label&gt;\n  Enter an example progress value\n  &lt;input type=\"number\" <a href=\"api/forms/MinValidator\" class=\"code-anchor\">min</a>=\"0\" <a href=\"api/forms/MaxValidator\" class=\"code-anchor\">max</a>=\"100\"\n      [value]=\"progress\" (input)=\"setProgress($event)\"&gt;\n&lt;/label&gt;\n\n&lt;!-- The user of the progressbar sets an aria-label to communicate what the progress means. --&gt;\n&lt;app-example-progressbar [value]=\"progress\" aria-label=\"Example of a progress bar\"&gt;\n&lt;/app-example-progressbar&gt;\n\n</code-example>\n</li>\n</ul>\n<h2 id=\"routing\" translation-result=\"on\">路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#routing\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Routing<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#routing\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"focus-management-after-navigation\" translation-result=\"on\">導航後的焦點管理<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#focus-management-after-navigation\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Focus management after navigation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#focus-management-after-navigation\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在設計無障礙性時，在 UI 中追蹤和控制<a href=\"https://developers.google.com/web/fundamentals/accessibility/focus\">焦點</a>是很重要的考慮因素。使用 Angular 路由時，你需要確定頁面焦點在導航上的位置。</p><p translation-origin=\"off\">Tracking and controlling <a href=\"https://developers.google.com/web/fundamentals/accessibility/focus\">focus</a> in a UI is an important consideration in designing for accessibility.\nWhen using Angular routing, you should decide where page focus goes upon navigation.</p>\n\n<p translation-result=\"on\">為了避免僅僅依靠視覺提示，你需要確保路由程式碼會在頁面導航之後更新焦點。使用 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服務中的 <code><a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a></code> 事件可以知道何時該更新焦點。</p><p translation-origin=\"off\">To avoid relying solely on visual cues, you need to make sure your routing code updates focus after page navigation.\nUse the <code><a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a></code> event from the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> service to know when to update focus.</p>\n\n<p translation-result=\"on\">以下範例顯示了導航後如何在 DOM 中查詢並把焦點移動到主體內容的頭部。</p><p translation-origin=\"off\">The following example shows how to find and focus the main content header in the DOM after navigation.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nrouter.events.pipe(filter(e =&gt; e instanceof <a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a>)).subscribe(() =&gt; {\n  const mainHeader = document.querySelector('#main-content-header')\n  if (mainHeader) {\n    mainHeader.focus();\n  }\n});\n\n</code-example>\n<p translation-result=\"on\">在實際的應用程式中，哪些元素會獲得焦點取決於該應用特有的結構和佈局。獲得焦點的元素應使使用者能夠立即移動到剛剛進入視野的主要內容。你應該避免當路由變化後焦點重新回到 <code>body</code> 元素的情況。</p><p translation-origin=\"off\">In a real application, the element that receives focus depends on your specific application structure and layout.\nThe focused element should put users in a position to immediately move into the main content that has just been routed into view.\nYou should avoid situations where focus returns to the <code>body</code> element after a route change.</p>\n\n<h3 id=\"active-links-identification\" translation-result=\"on\">活動連結標識<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#active-links-identification\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Active links identification<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#active-links-identification\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">用在活躍 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 元素上的 CSS 類（比如 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code>）提供了有關哪個連結正處於活躍狀態的視覺提醒。不幸的是，此類提醒不適用於盲人或視障使用者。將 <code>aria-current</code> 屬性新增到此元素，可以幫你標出活躍連結。有關更多資訊，參閱<a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\">MDN aria-current</a>。</p><p translation-origin=\"off\">CSS classes applied to active <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> elements, such as <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code>, provide a visual cue to identify the active link.\nUnfortunately, a visual cue doesn't help blind or visually impaired users.\nApplying the <code>aria-current</code> attribute to the element can help identify the active link.\nFor more information, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\">Mozilla Developer Network (MDN) aria-current</a>).</p>\n\n<p translation-result=\"on\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令提供了 <code>ariaCurrentWhenActive</code> 輸入屬性，該輸入屬性會在連結變為活躍狀態時將 <code>aria-current</code> 設定為指定的值。</p><p translation-origin=\"off\">The <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> directive provides the <code>ariaCurrentWhenActive</code> input which sets the <code>aria-current</code> to a specified value when the link becomes active.</p>\n\n<p translation-result=\"on\">以下範例展示瞭如何將 <code>active-page</code> 類應用於活躍連結，以及如何在它們處於活躍狀態時將它們的 <code>aria-current</code> 屬性設定為 <code>\"page\"</code>：</p><p translation-origin=\"off\">The following example shows how to apply the <code>active-page</code> class to active links as well as setting their <code>aria-current</code> attribute to <code>\"page\"</code> when they are active:</p>\n\n<code-example language=\"html\">\n    &lt;nav&gt;\n      &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"home\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\"&gt;\n        Home\n      &lt;/a&gt;\n      &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"about\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\"&gt;\n        About\n      &lt;/a&gt;\n      &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"shop\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\"&gt;\n        Shop\n      &lt;/a&gt;\n    &lt;/nav&gt;\n</code-example>\n<!-- vale Angular.Angular_Spelling = NO -->\n<h2 id=\"more-information\" translation-result=\"on\">更多資訊<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#more-information\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">More information<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#more-information\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"https://developers.google.com/web/fundamentals/accessibility\">無障礙功能 - Google 網路基礎知識</a></p><p translation-origin=\"off\"><a href=\"https://developers.google.com/web/fundamentals/accessibility\">Accessibility - Google Web Fundamentals</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://www.w3.org/TR/wai-aria\">ARIA 規範和寫作慣例</a></p><p translation-origin=\"off\"><a href=\"https://www.w3.org/TR/wai-aria\">ARIA specification and authoring practices</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://material.io/design/usability/accessibility.html\">Material Design - 無障礙功能</a></p><p translation-origin=\"off\"><a href=\"https://material.io/design/usability/accessibility.html\">Material Design - Accessibility</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://www.smashingmagazine.com/search/?q=accessibility\">Smashing 雜誌</a></p><p translation-origin=\"off\"><a href=\"https://www.smashingmagazine.com/search/?q=accessibility\">Smashing Magazine</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://inclusive-components.design\">包容性元件</a></p><p translation-origin=\"off\"><a href=\"https://inclusive-components.design\">Inclusive Components</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://dequeuniversity.com/resources\">無障礙功能的資源和程式碼範例</a></p><p translation-origin=\"off\"><a href=\"https://dequeuniversity.com/resources\">Accessibility Resources and Code Examples</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://www.w3.org/WAI/people-use-web\">W3C - 網路無障礙倡議</a></p><p translation-origin=\"off\"><a href=\"https://www.w3.org/WAI/people-use-web\">W3C - Web Accessibility Initiative</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://www.youtube.com/watch?v=HtTyRajRuyY\">Rob Dodson 的 A11y 播客</a></p><p translation-origin=\"off\"><a href=\"https://www.youtube.com/watch?v=HtTyRajRuyY\">Rob Dodson A11ycasts</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://github.com/angular-eslint/angular-eslint#functionality\">Angular ESLint</a>提供了整理（linting）規則，可以幫助你確保你的程式碼符合無障礙性標準。</p><p translation-origin=\"off\"><a href=\"https://github.com/angular-eslint/angular-eslint#functionality\">Angular ESLint</a> provides linting rules that can help you make sure your code meets accessibility standards.</p>\n\n</li>\n</ul>\n<!-- vale Angular.Angular_Spelling = YES -->\n<p translation-result=\"on\">圖書</p><p translation-origin=\"off\">Books</p>\n\n<!-- vale Angular.Google_Quotes = NO -->\n<ul>\n<li>\n<p translation-result=\"on\">“適合所有人的網路：設計無障礙的使用者體驗”，莎拉·霍頓和惠特尼·奎森伯裡</p><p translation-origin=\"off\">\"A Web for Everyone: Designing Accessible User Experiences,\" Sarah Horton and Whitney Quesenbery</p>\n\n</li>\n<li>\n<p translation-result=\"on\">“包容性設計模式”，Heydon Pickering</p><p translation-origin=\"off\">\"Inclusive Design Patterns,\" Heydon Pickering</p>\n\n</li>\n</ul>\n<!-- vale Angular.Google_Quotes = YES -->\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - everyone\n - features\n - guide/architecture-next-steps\n - guide/example-apps-list\n - guide/router-reference\n - guide/router-tutorial\n - tutorial/tour-of-heroes/toh-pt2\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/Input\n - api/forms/MaxValidator\n - api/forms/MinValidator\n - api/router/NavigationEnd\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - guide/accessibility#accessibility-attributes\n - guide/accessibility#accessibility-in-angular\n - guide/accessibility#active-links-identification\n - guide/accessibility#angular-ui-components\n - guide/accessibility#angular-ui-元件\n - guide/accessibility#angular-中的無障礙功能\n - guide/accessibility#augmenting-native-elements\n - guide/accessibility#case-study-building-a-custom-progress-bar\n - guide/accessibility#focus-management-after-navigation\n - guide/accessibility#more-information\n - guide/accessibility#routing\n - guide/accessibility#using-containers-for-native-elements\n - guide/accessibility#增強原生元素\n - guide/accessibility#導航後的焦點管理\n - guide/accessibility#將容器用於原生元素\n - guide/accessibility#無障礙屬性attribute\n - guide/accessibility#更多資訊\n - guide/accessibility#案例研究建構自訂進度條\n - guide/accessibility#活動連結標識\n - guide/accessibility#路由\n - guide/attribute-binding\n - guide/binding-syntax#html-attribute-vs-dom-property\n - https://dequeuniversity.com/resources\n - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\n - https://developers.google.com/web/fundamentals\n - https://developers.google.com/web/fundamentals/accessibility\n - https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\n - https://developers.google.com/web/fundamentals/accessibility/focus\n - https://developers.google.com/web/fundamentals/accessibility/semantics-aria\n - https://github.com/angular-eslint/angular-eslint#functionality\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/accessibility.md?message=docs%3A%20請簡述你的修改...\n - https://inclusive-components.design\n - https://material.angular.cn\n - https://material.angular.cn/cdk/categories\n - https://material.angular.cn/components/form-field/overview\n - https://material.angular.io\n - https://material.angular.io/cdk/a11y/overview\n - https://material.angular.io/cdk/categories\n - https://material.angular.io/components/form-field/overview\n - https://material.io/design/usability/accessibility.html\n - https://www.smashingmagazine.com/search/?q=accessibility\n - https://www.w3.org/TR/wai-aria\n - https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\n - https://www.w3.org/WAI/people-use-web\n - https://www.youtube.com/watch?v=HtTyRajRuyY\n-->"}