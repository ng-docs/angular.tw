{"id":"guide/doc-pr-prep","title":"Prepare a documentation update for a pull request","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/doc-pr-prep.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"prepare-a-documentation-update-for-a-pull-request\" translation-result=\"on\">為 Pull Request 準備文件更新<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#prepare-a-documentation-update-for-a-pull-request\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Prepare a documentation update for a pull request<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#prepare-a-documentation-update-for-a-pull-request\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本主題介紹如何準備對 Angular 文件的更新，以便你可以開啟 Pull Request。Pull Request 是你以允許將更新合併到 <code>angular/angular</code> 儲存庫的方式共享更新的方式。</p><p translation-origin=\"off\">This topic describes how to prepare your update to the Angular documentation so that you can open a pull request.\nA pull request is how you share your update in a way that allows it to be merged it into the <code>angular/angular</code> repo.</p>\n\n<div class=\"alert is-important\">\n<p><strong>IMPORTANT</strong>: <br>\nMake sure that you have reviewed your documentation update, removed any lint errors, and confirmed that it passes the end-to-end (e2e) tests without errors.</p>\n</div>\n<p translation-result=\"on\">Pull Request 與 <code>angular/angular</code> 儲存庫共享你的 fork 儲存庫 <code>personal/angular</code> 中的分支。在你的 Pull Request 被批准併合並後，你分支中的新提交會新增到 <code>angular/angular</code> 儲存庫中的主分支。你的分支中的提交及其訊息，將成為 <code>angular/angular</code> 儲存庫的一部分。</p><p translation-origin=\"off\">A pull request shares a branch in <code>personal/angular</code>, your forked repo, with the <code>angular/angular</code> repo.\nAfter your pull request is approved and merged, the new commits from your branch are added to the main branch in the <code>angular/angular</code> repo.\nThe commits in your branch, and their messages, become part of the <code>angular/angular</code> repo.</p>\n\n<p translation-result=\"on\">這對你的 Pull Request 意味著什麼？</p><p translation-origin=\"off\">What does this mean for your pull request?</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">你的提交訊息將成為對 Angular 所做更改的文件的一部分。因為它們成為 <code>angular/angular</code> 儲存庫的一部分，所以它們必須符合特定的格式，以便易於閱讀。如果它們的格式不正確，你可以在開啟 Pull Request 之前修復它。</p><p translation-origin=\"off\">Your commit messages become part of the documentation of the changes made to Angular.\nBecause they become part of the <code>angular/angular</code> repo, they must conform to a specific format so that they are easy to read.\nIf they aren't correctly formatted, you can fix that before you open your pull request.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">你可能需要壓縮在開發更新時所做的提交。在開發大型更新時，將更改儲存為中間提交是正常的，但你的 Pull Request 僅代表對 <code>angular/angular</code> 儲存庫的一項更改。將工作分支中的提交壓縮為更少或僅一個提交，使 Pull Request 中的提交與你的更新對 <code>angular/angular</code> 儲存庫的更改相匹配。</p><p translation-origin=\"off\">You might need to squash the commits that you made while developing your update.\nIt's normal to save your changes as intermediate commits while you're developing a large update, but your pull request represents only one change to the <code>angular/angular</code> repo.\nSquashing the commits from your working branch into fewer, or just one commit, makes the commits in your pull request match the changes your update makes to the <code>angular/angular</code> repo.</p>\n\n</li>\n</ol>\n<h2 id=\"format-commit-messages-for-a-pull-request\" translation-result=\"on\">格式化 Pull Request 的提交訊息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#format-commit-messages-for-a-pull-request\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Format commit messages for a pull request<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#format-commit-messages-for-a-pull-request\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">合併到 <code>angular/angular</code> 的提交必須包含格式正確的訊息。本節介紹如何正確格式化提交訊息。</p><p translation-origin=\"off\">Commits merged to <code>angular/angular</code> must have messages that are correctly formatted.\nThis section describes how to correctly format commit messages.</p>\n\n<p translation-result=\"on\">請記住，提交訊息與 Pull Request 註釋不同。</p><p translation-origin=\"off\">Remember that the commit message is different from the pull request comment.</p>\n\n<h3 id=\"single-line-commit-messages\" translation-result=\"on\">單行提交訊息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#single-line-commit-messages\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Single line commit messages<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#single-line-commit-messages\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">最簡單的提交訊息是單行文字。更新文件的 Pull Request 中的所有提交訊息都必須以 <code>docs:</code> 開頭，後跟對更改的簡短描述。</p><p translation-origin=\"off\">The simplest commit message is a single-line of text.\nAll commit messages in a pull request that updates documentation must begin with <code>docs:</code> and be followed by a short description of the change.</p>\n\n<p translation-result=\"on\">以下是有效的 Angular 提交訊息的範例。</p><p translation-origin=\"off\">The following is an example a valid Angular commit message.</p>\n\n<code-example language=\"none\" hidecopy=\"\">\n\ndocs: a short summary in present tense without capitalization or ending period\n\n</code-example>\n<p translation-result=\"on\">這是帶有前一個範例中的單行提交訊息的提交命令的範例。</p><p translation-origin=\"off\">This is an example of a commit command with the single-line commit message from the previous example.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit commit -m \"docs: a short summary in present tense without capitalization or ending period\"\n\n</code-example>\n<h3 id=\"multi-line-commit-messages\" translation-result=\"on\">多行提交訊息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#multi-line-commit-messages\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Multi-line commit messages<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#multi-line-commit-messages\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">你可以透過提供更詳細的多行訊息來包含更多資訊。訊息的詳細正文在摘要後必須用空行分隔。列出提交修復的問題的頁尾也必須用空行與正文分隔。</p><p translation-origin=\"off\">You can include more information by providing a more detailed, multi-line message.\nThe detailed body text of the message must be separated by a blank line after the summary.\nThe footer that lists the issue the commit fixes must also be separated from the body text by a blank line.</p>\n\n<code-example language=\"none\" hidecopy=\"\">\n\ndocs: a short summary in present tense without capitalization or ending period\n\nA description of what was fixed, and why.\nThis description can be as detailed as necessary and can be written with\nappropriate capitalization and punctuation\n\nFixes #34353\n\n</code-example>\n<p translation-result=\"on\">這是帶有前一個範例中的多行提交訊息的提交命令的範例。</p><p translation-origin=\"off\">This is an example of a commit command with a multi-line commit message from the previous example.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit commit -m \"docs: a short summary in present tense without capitalization or ending period\n\nA description of what was fixed, and why.\nThis description can be as detailed as necessary and can be\nwritten with appropriate capitalization and punctuation.\n\nFixes #34353\"\n\n</code-example>\n<p translation-result=\"on\">此範例僅用於文件更新。有關 Angular 提交訊息的完整規範，請參閱<a href=\"https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\">提交訊息格式</a>。</p><p translation-origin=\"off\">This example is for documentation updates only.\nFor the complete specification of Angular commit messages, see <a href=\"https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\">Commit message format</a>.</p>\n\n<h3 id=\"change-a-commit-message\" translation-result=\"on\">更改提交訊息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#change-a-commit-message\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Change a commit message<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#change-a-commit-message\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果你所做的最後一次提交中有一條格式不正確的訊息，你可以更新該訊息。更改較早提交或多次提交的訊息也是可以的，但需要更復雜的過程。</p><p translation-origin=\"off\">If the last commit you made has a message that isn't in the correct format, you can update the message.\nChanging the message of an earlier commit or of multiple commits is also possible, but requires a more complex procedure.</p>\n\n<p translation-result=\"on\">執行此命令以更改最近提交的提交訊息。新的提交訊息會如前面的過程中所述進行格式化。</p><p translation-origin=\"off\">Run this command to change the commit message of the most recent commit.\nThe new commit message is formatted as described in the previous procedures.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit commit --amend -m \"New commit message\"\n\n</code-example>\n<p translation-result=\"on\">此命令會在你的本地計算機上建立一個新提交，以替換以前的提交。你必須在開啟 Pull Request 之前推送此新提交。如果你將原始提交推送到 GitHub 帳戶中的儲存庫，請執行此命令以使用新訊息強制推送提交。</p><p translation-origin=\"off\">This command creates a new commit on your local computer that replaces the previous commit.\nYou must push this new commit before you open your pull request.\nIf you pushed the original commit to the repo in your GitHub account, run this command to force-push the commit with the new message.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit push --force-with-lease\n\n</code-example>\n<p translation-result=\"on\">如果你沒有推送你修改的提交，則可以執行不帶引數的 <code>git push</code> 來推送你更新的提交。</p><p translation-origin=\"off\">If you haven't pushed the commit you amended, you can run <code>git push</code> with no parameters to push your updated commit.</p>\n\n<h2 id=\"prepare-your-branch-for-a-pull-request\" translation-result=\"on\">準備你的分支以進行 Pull Request<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#prepare-your-branch-for-a-pull-request\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Prepare your branch for a pull request<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#prepare-your-branch-for-a-pull-request\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">當你建立工作分支以更新文件時，你分支了 <code>main</code> 分支。你在工作分支中的更改是基於你建立分支時 <code>main</code> 分支的狀態。</p><p translation-origin=\"off\">When you created your working branch to update the documentation, you branched off the <code>main</code> branch.\nYour changes in the working branch were based on the state of the <code>main</code> branch at that time you created the branch.</p>\n\n<p translation-result=\"on\">由於你建立了工作分支，因此 <code>main</code> 分支很可能已更新。為確保你的更新適用於當前的 <code>main</code> 分支，你應該重新 <code>rebase</code> 你的工作分支以將其趕上當前。你可能還需要壓縮在工作分支中所做的提交，以將它們組合用於 Pull Request。</p><p translation-origin=\"off\">Since you created your working branch, it's quite likely that the <code>main</code> branch has been updated.\nTo make sure that your updates work with the current <code>main</code> branch, you should <code>rebase</code> your working branch to catch it up to what is current.\nYou might also need to squash the commits you made in your working branch to combine them for the pull request.</p>\n\n<h3 id=\"rebase-your-working-branch\" translation-result=\"on\">重新定位你的工作分支<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#rebase-your-working-branch\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Rebase your working branch<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#rebase-your-working-branch\"><i class=\"material-icons\">link</i></a></h3>\n\n<!-- markdownLint-disable MD033 -->\n<p translation-result=\"on\">重新定位你的工作分支會將提交的起點從你開始時 <code>main</code> 分支的位置更改為現在的位置。</p><p translation-origin=\"off\">Rebasing your working branch changes the starting point of your commits from where the <code>main</code> branch was when you started to where it is now.</p>\n\n<p translation-result=\"on\">在你可以 rebase 你的工作分支之前，你必須更新你的<em>複製</em>和上游儲存庫的<em>fork</em>。</p><p translation-origin=\"off\">Before you can rebase your working branch, you must update both your <em>clone</em> and your <em>fork</em> of the upstream repo.</p>\n\n<h4 id=\"why-you-rebase-your-working-branch\" translation-result=\"on\">為什麼要重新定位工作分支<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#why-you-rebase-your-working-branch\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Why you rebase your working branch<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#why-you-rebase-your-working-branch\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">將工作分支重新繫結到 <code>main</code> 分支的當前狀態可以在你的工作分支合併回 <code>main</code> 之前消除衝突。透過重新定位你的工作分支，工作分支中的提交僅顯示你為解決問題所做的那些更改。如果你不重新定位工作分支，它可以有合併提交。合併提交是 <code>git</code> 為彌補自 <code>working</code> 分支建立以來 <code>main</code> 分支中的更改而建立的提交。合併提交是無害的，但它們可能會使將來對更改的檢視複雜化。下面說明了 rebase 過程。</p><p translation-origin=\"off\">Rebasing your working branch to the current state of the <code>main</code> branch eliminates conflicts before your working branch is merged back into <code>main</code>.\nBy rebasing your working branch, the commits in your working branch show only those changes that you made to fix the issue.\nIf you don't rebase your working branch, it can have merge commits.\nMerge commits are commits that <code>git</code> creates to make up for the changes in the <code>main</code> branch since the <code>working</code> branch was created.\nMerge commits aren't harmful, but they can complicate a future review of the changes.\nThe following illustrates the rebase process.</p>\n\n<p translation-result=\"on\">此圖顯示了一個從 <code>main</code> 分支的提交 5 建立然後更新兩次的 <code>working</code> 分支。這些圖中的編號圓圈表示提交。</p><p translation-origin=\"off\">This image shows a <code>working</code> branch created from commit 5 of the <code>main</code> branch and then updated twice.\nThe numbered circles in these diagrams represent commits.</p>\n\n<div class=\"lightbox\">\n<!-- Image source is found in angular/aio/src/assets/images/doc-contribute-images.sketch, in the sketch page that matches this topic's filename -->\n<img alt=\"An image of a git repo with a working branch created from a main branch\" src=\"generated/images/guide/doc-pr-prep/feature-with-new-branch.png\" width=\"408\" height=\"116\">\n</div>\n<p translation-result=\"on\">此圖顯示了隨著 <code>working</code> 分支更新兩次後的 <code>main</code> 分支。</p><p translation-origin=\"off\">This image shows the <code>main</code> branch after it was updated twice as the <code>working</code> branch was updated.</p>\n\n<div class=\"lightbox\">\n<!-- Image source is found in angular/aio/src/assets/images/doc-contribute-images.sketch, in the sketch page that matches this topic's filename -->\n<img alt=\"An image of a git repo with a working branch and an updated main branch\" src=\"generated/images/guide/doc-pr-prep/feature-branch-w-update.png\" width=\"408\" height=\"116\">\n</div>\n<p translation-result=\"on\">如果工作分支已合併，則需要合併提交。此圖像說明了結果。</p><p translation-origin=\"off\">If the working branch was merged, a merge commit would be needed.\nThis image illustrates the result.</p>\n\n<div class=\"lightbox\">\n<!-- Image source is found in angular/aio/src/assets/images/doc-contribute-images.sketch, in the sketch page that matches this topic's filename -->\n<img alt=\"An image of a git repo with a working branch and merged into the main branch\" src=\"generated/images/guide/doc-pr-prep/feature-branch-w-merge.png\" width=\"474\" height=\"116\">\n</div>\n<p translation-result=\"on\">為了讓未來的貢獻者更輕鬆，Angular 團隊會嘗試將提交日誌保留為線性更改順序。合併合併提交包括作為合併結果的更改以及作者或開發人員更改的內容。這使得未來的開發人員和作者更難告訴我們內容是如何演變的。</p><p translation-origin=\"off\">To make it easy for future contributors, the Angular team tries to keep the commit log as a linear sequence of changes.\nIncorporating merge commits includes changes that are the result of the merge along with what the author or developer changed. This makes it harder for future developers and authors to tell how the content evolved.</p>\n\n<p translation-result=\"on\">要建立線性更改序列，你可能需要更新 <code>working</code> 分支並更新你的更改。要將更新新增到 <code>main</code> 分支的當前狀態並防止合併提交，你可以重新定位 <code>working</code> 分支。</p><p translation-origin=\"off\">To create a linear sequence of changes, you might need to update your <code>working</code> branch and update your changes. To add your updates to the current state of the <code>main</code> branch and prevent a merge commit, you rebase the <code>working</code> branch.</p>\n\n<p translation-result=\"on\">重新定基是 <code>git</code> 更新你的工作分支以使其看起來就像你從提交 <code>9</code> 建立它的方式。為此，它會更新 <code>working</code> 分支中的提交。在重新定位 <code>working</code> 分支之後，其提交現在從 <code>main</code> 分支的最後一次提交開始。</p><p translation-origin=\"off\">Rebasing is how <code>git</code> updates your working branch to make it look like you created it from commit <code>9</code>.\nTo do this, it updates the commits in the <code>working</code> branch.\nAfter rebasing the <code>working</code> branch, its commits now start from the last commit of the <code>main</code> branch.</p>\n\n<p translation-result=\"on\">此圖顯示了具有更新提交的重新定位 <code>working</code> 分支。</p><p translation-origin=\"off\">This image shows the rebased <code>working</code> branch with is updated commits.</p>\n\n<div class=\"lightbox\">\n<!-- Image source is found in angular/aio/src/assets/images/doc-contribute-images.sketch, in the sketch page that matches this topic's filename -->\n<img alt=\"An image of a git repo with an updated working branch\" src=\"generated/images/guide/doc-pr-prep/feature-branch-w-rebase.png\" width=\"544\" height=\"120\">\n</div>\n<p translation-result=\"on\">當重新定位的 <code>working</code> 分支合併到 main 時，其提交現在可以附加到 <code>main</code> 分支，而無需額外的合併提交。</p><p translation-origin=\"off\">When the rebased <code>working</code> branch is merged to main, its commits can now be appended to the <code>main</code> branch with no extra merge commits.</p>\n\n<p translation-result=\"on\">此圖顯示了合併更新和重新定位的 <code>working</code> 分支後的線性 <code>main</code> 分支。</p><p translation-origin=\"off\">This image shows the linear, <code>main</code> branch after merging the updated and rebased <code>working</code> branch.</p>\n\n<div class=\"lightbox\">\n<!-- Image source is found in angular/aio/src/assets/images/doc-contribute-images.sketch, in the sketch page that matches this topic's filename -->\n<img alt=\"An image of a git repo with an updated working branch\" src=\"generated/images/guide/doc-pr-prep/feature-branch-merged.png\" width=\"550\" height=\"40\">\n</div>\n<h4 id=\"to-update-your-fork-of-the-upstream-repo\" translation-result=\"on\">更新上游儲存庫的 fork<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#to-update-your-fork-of-the-upstream-repo\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">To update your fork of the upstream repo<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#to-update-your-fork-of-the-upstream-repo\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">你希望在開啟 Pull Request 之前將原始儲存庫的 <code>main</code> 分支與上游 <code>angular/angular</code> 的 <code>main</code> 分支同步。</p><p translation-origin=\"off\">You want to sync the <code>main</code> branch of your origin repo with the <code>main</code> branch of the upstream <code>angular/angular</code> before you open a pull request.</p>\n\n<p translation-result=\"on\">此過程會更新你本地計算機上的原始儲存庫（ <code>personal/angular</code> 儲存庫），以便它具有當前程式碼，如此處所示。帶圓圈的數字對應於過程步驟。然後，此過程的最後一步將更新推送到你 GitHub 帳戶中 <code>angular</code> 的 fork。</p><p translation-origin=\"off\">This procedure updates your origin repo, the <code>personal/angular</code> repo, on your local computer so it has the current code, as illustrated here.\nThe circled numbers correspond to procedure steps.\nThe last step of this procedure then pushes the update to the fork of the <code>angular</code> in your GitHub account.</p>\n\n<div class=\"lightbox\">\n<!-- Image source is found in angular/aio/src/assets/images/doc-contribute-images.sketch, in the sketch page that matches this topic's filename -->\n<img alt=\"An image of the git fetch/merge/push process used to update the local computer\" src=\"generated/images/guide/doc-pr-prep/github-fetch-merge.png\" width=\"553\" height=\"716\">\n</div>\n<p translation-result=\"on\">從本地計算機上的命令列工具執行這些步驟。</p><p translation-origin=\"off\">Perform these steps from a command-line tool on your local computer.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">從你的<a href=\"guide/doc-prepare-to-edit#create-a-git-workspace-on-your-local-computer\">工作區</a>目錄，執行此命令以導航到你的<a href=\"guide/doc-prepare-to-edit#doc-working-directory\">工作目錄</a>。請記住將 <code>personal</code> 替換為你的 GitHub 使用者名稱。</p><p translation-origin=\"off\">From your <a href=\"guide/doc-prepare-to-edit#create-a-git-workspace-on-your-local-computer\">workspace</a> directory, run this command to navigate to your <a href=\"guide/doc-prepare-to-edit#doc-working-directory\">working directory</a>.\nRemember to replace <code>personal</code> with your GitHub username.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ncd personal/angular\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">執行此命令以簽出 <code>main</code> 分支。</p><p translation-origin=\"off\">Run this command to check out the <code>main</code> branch.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit checkout main\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">從上游 <code>angular/angular</code> 儲存庫更新本地計算機 <code>working</code> 目錄中的 <code>main</code> 分支。</p><p translation-origin=\"off\">Update the <code>main</code> branch in the <code>working</code> directory on your local computer from the upstream <code>angular/angular</code> repo.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit fetch upstream\ngit merge upstream/main\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">使用上游 <code>angular/angular</code> 儲存庫中的最新內容更新你在 <code>github.com</code> 上的 <code>personal/angular</code> 儲存庫。</p><p translation-origin=\"off\">Update your <code>personal/angular</code> repo on <code>github.com</code> with the latest from the upstream <code>angular/angular</code> repo.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit push\n\n</code-example>\n</li>\n</ol>\n<p translation-result=\"on\">你本地計算機上的 <code>main</code> 分支和你在 <code>github.com</code> 上的原始儲存庫現在已同步。自你上次更新 fork 以來，對上游 <code>angular/angular</code> 儲存庫所做的任何更改都對它們進行了更新。</p><p translation-origin=\"off\">The <code>main</code> branch on your local computer and your origin repo on <code>github.com</code> are now in sync.\nThey have been updated with any changes to the upstream <code>angular/angular</code> repo that were made since the last time you updated your fork.</p>\n\n<h4 id=\"to-rebase-your-working-branch\" translation-result=\"on\">重新定位你的工作分支<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#to-rebase-your-working-branch\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">To rebase your working branch<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#to-rebase-your-working-branch\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">從本地計算機上的命令列工具執行這些步驟。</p><p translation-origin=\"off\">Perform these steps from a command-line tool on your local computer.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">從你的<a href=\"guide/doc-prepare-to-edit#create-a-git-workspace-on-your-local-computer\">工作區</a>目錄，執行此命令以導航到你的<a href=\"guide/doc-prepare-to-edit#doc-working-directory\">工作目錄</a>。請記住將 <code>personal</code> 替換為你的 GitHub 使用者名稱。</p><p translation-origin=\"off\">From your <a href=\"guide/doc-prepare-to-edit#create-a-git-workspace-on-your-local-computer\">workspace</a> directory, run this command to navigate to your <a href=\"guide/doc-prepare-to-edit#doc-working-directory\">working directory</a>.\nRemember to replace <code>personal</code> with your GitHub username.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ncd personal/angular\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">執行此命令以檢查你的 <code>working</code> 分支。將 <code>working-branch</code> 替換為你的 <code>working</code> 分支的名稱。</p><p translation-origin=\"off\">Run this command to check out your <code>working</code> branch.\nReplace <code>working-branch</code> with the name of your <code>working</code> branch.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit checkout working-branch\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">執行此命令來 rebase 你的分支，以將 <code>working</code> 分支中的提交新增到 <code>main</code> 分支中的當前內容。</p><p translation-origin=\"off\">Run this command to rebase your branch to add the commits from your <code>working</code> branch to the current content in the <code>main</code> branch.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit rebase main\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">執行此命令以更新你的 GitHub 帳戶的儲存庫中的 <code>working</code> 分支。</p><p translation-origin=\"off\">Run this command to update your <code>working</code> branch in the repo in your GitHub account.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit push --force-with-lease\n\n</code-example>\n</li>\n</ol>\n<h3 id=\"review-the-commits-in-your-working-branch\" translation-result=\"on\">檢視工作分支中的提交<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#review-the-commits-in-your-working-branch\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Review the commits in your working branch<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#review-the-commits-in-your-working-branch\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在你對 <code>working</code> 分支進行 rebase 後，你的提交應該在當前 <code>main</code> 分支的提交之後。</p><p translation-origin=\"off\">After you rebase your <code>working</code> branch, your commits should be after those of the current <code>main</code> branch.</p>\n\n<h4 id=\"to-review-the-commits-that-youve-added-to-the-working-branch\" translation-result=\"on\">檢視你新增到 <code>working</code> 分支的提交<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#to-review-the-commits-that-youve-added-to-the-working-branch\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">To review the commits that you've added to the <code>working</code> branch<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#to-review-the-commits-that-youve-added-to-the-working-branch\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">從本地計算機上的命令列工具執行這些步驟。</p><p translation-origin=\"off\">Perform these steps from a command-line tool on your local computer.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">從你的<a href=\"guide/doc-prepare-to-edit#create-a-git-workspace-on-your-local-computer\">工作區</a>目錄，執行此命令以導航到你的<a href=\"guide/doc-prepare-to-edit#doc-working-directory\">工作目錄</a>。請記住將 <code>personal</code> 替換為你的 GitHub 使用者名稱。</p><p translation-origin=\"off\">From your <a href=\"guide/doc-prepare-to-edit#create-a-git-workspace-on-your-local-computer\">workspace</a> directory, run this command to navigate to your <a href=\"guide/doc-prepare-to-edit#doc-working-directory\">working directory</a>.\nRemember to replace <code>personal</code> with your GitHub username.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ncd personal/angular\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">執行此命令以確認你使用了正確的 <code>working</code> 分支。如果你不在正確的分支中，請將 <code>working-branch</code> 替換為你的 <code>working</code> 分支的名稱，並執行 <code>git checkout working-branch</code> 以選擇正確的分支。</p><p translation-origin=\"off\">Run this command to confirm that you are using the correct <code>working</code> branch.\nIf you aren't in the correct branch, replace <code>working-branch</code> with the name of your <code>working</code> branch and run <code>git checkout working-branch</code> to select the correct branch.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit status\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">檢視來自上一個 <code>git status</code> 命令的訊息。如果你不在正確的分支中，請將 <code>working-branch</code> 替換為你的 <code>working</code> 分支的名稱，並執行 <code>git checkout working-branch</code> 以選擇正確的分支。</p><p translation-origin=\"off\">Review the message from the previous <code>git status</code> command.\nIf you aren't in the correct branch, replace <code>working-branch</code> with the name of your <code>working</code> branch and run <code>git checkout working-branch</code> to select the correct branch.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">執行此命令以獲取 <code>working</code> 分支中的提交列表。</p><p translation-origin=\"off\">Run this command to get a list of the commits in your <code>working</code> branch.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\ngit log --pretty=format:\"%h %as %an %Cblue%s %Cgreen%D\"\n\n</code-example>\n<p translation-result=\"on\">此命令會返回 <code>working</code> 分支中的提交日誌，最近的提交在列表頂部。</p><p translation-origin=\"off\">This command returns the log of commits in the <code>working</code> branch with the most recent commit at the top of the list.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在前一個 <code>git log</code> 命令的輸出中，查詢包含 <code>upstream/main</code> 的條目。它應該在列表的頂部附近。</p><p translation-origin=\"off\">In the output of the previous <code>git log</code> command, find the entry that contains <code>upstream/main</code>.\nIt should be near the top of the list.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\"><strong>確認包含 <code>upstream/main</code> 的條目還包含 <code>origin/main</code> 和 <code>main</code></strong></p><p translation-origin=\"off\"><strong>Confirm that the entry that contains <code>upstream/main</code> also contains <code>origin/main</code> and <code>main</code></strong></p>\n\n<p translation-result=\"on\">如果不是，你必須重新同步你的複製和 <code>angular/angular</code> 的 fork，然後在繼續之前重新定位分支。</p><p translation-origin=\"off\">If it doesn't, you must resync your clone and your fork of <code>angular/angular</code>, and then rebase the branch before you continue.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><strong>確認你的更新的所有提交都在包含 <code>upstream/main</code> 的條目之後</strong></p><p translation-origin=\"off\"><strong>Confirm that all commits for your update are after the entry that contains <code>upstream/main</code></strong></p>\n\n<p translation-result=\"on\">請記住，日誌輸出會首先顯示最近的提交。你的提交應該都在日誌輸出中包含 <code>upstream/main</code> 的條目之上。如果你的任何提交在包含 <code>upstream/main</code> 的條目之後列出，則你在 <code>working</code> 分支中的提交會以某種方式混淆。你必須在開啟 Pull Request 之前修復分支。</p><p translation-origin=\"off\">Remember that the log output is displayed with the most recent commit first. Your commits should all be on top of the entry that contains <code>upstream/main</code> in the log output.\nIf any of your commits are listed after the entry that contains <code>upstream/main</code>, somehow your commits in the <code>working</code> branch got mixed up. You must fix the branch before you open a pull request.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><strong>確認你的提交訊息的格式正確</strong></p><p translation-origin=\"off\"><strong>Confirm that your commit messages are in the correct format</strong></p>\n\n<p translation-result=\"on\">提交訊息格式由自動測試測試，它必須是正確的格式，然後可以批准 Pull Request。</p><p translation-origin=\"off\">The commit message format is tested by the automated tests and it must be in the correct format before the pull request can be approved.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><strong>確認你的提交及其訊息反映了你的更新對 Angular 所做的更改</strong></p><p translation-origin=\"off\"><strong>Confirm that your commits and their messages reflect the changes your update makes to Angular</strong></p>\n\n<p translation-result=\"on\">如果你的提交多於更改，你可能需要在你的 Pull Request 被批准之前將它們壓縮為更少的提交。</p><p translation-origin=\"off\">If you have more commits than changes, you might need to squash them into fewer commits before your pull request is approved.</p>\n\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"next-step\" translation-result=\"on\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#next-step\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Next step<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/doc-pr-prep#next-step\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在你確認你的更新和 <code>working</code> 分支正確後，你就可以<a href=\"guide/doc-pr-open\">開啟 Pull Request 了</a>。</p><p translation-origin=\"off\">After you confirm that your updates and your <code>working</code> branch are correct, you are ready to <a href=\"guide/doc-pr-open\">open a pull request</a>.</p>\n\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：10/12/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/doc-editing\n - guide/doc-github-tasks\n - guide/doc-pr-open\n - guide/doc-pr-update\n - guide/doc-update-overview\n-->\n<!-- links from this doc:\n - guide/doc-pr-open\n - guide/doc-pr-prep#change-a-commit-message\n - guide/doc-pr-prep#format-commit-messages-for-a-pull-request\n - guide/doc-pr-prep#multi-line-commit-messages\n - guide/doc-pr-prep#next-step\n - guide/doc-pr-prep#prepare-a-documentation-update-for-a-pull-request\n - guide/doc-pr-prep#prepare-your-branch-for-a-pull-request\n - guide/doc-pr-prep#rebase-your-working-branch\n - guide/doc-pr-prep#review-the-commits-in-your-working-branch\n - guide/doc-pr-prep#single-line-commit-messages\n - guide/doc-pr-prep#to-rebase-your-working-branch\n - guide/doc-pr-prep#to-review-the-commits-that-youve-added-to-the-working-branch\n - guide/doc-pr-prep#to-update-your-fork-of-the-upstream-repo\n - guide/doc-pr-prep#why-you-rebase-your-working-branch\n - guide/doc-pr-prep#下一步\n - guide/doc-pr-prep#為-pull-request-準備文件更新\n - guide/doc-pr-prep#為什麼要重新定位工作分支\n - guide/doc-pr-prep#準備你的分支以進行-pull-request\n - guide/doc-pr-prep#單行提交訊息\n - guide/doc-pr-prep#多行提交訊息\n - guide/doc-pr-prep#更改提交訊息\n - guide/doc-pr-prep#更新上游儲存庫的-fork\n - guide/doc-pr-prep#檢視你新增到-working-分支的提交\n - guide/doc-pr-prep#檢視工作分支中的提交\n - guide/doc-pr-prep#格式化-pull-request-的提交訊息\n - guide/doc-pr-prep#重新定位你的工作分支\n - guide/doc-pr-prep#重新定位你的工作分支-1\n - guide/doc-prepare-to-edit#create-a-git-workspace-on-your-local-computer\n - guide/doc-prepare-to-edit#doc-working-directory\n - https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/doc-pr-prep.md?message=docs%3A%20請簡述你的修改...\n-->"}