{"id":"guide/event-binding","title":"Event binding","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/event-binding.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"event-binding\" translation-result=\"on\">事件繫結<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#event-binding\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Event binding<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#event-binding\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">透過事件繫結，你可以偵聽並響應使用者操作，比如按鍵、滑鼠移動、點選和觸控。</p><p translation-origin=\"off\">Event binding lets you listen for and respond to user actions such as keystrokes, mouse movements, clicks, and touches.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">包含本指南中程式碼片段的可工作範例，參閱<live-example></live-example>。</p><p translation-origin=\"off\">See the <live-example></live-example> for a working example containing the code snippets in this guide.</p>\n\n</div>\n<h2 id=\"prerequisites\" translation-result=\"on\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/architecture-components\">元件基礎</a></p><p translation-origin=\"off\"><a href=\"guide/architecture-components\">Basics of components</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/glossary#template\">範本基礎</a></p><p translation-origin=\"off\"><a href=\"guide/glossary#template\">Basics of templates</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/binding-syntax\">繫結語法</a></p><p translation-origin=\"off\"><a href=\"guide/binding-syntax\">Binding syntax</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/template-statements\">範本陳述式</a></p><p translation-origin=\"off\"><a href=\"guide/template-statements\">Template statements</a></p>\n\n</li>\n</ul>\n<h2 id=\"binding-to-events\" translation-result=\"on\">繫結到事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-events\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Binding to events<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-events\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要繫結到事件，你可以使用 Angular 事件繫結語法。此語法由等號左側括號中的目標事件名稱和右側帶引號的範本陳述式組成。</p><p translation-origin=\"off\">To bind to an event you use the Angular event binding syntax.\nThis syntax consists of a target event name within parentheses to the left of an equal sign, and a quoted template statement to the right.</p>\n\n<p translation-result=\"on\">建立以下範例；目標事件名是 <code>click</code>，範本陳述式是 <code>onSave()</code>。</p><p translation-origin=\"off\">Create the following example; the target event name is <code>click</code> and the template statement is <code>onSave()</code>.</p>\n\n<code-example language=\"html\" header=\"Event binding syntax\">\n&lt;button (click)=\"onSave()\"&gt;Save&lt;/button&gt;\n</code-example>\n<p translation-result=\"on\">事件繫結偵聽按鈕的單擊事件，並在發生單擊時呼叫元件的 <code>onSave()</code>。</p><p translation-origin=\"off\">The event binding listens for the button's click events and calls the component's <code>onSave()</code> method whenever a click occurs.</p>\n\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/template-syntax/syntax-diagram.svg\" alt=\"Syntax diagram\" width=\"600\" height=\"125\">\n</div>\n<h3 id=\"determining-an-event-target\" translation-result=\"on\">確定事件目標<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#determining-an-event-target\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Determining an event target<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#determining-an-event-target\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">為了確定事件目標，Angular 會檢查目標事件的名稱是否與已知指令的 event 屬性匹配。</p><p translation-origin=\"off\">To determine an event target, Angular checks if the name of the target event matches an event property of a known directive.</p>\n\n<p translation-result=\"on\">建立以下範例：（Angular 會檢查 <code>myClick</code> 是否是自訂 <code>ClickDirective</code> 上的事件）</p><p translation-origin=\"off\">Create the following example: (Angular checks to see if <code>myClick</code> is an event on the custom <code>ClickDirective</code>)</p>\n\n<code-example path=\"event-binding/src/app/app.component.html\" region=\"custom-directive\" header=\"src/app/app.component.html\">\n&lt;h4&gt;myClick is an event on the custom ClickDirective:&lt;/h4&gt;\n&lt;button type=\"button\" (myClick)=\"clickMessage=$event\" clickable&gt;click with myClick&lt;/button&gt;\n{{clickMessage}}\n\n</code-example>\n<p translation-result=\"on\">如果目標事件名稱 <code>myClick</code> 與 <code>ClickDirective</code> 的輸出屬性不匹配，Angular 將改為繫結到基礎 DOM 元素上的 <code>myClick</code> 事件。</p><p translation-origin=\"off\">If the target event name, <code>myClick</code> fails to match an output property of <code>ClickDirective</code>, Angular will instead bind to the <code>myClick</code> event on the underlying DOM element.</p>\n\n<h2 id=\"binding-to-passive-events\" translation-result=\"on\">繫結到被動事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-passive-events\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Binding to passive events<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-passive-events\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">這是一項高階技術，對於大多數應用程式來說不是必需的。如果你想最佳化導致效能問題的頻繁發生的事件，可能會發現這很有用。</p><p translation-origin=\"off\">This is an advanced technique that is not necessary for most applications. You may find this useful if you want to optimize frequently occurring events that are causing performance problems.</p>\n\n<p translation-result=\"on\">Angular 還支援被動事件偵聽器。比如，使用以下步驟使滾動事件變為被動的。</p><p translation-origin=\"off\">Angular also supports passive event listeners. For example, use the following steps to make a scroll event passive.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>src</code> 目錄下建立一個檔案 <code>zone-flags.ts</code>。</p><p translation-origin=\"off\">Create a file <code>zone-flags.ts</code> under <code>src</code> directory.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">將以下行新增到此檔案中。</p><p translation-origin=\"off\">Add the following line into this file.</p>\n\n<code-example language=\"typescript\">\n(window as any)['__zone_symbol__PASSIVE_EVENTS'] = ['scroll'];\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>src/polyfills.ts</code> 檔案中，在匯入 zone.js 之前，先匯入新建立的 <code>zone-flags</code>。</p><p translation-origin=\"off\">In the <code>src/polyfills.ts</code> file, before importing zone.js, import the newly created <code>zone-flags</code>.</p>\n\n<code-example language=\"typescript\">\nimport './zone-flags';\nimport 'zone.js';  // Included with Angular CLI.\n</code-example>\n</li>\n</ol>\n<p translation-result=\"on\">在這些步驟之後，如果你為 <code>scroll</code> 事件新增事件偵聽器，偵聽器就會是 <code>passive</code> 的。</p><p translation-origin=\"off\">After those steps, if you add event listeners for the <code>scroll</code> event, the listeners will be <code>passive</code>.</p>\n\n<h2 id=\"binding-to-keyboard-events\" translation-result=\"on\">繫結到鍵盤事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-keyboard-events\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Binding to keyboard events<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-keyboard-events\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可以用 Angular 的繫結語法繫結到鍵盤事件。你可以指定要繫結到鍵盤事件的鍵值或程式碼。它們的 <code>key</code> 和 <code>code</code> 欄位是瀏覽器鍵盤事件物件的原生部分。預設情況下，事件繫結假定你要使用鍵盤事件上的 <code>key</code> 欄位。你還可以用 <code>code</code> 欄位。</p><p translation-origin=\"off\">You can bind to keyboard events using Angular's binding syntax. You can specify the key or code that you would like to bind to keyboard events. They <code>key</code> and <code>code</code> fields are a native part of the browser keyboard event object. By default, event binding assumes you want to use the <code>key</code> field on the keyboard event. You can also use the <code>code</code> field.</p>\n\n<p translation-result=\"on\">鍵的組合可以用點（<code>.</code>）分隔。例如，<code>keydown.enter</code> 將允許你將事件繫結到 <code>enter</code> 鍵。你還可以用修飾鍵，例如 <code>shift</code> 、 <code>alt</code> 、 <code>control</code> 和 Mac 中的 <code>command</code> 鍵。以下範例展示瞭如何將鍵盤事件繫結到 <code>keydown.shift.t</code>。</p><p translation-origin=\"off\">Combinations of keys can be separated by a <code>.</code> (period). For example, <code>keydown.enter</code> will allow you to bind events to the <code>enter</code> key. You can also use modifier keys, such as <code>shift</code>, <code>alt</code>, <code>control</code>, and the <code>command</code> keys from Mac. The following example shows how to bind a keyboard event to <code>keydown.shift.t</code>.</p>\n\n<code-example language=\"typescript\">\n&lt;input (keydown.shift.t)=\"onKeydown($event)\" /&gt;\n</code-example>\n<p translation-result=\"on\">根據作業系統的不同，某些組合鍵可能會建立特殊字元，而不是你期望的組合鍵。例如，當你同時使用 option 和 shift 鍵時，MacOS 會建立特殊字元。如果你繫結到 <code>keydown.shift.alt.t</code>，在 macOS 上，該組合會產生 <code>ˇ</code> 而不是 <code>t</code>，它與繫結不匹配，也不會觸發你的事件處理程式。要繫結到 macOS 上的 <code>keydown.shift.alt.t</code>，請使用 <code>code</code> 鍵盤事件欄位來獲取正確的行為，例如此範例中顯示的 <code>keydown.code.shiftleft.altleft.keyt</code>。</p><p translation-origin=\"off\">Depending on the operating system, some key combinations might create special characters instead of the key combination that you expect. MacOS, for example, creates special characters when you use the option and shift keys together. If you bind to <code>keydown.shift.alt.t</code>, on macOS, that combination produces a <code>ˇ</code> character instead of a <code>t</code>, which doesn't match the binding and won't trigger your event handler. To bind to <code>keydown.shift.alt.t</code> on macOS, use the <code>code</code> keyboard event field to get the correct behavior, such as <code>keydown.code.shiftleft.altleft.keyt</code> shown in this example.</p>\n\n<code-example language=\"typescript\">\n&lt;input (keydown.code.shiftleft.altleft.keyt)=\"onKeydown($event)\" /&gt;\n</code-example>\n<p translation-result=\"on\"><code>code</code> 欄位比 <code>key</code> 欄位更具體。<code>key</code> 欄位總是會報告 <code>shift</code>，而 <code>code</code> 欄位將指明 <code>leftshift</code> 或 <code>rightshift</code>。使用 <code>code</code> 欄位時，你可能需要新增單獨的繫結以捕獲你想要的所有行為。使用 <code>code</code> 欄位時無需處理作業系統特有的行為，例如 macOS 上的 <code>shift + option</code> 行為。</p><p translation-origin=\"off\">The <code>code</code> field is more specific than the <code>key</code> field. The <code>key</code> field always reports <code>shift</code>, whereas the <code>code</code> field will specify <code>leftshift</code> or <code>rightshift</code>. When using the <code>code</code> field, you might need to add separate bindings to catch all the behaviors you want. Using the <code>code</code> field avoids the need to handle OS specific behaviors such as the <code>shift + option</code> behavior on macOS.</p>\n\n<p translation-result=\"on\">有關更多資訊，請存取<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\">鍵值</a>和<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values\">鍵碼</a>的完整參考，以幫助你建構事件字串。</p><p translation-origin=\"off\">For more information, visit the full reference for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\">key</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values\">code</a> to help build out your event strings.</p>\n\n<h2 id=\"whats-next\" translation-result=\"on\">接下來呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#whats-next\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What's next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\">關於事件繫結工作原理的更多資訊，請參閱<a href=\"guide/event-binding-concepts\">事件繫結工作原理</a>。</p><p translation-origin=\"off\">For more information on how event binding works, see <a href=\"guide/event-binding-concepts\">How event binding works</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/property-binding\">property 繫結</a></p><p translation-origin=\"off\"><a href=\"guide/property-binding\">Property binding</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/interpolation\">文字插值</a></p><p translation-origin=\"off\"><a href=\"guide/interpolation\">Text interpolation</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/two-way-binding\">雙向繫結</a></p><p translation-origin=\"off\"><a href=\"guide/two-way-binding\">Two-way binding</a></p>\n\n</li>\n</ul>\n\n  <div class=\"reviewed\">最後複查時間：5/10/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - extended-diagnostics/NG8101\n - guide/ajs-quick-reference\n - guide/binding-overview\n - guide/built-in-directives\n - guide/example-apps-list\n - guide/glossary\n - guide/inputs-outputs\n - guide/interpolation\n - guide/property-binding\n - guide/template-overview\n - guide/template-syntax\n - guide/two-way-binding\n - guide/user-input\n - tutorial/tour-of-heroes/toh-pt2\n - tutorial/tour-of-heroes/toh-pt4\n-->\n<!-- links from this doc:\n - guide/architecture-components\n - guide/binding-syntax\n - guide/event-binding#binding-to-events\n - guide/event-binding#binding-to-keyboard-events\n - guide/event-binding#binding-to-passive-events\n - guide/event-binding#determining-an-event-target\n - guide/event-binding#event-binding\n - guide/event-binding#prerequisites\n - guide/event-binding#whats-next\n - guide/event-binding#事件繫結\n - guide/event-binding#前提條件\n - guide/event-binding#接下來呢\n - guide/event-binding#確定事件目標\n - guide/event-binding#繫結到事件\n - guide/event-binding#繫結到被動事件\n - guide/event-binding#繫結到鍵盤事件\n - guide/event-binding-concepts\n - guide/glossary#template\n - guide/interpolation\n - guide/property-binding\n - guide/template-statements\n - guide/two-way-binding\n - https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values\n - https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/event-binding.md?message=docs%3A%20請簡述你的修改...\n-->"}