{"id":"guide/binding-syntax","title":"Binding syntax","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/binding-syntax.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"binding-syntax\" translation-result=\"on\">繫結語法：概述<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#binding-syntax\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Binding syntax<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#binding-syntax\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">資料繫結會根據應用程式的狀態自動使你的頁面保持最新狀態。你可以使用資料繫結來指定諸如圖像源、按鈕狀態或特定使用者的資料之類別的內容。</p><p translation-origin=\"off\">Data binding automatically keeps your page up-to-date based on your application's state.\nYou use data binding to specify things such as the source of an image, the state of a button, or data for a particular user.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">包含本指南中程式碼片段的可工作範例，參閱<live-example></live-example>。</p><p translation-origin=\"off\">See the <live-example></live-example> for a working example containing the code snippets in this guide.</p>\n\n</div>\n<h2 id=\"data-binding-and-html\" translation-result=\"on\">資料繫結和 HTML<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#data-binding-and-html\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Data binding and HTML<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#data-binding-and-html\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">開發人員可以使用字串值指定屬性來客製 HTML。在以下範例中，<code>class</code>、<code>src</code> 和 <code>disabled</code> 修飾了 <code>&lt;div&gt;</code>、<code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> 和 <code>&lt;button&gt;</code> 元素。</p><p translation-origin=\"off\">Developers can customize HTML by specifying attributes with string values.\nIn the following example, <code>class</code>, <code>src</code>, and <code>disabled</code> modify the <code>&lt;div&gt;</code>, <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code>, and <code>&lt;button&gt;</code> elements respectively.</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"special\"&gt;Plain old HTML&lt;/div&gt;\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> src=\"images/item.png\"&gt;\n&lt;button disabled&gt;Save&lt;/button&gt;\n\n</code-example>\n<p translation-result=\"on\">可以使用資料繫結來控制按鈕狀態等：</p><p translation-origin=\"off\">Use data binding to control things like the state of a button:</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"binding-syntax/src/app/app.component.html\" region=\"disabled-button\">\n&lt;!-- Bind button disabled state to `isUnchanged` property --&gt;\n&lt;button type=\"button\" [disabled]=\"isUnchanged\"&gt;Save&lt;/button&gt;\n\n</code-example>\n<p translation-result=\"on\">請注意，繫結是繫結到 <code>disabled</code> 這個 Property（屬性），而不是 Attribute（屬性）。資料繫結使用的是 DOM 元素、元件和指令的 Property，而不是 HTML Attribute。</p><p translation-origin=\"off\">Notice that the binding is to the <code>disabled</code> property of the button's DOM element, not the attribute.\nData binding works with properties of DOM elements, components, and directives, not HTML attributes.</p>\n\n<p><a id=\"html-attribute-vs-dom-property\"></a></p>\n<h3 id=\"html-attributes-and-dom-properties\" translation-result=\"on\">HTML Attribute 和 DOM Property<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#html-attributes-and-dom-properties\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">HTML attributes and DOM properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#html-attributes-and-dom-properties\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">對於 Angular 繫結來說，HTML Attribute 和 DOM Property 是有顯著區別的。</p><p translation-origin=\"off\">Angular binding distinguishes between HTML attributes and DOM properties.</p>\n\n<p translation-result=\"on\">Attribute 會初始化 DOM Property，你可以配置它們以修改元素的行為。Property 則是 DOM 節點的特性。</p><p translation-origin=\"off\">Attributes initialize DOM properties and you can configure them to modify an element's behavior.\nProperties are features of DOM nodes.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">少數 HTML Attribute 可以 1:1 對映到同名的 Property。比如,</p><p translation-origin=\"off\">A few HTML attributes have 1:1 mapping to properties; for example,</p>\n\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\nid\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">某些 HTML Attribute 沒有對應的 Property；比如，</p><p translation-origin=\"off\">Some HTML attributes don't have corresponding properties; for example,</p>\n\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\naria-*\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">某些 DOM Property 沒有對應的 Attribute；比如，</p><p translation-origin=\"off\">Some DOM properties don't have corresponding attributes; for example,</p>\n\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\ntextContent\n\n</code-example>\n</li>\n</ul>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">請記住，即使 HTML Attribute 和 DOM Property 具有相同的名稱，它們也仍然是不同的。</p><p translation-origin=\"off\">Remember that HTML attributes and DOM properties are different things, even when they have the same name.</p>\n\n</div>\n<p translation-result=\"on\">在 Angular 中，HTML Attribute 的唯一作用是初始化元素和指令的狀態。</p><p translation-origin=\"off\">In Angular, the only role of HTML attributes is to initialize element and directive state.</p>\n\n<p translation-result=\"on\">編寫資料繫結時，你只是在處理 DOM Property 和目標物件的事件。</p><p translation-origin=\"off\">When you write a data binding, you're dealing exclusively with the DOM properties and events of the target object.</p>\n\n<h4 id=\"example-1-an-input\" translation-result=\"on\">範例 1：<code>&lt;input&gt;</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#example-1-an-input\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Example 1: an <code>&lt;input&gt;</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#example-1-an-input\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">當瀏覽器渲染 <code>&lt;input type=\"text\" value=\"Sarah\"&gt;</code> 時，它將建立一個具有 <code>value</code> 這個 Property 的相應 DOM 節點，並將其 <code>value</code> 初始化為 “Sarah”。</p><p translation-origin=\"off\">When the browser renders <code>&lt;input type=\"text\" value=\"Sarah\"&gt;</code>, it creates a corresponding DOM node with a <code>value</code> property and initializes that <code>value</code> to \"Sarah\".</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;input type=\"text\" value=\"Sarah\"&gt;\n\n</code-example>\n<p translation-result=\"on\">當用戶將 <code>Sally</code> 輸入到 <code>&lt;input&gt;</code> 時，DOM 元素的 <code>value</code> Property 會變為 <code>Sally</code>。但是，如果使用 <code>input.getAttribute('value')</code> 讀取 <code>value</code>，你會看到該 Attribute 保持不變 - 它仍然會返回 “Sarah”。</p><p translation-origin=\"off\">When the user enters <code>Sally</code> into the <code>&lt;input&gt;</code>, the DOM element <code>value</code> property becomes <code>Sally</code>.\nHowever, if you look at the HTML attribute <code>value</code> using <code>input.getAttribute('value')</code>, you can see that the attribute remains unchanged —it returns \"Sarah\".</p>\n\n<p translation-result=\"on\">作為 HTML Attribute 的 <code>value</code> 會指定初始值； 而 DOM 的 Property <code>value</code> 則是當前值。</p><p translation-origin=\"off\">The HTML attribute <code>value</code> specifies the initial value; the DOM <code>value</code> property is the current value.</p>\n\n<p translation-result=\"on\">要在執行的應用程式中檢視 Attribute 與 DOM Property，參閱<live-example name=\"binding-syntax\"></live-example>，請特別關注繫結語法的資訊。</p><p translation-origin=\"off\">To see attributes versus DOM properties in a functioning app, see the <live-example name=\"binding-syntax\"></live-example> especially for binding syntax.</p>\n\n<h4 id=\"example-2-a-disabled-button\" translation-result=\"on\">範例 2：禁用按鈕<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#example-2-a-disabled-button\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Example 2: a disabled button<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#example-2-a-disabled-button\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">預設情況下，按鈕的 <code>disabled</code> Property 為 <code>false</code>，因此啟用了此按鈕。</p><p translation-origin=\"off\">A button's <code>disabled</code> property is <code>false</code> by default so the button is enabled.</p>\n\n<p translation-result=\"on\">當新增 <code>disabled</code> Attribute 時，你正在將按鈕的 <code>disabled</code> Property 初始化為 <code>true</code>，這將禁用該按鈕。</p><p translation-origin=\"off\">When you add the <code>disabled</code> attribute, you are initializing the button's <code>disabled</code> property to <code>true</code> which disables the button.</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;button disabled&gt;Test Button&lt;/button&gt;\n\n</code-example>\n<p translation-result=\"on\">新增或刪除 <code>disabled</code> 這個 Attribute 將禁用或啟用該按鈕。但是，該 Attribute 的值無關緊要，這就是為什麼你無法透過編寫 <code>&lt;button disabled=\"false\"&gt;Still Disabled&lt;/button&gt;</code> 來啟用按鈕的原因。</p><p translation-origin=\"off\">Adding and removing the <code>disabled</code> attribute disables and enables the button.\nHowever, the value of the attribute is irrelevant, which is why you cannot enable a button by writing <code>&lt;button disabled=\"false\"&gt;Still Disabled&lt;/button&gt;</code>.</p>\n\n<p translation-result=\"on\">要控制按鈕的狀態，請設定 <code>disabled</code> 這個 Property。</p><p translation-origin=\"off\">To control the state of the button, set the <code>disabled</code> property instead.</p>\n\n<h4 id=\"property-and-attribute-comparison\" translation-result=\"on\">Property 和 Attribute 的比較<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#property-and-attribute-comparison\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Property and attribute comparison<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#property-and-attribute-comparison\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">儘管從技術角度上說，可以設定 <code>[attr.disabled]</code> Attribute 這個繫結，但是它的值是不同的，差異在於其 Property 繫結必須是布林值，而其相應的 Attribute 繫結則取決於該值是否為 <code>null</code>。考慮以下情況：</p><p translation-origin=\"off\">Though you could technically set the <code>[attr.disabled]</code> attribute binding, the values are different in that the property binding must be a boolean value, while its corresponding attribute binding relies on whether the value is <code>null</code> or not.\nConsider the following:</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;input [disabled]=\"condition ? true : false\"&gt;\n&lt;input [attr.disabled]=\"condition ? 'disabled' : null\"&gt;\n\n</code-example>\n<p translation-result=\"on\">第一行使用 <code>disabled</code> 這個 Property，要使用布林值。第二行使用 <code>disabled</code> 這個 Attribute，要判定是否為 <code>null</code>。</p><p translation-origin=\"off\">The first line, which uses the <code>disabled</code> property, uses a boolean value.\nThe second line, which uses the disabled attribute checks for <code>null</code>.</p>\n\n<p translation-result=\"on\">通常，要使用 Property 繫結而不是 Attribute 繫結。因為布林值很容易閱讀，語法較短，並且 Property 繫結的效能更高。</p><p translation-origin=\"off\">Generally, use property binding over attribute binding as a boolean value is easy to read, the syntax is shorter, and a property is more performant.</p>\n\n<p translation-result=\"on\">要在執行的應用程式中檢視 <code>disabled</code> 按鈕，請參見<live-example></live-example>。本範例說明如何從元件中切換 disabled 這個 Property。</p><p translation-origin=\"off\">To see the <code>disabled</code> button example in a functioning application, see the <live-example></live-example>.\nThis example shows you how to toggle the disabled property from the component.</p>\n\n<h2 id=\"types-of-data-binding\" translation-result=\"on\">資料繫結的型別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#types-of-data-binding\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Types of data binding<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#types-of-data-binding\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular 根據資料流的方向提供三種類型的資料繫結：</p><p translation-origin=\"off\">Angular provides three categories of data binding according to the direction of data flow:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">從源到檢視</p><p translation-origin=\"off\">From source to view</p>\n\n</li>\n<li>\n<p translation-result=\"on\">從檢視到源</p><p translation-origin=\"off\">From view to source</p>\n\n</li>\n<li>\n<p translation-result=\"on\">雙向，從檢視到源再到檢視</p><p translation-origin=\"off\">In a two-way sequence of view to source to view</p>\n\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">型別</nt-wrapper><nt-wrapper translation-origin=\"off\">Type</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">語法</nt-wrapper><nt-wrapper translation-origin=\"off\">Syntax</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">分類</nt-wrapper><nt-wrapper translation-origin=\"off\">Category</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">插值 <br> Property <br> Attribute <br> 類 <br> 樣式</nt-wrapper><nt-wrapper translation-origin=\"off\">Interpolation <br> Property <br> Attribute <br> Class <br> Style</nt-wrapper></td>\n<td align=\"left\"><code-example> {{expression}} \n[target]=\"expression\" </code-example></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">單向從資料源到檢視</nt-wrapper><nt-wrapper translation-origin=\"off\">One-way from data source to view target</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">事件</nt-wrapper><nt-wrapper translation-origin=\"off\">Event</nt-wrapper></td>\n<td align=\"left\"><code-example> (target)=\"statement\" </code-example></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">單向從檢視到資料源</nt-wrapper><nt-wrapper translation-origin=\"off\">One-way from view target to data source</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">雙向</nt-wrapper><nt-wrapper translation-origin=\"off\">Two-way</nt-wrapper></td>\n<td align=\"left\"><code-example> [(target)]=\"expression\" </code-example></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">雙向</nt-wrapper><nt-wrapper translation-origin=\"off\">Two-way</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p translation-result=\"on\">插值以外的繫結型別在等號左側有一個目標名稱。繫結的目標是 property 或事件，你可以用方括號（<code>[ ]</code>）字元、括號（<code>( )</code>）字元或兩者（<code>[( )]</code>）字元括起來。</p><p translation-origin=\"off\">Binding types other than interpolation have a target name to the left of the equal sign.\nThe target of a binding is a property or event, which you surround with square bracket (<code>[ ]</code>) characters, parenthesis (<code>( )</code>) characters, or both (<code>[( )]</code>) characters.</p>\n\n<p translation-result=\"on\"><code>[]</code>、<code>()</code>、<code>[()]</code> 這些繫結標點以及字首，用來指定資料流的方向。</p><p translation-origin=\"off\">The binding punctuation of <code>[]</code>, <code>()</code>, <code>[()]</code>, and the prefix specify the direction of data flow.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用 <code>[]</code> 從源繫結到檢視</p><p translation-origin=\"off\">Use <code>[]</code> to bind from source to view</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用 <code>()</code> 從檢視繫結到源</p><p translation-origin=\"off\">Use <code>()</code> to bind from view to source</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用 <code>[()]</code> 進行雙向繫結，將檢視繫結到源再繫結到檢視</p><p translation-origin=\"off\">Use <code>[()]</code> to bind in a two-way sequence of view to source to view</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">將表示式或陳述式放在雙引號 <code>\"\"</code> 中等號的右側。有關更多資訊，請參見<a href=\"guide/interpolation\">插值</a>和<a href=\"guide/template-statements\">範本陳述式</a>。</p><p translation-origin=\"off\">Place the expression or statement to the right of the equal sign within double quote (<code>\"\"</code>) characters.\nFor more information see <a href=\"guide/interpolation\">Interpolation</a> and <a href=\"guide/template-statements\">Template statements</a>.</p>\n\n<h2 id=\"binding-types-and-targets\" translation-result=\"on\">繫結型別和目標<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#binding-types-and-targets\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Binding types and targets<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#binding-types-and-targets\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">資料繫結的目標可以是 Property、事件或 Attribute 的名稱。源指令的每個 public 成員都可以自動用於繫結範本表示式或範本陳述式中。下表總結了不同繫結型別的目標。</p><p translation-origin=\"off\">The target of a data binding can be a property, an event, or an attribute name.\nEvery public member of a source directive is automatically available for binding in a template expression or statement.\nThe following table summarizes the targets for the different binding types.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">型別</nt-wrapper><nt-wrapper translation-origin=\"off\">Type</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">目標</nt-wrapper><nt-wrapper translation-origin=\"off\">Target</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">例子</nt-wrapper><nt-wrapper translation-origin=\"off\">Examples</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">屬性</nt-wrapper><nt-wrapper translation-origin=\"off\">Property</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">元素屬性 <br> 元件屬性 <br> 指令屬性</nt-wrapper><nt-wrapper translation-origin=\"off\">Element property <br> Component property <br> Directive property</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">下面例子中的 <code>alt</code>、<code>src</code>、<code>hero</code> 和 <code><a href=\"api/common/NgClass\" class=\"code-anchor\">ngClass</a></code>：<code-example path=\"template-syntax/src/app/app.component.html\" region=\"property-binding-syntax-1\">\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> [alt]=\"hero.name\" [src]=\"heroImageUrl\"&gt;\n&lt;app-hero-detail [hero]=\"currentHero\"&gt;&lt;/app-hero-detail&gt;\n&lt;div [<a href=\"api/common/NgClass\" class=\"code-anchor\">ngClass</a>]=\"{'special': isSpecial}\"&gt;&lt;/div&gt;\n\n</code-example> <!-- For more information, see [Property Binding](guide/property-binding). --></nt-wrapper><nt-wrapper translation-origin=\"off\"><code>alt</code>, <code>src</code>, <code>hero</code>, and <code><a href=\"api/common/NgClass\" class=\"code-anchor\">ngClass</a></code> in the following: <code-example path=\"template-syntax/src/app/app.component.html\" region=\"property-binding-syntax-1\">\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> [alt]=\"hero.name\" [src]=\"heroImageUrl\"&gt;\n&lt;app-hero-detail [hero]=\"currentHero\"&gt;&lt;/app-hero-detail&gt;\n&lt;div [<a href=\"api/common/NgClass\" class=\"code-anchor\">ngClass</a>]=\"{'special': isSpecial}\"&gt;&lt;/div&gt;\n\n</code-example> <!-- For more information, see [Property Binding](guide/property-binding). --></nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">事件</nt-wrapper><nt-wrapper translation-origin=\"off\">Event</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">元素事件 <br> 元件事件 <br> 指令事件</nt-wrapper><nt-wrapper translation-origin=\"off\">Element event <br> Component event <br> Directive event</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">下面例子中的 <code>click</code>、<code>deleteRequest</code> 和 <code>myClick</code>：<code-example path=\"template-syntax/src/app/app.component.html\" region=\"event-binding-syntax-1\">\n&lt;button type=\"button\" (click)=\"onSave()\"&gt;Save&lt;/button&gt;\n&lt;app-hero-detail (deleteRequest)=\"deleteHero()\"&gt;&lt;/app-hero-detail&gt;\n&lt;div (myClick)=\"clicked=$event\" clickable&gt;click me&lt;/div&gt;\n\n</code-example></nt-wrapper><nt-wrapper translation-origin=\"off\"><code>click</code>, <code>deleteRequest</code>, and <code>myClick</code> in the following: <code-example path=\"template-syntax/src/app/app.component.html\" region=\"event-binding-syntax-1\">\n&lt;button type=\"button\" (click)=\"onSave()\"&gt;Save&lt;/button&gt;\n&lt;app-hero-detail (deleteRequest)=\"deleteHero()\"&gt;&lt;/app-hero-detail&gt;\n&lt;div (myClick)=\"clicked=$event\" clickable&gt;click me&lt;/div&gt;\n\n</code-example></nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">雙向</nt-wrapper><nt-wrapper translation-origin=\"off\">Two-way</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">事件與屬性</nt-wrapper><nt-wrapper translation-origin=\"off\">Event and property</nt-wrapper></td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"2-way-binding-syntax-1\">\n&lt;input [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"name\"&gt;\n\n</code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\">Attribute</td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">Attribute（少數特例情況）</nt-wrapper><nt-wrapper translation-origin=\"off\">Attribute (the exception)</nt-wrapper></td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"attribute-binding-syntax-1\">\n&lt;button type=\"button\" [attr.aria-label]=\"help\"&gt;help&lt;/button&gt;\n\n</code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">類</nt-wrapper><nt-wrapper translation-origin=\"off\">Class</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><code>class</code> 屬性</nt-wrapper><nt-wrapper translation-origin=\"off\"><code>class</code> property</nt-wrapper></td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"class-binding-syntax-1\">\n&lt;div [class.special]=\"isSpecial\"&gt;Special&lt;/div&gt;\n\n</code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">樣式</nt-wrapper><nt-wrapper translation-origin=\"off\">Style</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><code><a href=\"api/animations/style\" class=\"code-anchor\">style</a></code> 屬性</nt-wrapper><nt-wrapper translation-origin=\"off\"><code><a href=\"api/animations/style\" class=\"code-anchor\">style</a></code> property</nt-wrapper></td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"style-binding-syntax-1\">\n&lt;button type=\"button\" [style.color]=\"isSpecial ? 'red' : 'green'\"&gt;\n\n</code-example></td>\n</tr>\n\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - errors/NG8002\n - guide/accessibility\n - guide/event-binding\n - guide/example-apps-list\n - guide/interpolation\n - guide/property-binding\n - guide/styleguide\n - guide/template-syntax\n-->\n<!-- links from this doc:\n - api/animations/style\n - api/common/NgClass\n - api/common/NgOptimizedImage\n - api/forms/NgModel\n - guide/binding-syntax#binding-syntax\n - guide/binding-syntax#binding-types-and-targets\n - guide/binding-syntax#data-binding-and-html\n - guide/binding-syntax#example-1-an-input\n - guide/binding-syntax#example-2-a-disabled-button\n - guide/binding-syntax#html-attribute-和-dom-property\n - guide/binding-syntax#html-attributes-and-dom-properties\n - guide/binding-syntax#property-and-attribute-comparison\n - guide/binding-syntax#property-和-attribute-的比較\n - guide/binding-syntax#types-of-data-binding\n - guide/binding-syntax#資料繫結和-html\n - guide/binding-syntax#資料繫結的型別\n - guide/binding-syntax#繫結型別和目標\n - guide/binding-syntax#繫結語法概述\n - guide/binding-syntax#範例-1input\n - guide/binding-syntax#範例-2禁用按鈕\n - guide/interpolation\n - guide/template-statements\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/binding-syntax.md?message=docs%3A%20請簡述你的修改...\n-->"}