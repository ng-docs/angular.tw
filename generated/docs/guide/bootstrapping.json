{"id":"guide/bootstrapping","title":"Launching your app with a root module","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/bootstrapping.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"launching-your-app-with-a-root-module\" translation-result=\"on\">啟動過程<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#launching-your-app-with-a-root-module\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Launching your app with a root module<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#launching-your-app-with-a-root-module\"><i class=\"material-icons\">link</i></a></h1>\n\n<h2 id=\"prerequisites\" translation-result=\"on\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">對下列知識有基本的瞭解：</p><p translation-origin=\"off\">A basic understanding of the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/ngmodule-vs-jsmodule\">JavaScript 模組與 NgModules</a>。</p><p translation-origin=\"off\"><a href=\"guide/ngmodule-vs-jsmodule\">JavaScript Modules vs. NgModules</a></p>\n\n</li>\n</ul>\n<p translation-result=\"on\"><code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 用於描述應用的各個部分如何組織在一起。每個應用有至少一個 Angular 模組，<em>根</em>模組就是你用來啟動此應用的模組。按照慣例，它通常命名為 <code>AppModule</code>。</p><p translation-origin=\"off\">An NgModule describes how the application parts fit together.\nEvery application has at least one Angular module, the <em>root</em> module, which must be present for bootstrapping the application on launch.\nBy convention and by default, this NgModule is named <code>AppModule</code>.</p>\n\n<p translation-result=\"on\">當你使用 <a href=\"cli\">Angular CLI</a> 命令 <code>ng new</code> 產生一個應用時，其預設的 <code>AppModule</code> 是這樣的：</p><p translation-origin=\"off\">When you use the <a href=\"cli\">Angular CLI</a> command <code>ng new</code> to generate an app, the default <code>AppModule</code> looks like the following:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\n/* JavaScript imports */\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n/* the AppModule class with the @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> decorator */\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n</code-example>\n<p translation-result=\"on\">在 <code>import</code> 陳述式之後，是一個帶有 <strong><code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code></strong> <a href=\"guide/glossary#decorator\" title=\"&quot;Decorator&quot; explained\">裝飾器</a>的類別。</p><p translation-origin=\"off\">After the import statements is a class with the <strong><code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code></strong> <a href=\"guide/glossary#decorator\" title=\"&quot;Decorator&quot; explained\">decorator</a>.</p>\n\n<p translation-result=\"on\"><code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 裝飾器表明 <code>AppModule</code> 是一個 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 類別。<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 獲取一個元資料物件，它會告訴 Angular 如何編譯和啟動本應用。</p><p translation-origin=\"off\">The <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> decorator identifies <code>AppModule</code> as an <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> class.\n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> takes a metadata object that tells Angular how to compile and launch the application.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">元資料物件</nt-wrapper><nt-wrapper translation-origin=\"off\">metadata object</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">詳細資訊</nt-wrapper><nt-wrapper translation-origin=\"off\">Details</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\">declarations</td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">該應用所擁有的元件。</nt-wrapper><nt-wrapper translation-origin=\"off\">This application's lone component.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\">imports</td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">匯入 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 以獲取瀏覽器特有的服務，比如 DOM 渲染、無害化處理和位置（location）。</nt-wrapper><nt-wrapper translation-origin=\"off\">Import <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> to have browser-specific services such as DOM rendering, sanitization, and location.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\">providers</td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">各種服務提供者。</nt-wrapper><nt-wrapper translation-origin=\"off\">The service providers.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\">bootstrap</td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><em>根</em>元件，Angular 建立它並插入 <code>index.html</code> 宿主頁面。</nt-wrapper><nt-wrapper translation-origin=\"off\">The <em>root</em> component that Angular creates and inserts into the <code>index.html</code> host web page.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p translation-result=\"on\">Angular CLI 建立的預設應用只有一個元件 <code>AppComponent</code>，所以它會同時出現在 <code>declarations</code> 和 <code>bootstrap</code> 陣列中。</p><p translation-origin=\"off\">The default application created by the Angular CLI only has one component, <code>AppComponent</code>, so it is in both the <code>declarations</code> and the <code>bootstrap</code> arrays.</p>\n\n<p><a id=\"declarations\"></a></p>\n<h2 id=\"the-declarations-array\" translation-result=\"on\"><code>declarations</code> 陣列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-declarations-array\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">The <code>declarations</code> array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-declarations-array\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">該模組的 <code>declarations</code> 陣列告訴 Angular 哪些元件屬於該模組。當你建立更多元件時，也要把它們新增到 <code>declarations</code> 中。</p><p translation-origin=\"off\">The module's <code>declarations</code> array tells Angular which components belong to that module.\nAs you create more components, add them to <code>declarations</code>.</p>\n\n<p translation-result=\"on\">每個元件都應該（且只能）宣告（declare）在一個 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 類中。如果你使用了未宣告過的元件，Angular 就會報錯。</p><p translation-origin=\"off\">You must declare every component in exactly one <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> class.\nIf you use a component without declaring it, Angular returns an error message.</p>\n\n<p translation-result=\"on\"><code>declarations</code> 陣列只能接受可宣告物件。可宣告物件包括元件、<a href=\"guide/attribute-directives\">指令</a>和<a href=\"guide/pipes\">管道</a>。一個模組的所有可宣告物件都必須放在 <code>declarations</code> 陣列中。可宣告物件必須只能屬於一個模組，如果同一個類被宣告在了多個模組中，編譯器就會報錯。</p><p translation-origin=\"off\">The <code>declarations</code> array only takes declarables. Declarables are components, <a href=\"guide/attribute-directives\">directives</a>, and <a href=\"guide/pipes\">pipes</a>.\nAll of a module's declarables must be in the <code>declarations</code> array.\nDeclarables must belong to exactly one module. The compiler emits an error if you try to declare the same class in more than one module.</p>\n\n<p translation-result=\"on\">這些可宣告的類在當前模組中是可見的，但是對其它模組中的元件是不可見的 —— 除非把它們從當前模組匯出，並讓對方模組匯入本模組。</p><p translation-origin=\"off\">These declared classes are visible within the module but invisible to components in a different module, unless they are exported from this module and the other module imports this one.</p>\n\n<p translation-result=\"on\">下面是哪些類可以新增到 <code>declarations</code> 陣列中的例子：</p><p translation-origin=\"off\">An example of what goes into a declarations array follows:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\ndeclarations: [\n  YourComponent,\n  YourPipe,\n  YourDirective\n],\n\n</code-example>\n<p translation-result=\"on\">每個可宣告物件都只能屬於一個模組，所以只能把它宣告在一個 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 中。當你需要在其它模組中使用它時，就要在那裡匯入包含這個可宣告物件的模組。</p><p translation-origin=\"off\">A declarable can only belong to one module, so only declare it in one <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>.\nWhen you need it elsewhere, import the module that contains the declarable you need.</p>\n\n<h3 id=\"using-directives-with-ngmodule\" translation-result=\"on\">透過 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 使用指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#透過-ngmodule-使用指令\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Using directives with <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#using-directives-with-ngmodule\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">使用 <code>declarations</code> 陣列宣告指令。在模組中使用指令、元件或管道的步驟如下：</p><p translation-origin=\"off\">Use the <code>declarations</code> array for directives.\nTo use a directive, component, or pipe in a module, you must do a few things:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">從你編寫它的檔案中匯出它。</p><p translation-origin=\"off\">Export it from the file where you wrote it.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">把它匯入到適當的模組中。</p><p translation-origin=\"off\">Import it into the appropriate module.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>declarations</code> 陣列中宣告它。</p><p translation-origin=\"off\">Declare it in the <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> <code>declarations</code> array.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">這三步的結果如下所示。在你建立指令的檔案中匯出它。下面的例子中，<code>item.directive.ts</code> 中的 <code>ItemDirective</code> 是 CLI 自動產生的預設指令結構。</p><p translation-origin=\"off\">Those three steps look like the following. In the file where you create your directive, export it.\nThe following example, named <code>ItemDirective</code> is the default directive structure that the CLI generates in its own file, <code>item.directive.ts</code>:</p>\n\n<code-example header=\"src/app/item.directive.ts\" path=\"bootstrapping/src/app/item.directive.ts\" region=\"directive\">\n\n\nimport { <a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a> } from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: '[appItem]'\n})\nexport class ItemDirective {\n// code goes here\n  constructor() { }\n\n}\n\n</code-example>\n<p translation-result=\"on\">重點在於你要先在這裡匯出它才能在別處匯入它。接下來，使用 JavaScript 的 <code>import</code> 陳述式把它匯入到 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 中（這裡是 <code>app.module.ts</code>）。</p><p translation-origin=\"off\">The key point here is that you have to export it, so that you can import it elsewhere.\nNext, import it into the <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>, in this example <code>app.module.ts</code>, with a JavaScript import statement:</p>\n\n<code-example header=\"src/app/app.module.ts\" path=\"bootstrapping/src/app/app.module.ts\" region=\"directive-import\">\nimport { ItemDirective } from './item.directive';\n\n</code-example>\n<p translation-result=\"on\">同樣在這個檔案中，把它新增到 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>declarations</code> 陣列中：</p><p translation-origin=\"off\">And in the same file, add it to the <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> <code>declarations</code> array:</p>\n\n<code-example header=\"src/app/app.module.ts\" path=\"bootstrapping/src/app/app.module.ts\" region=\"declarations\">\ndeclarations: [\n  AppComponent,\n  ItemDirective\n],\n\n</code-example>\n<p translation-result=\"on\">現在，你就可以在元件中使用 <code>ItemDirective</code> 了。這個例子中使用的是 <code>AppModule</code>，但是在特性模組中你也可以這麼做。要進一步瞭解指令，參閱<a href=\"guide/attribute-directives\">屬性型指令</a>和<a href=\"guide/structural-directives\">結構型指令</a>。這些也同樣適用於<a href=\"guide/pipes\">管道</a>和元件。</p><p translation-origin=\"off\">Now you could use your <code>ItemDirective</code> in a component.\nThis example uses <code>AppModule</code>, but you'd do it the same way for a feature module.\nFor more about directives, see <a href=\"guide/attribute-directives\">Attribute Directives</a> and <a href=\"guide/structural-directives\">Structural Directives</a>.\nYou'd also use the same technique for <a href=\"guide/pipes\">pipes</a> and components.</p>\n\n<p translation-result=\"on\">記住：元件、指令和管道都只能屬於一個模組。你在應用中也只需要宣告它們一次，因為你還可以透過匯入必要的模組來使用它們。這能節省你的時間，並且幫助你的應用保持精簡。</p><p translation-origin=\"off\">Remember, components, directives, and pipes belong to one module only.\nYou only need to declare them once in your application because you share them by importing the necessary modules.\nThis saves you time and helps keep your application lean.</p>\n\n<p><a id=\"imports\"></a></p>\n<h2 id=\"the-imports-array\" translation-result=\"on\"><code>imports</code> 陣列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-imports-array\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">The <code>imports</code> array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-imports-array\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">模組的 <code>imports</code> 陣列只會出現在 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 元資料物件中。它告訴 Angular 該模組想要正常工作，還需要哪些模組。</p><p translation-origin=\"off\">The module's <code>imports</code> array appears exclusively in the <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> metadata object.\nIt tells Angular about other NgModules that this particular module needs to function properly.</p>\n\n<code-example header=\"src/app/app.module.ts (excerpt)\" path=\"bootstrapping/src/app/app.module.ts\" region=\"imports\">\nimports: [\n  <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n  <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>,\n  <a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a>\n],\n\n</code-example>\n<p translation-result=\"on\">列表中的模組匯出了本模組中的各個元件範本中所參考的各個元件、指令或管道。在這個例子中，當前元件是 <code>AppComponent</code>，它參考了匯出自 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>、<code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> 或 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 的元件、指令或管道。總之，元件的範本中可以參考在當前模組中宣告的或從其它模組中匯入的元件、指令、管道。</p><p translation-origin=\"off\">This list of modules are those that export components, directives, or pipes that component templates in this module reference.\nIn this case, the component is <code>AppComponent</code>, which references components, directives, or pipes in <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>, <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>, or  <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>.\nA component template can reference another component, directive, or pipe when the referenced class is declared in this module, or the class was imported from another module.</p>\n\n<p><a id=\"bootstrap-array\"></a></p>\n<h2 id=\"the-providers-array\" translation-result=\"on\"><code>providers</code> 陣列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-providers-array\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">The <code>providers</code> array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-providers-array\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><code>providers</code> 陣列中列出了該應用所需的服務。當直接把服務列在這裡時，它們是全應用範圍的。當你使用特性模組和延遲載入時，它們是範圍化的。要了解更多，參閱<a href=\"guide/providers\">服務提供者</a>。</p><p translation-origin=\"off\">The providers array is where you list the services the application needs.\nWhen you list services here, they are available app-wide.\nYou can scope them when using feature modules and lazy loading.\nFor more information, see <a href=\"guide/providers\">Providers</a>.</p>\n\n<h2 id=\"the-bootstrap-array\" translation-result=\"on\"><code>bootstrap</code> 陣列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-bootstrap-array\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">The <code>bootstrap</code> array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#the-bootstrap-array\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">應用是透過引導根模組 <code>AppModule</code> 來啟動的，根模組還參考了 <code>entryComponent</code>。此外，引導過程還會建立 <code>bootstrap</code> 陣列中列出的元件，並把它們逐個插入到瀏覽器的 DOM 中。</p><p translation-origin=\"off\">The application launches by bootstrapping the root <code>AppModule</code>, which is also referred to as an <code>entryComponent</code>.\nAmong other things, the bootstrapping process creates the component(s) listed in the <code>bootstrap</code> array and inserts each one into the browser DOM.</p>\n\n<p translation-result=\"on\">每個被引導的元件都是它自己的元件樹的根。插入一個被引導的元件通常觸發一系列元件的建立並形成元件樹。</p><p translation-origin=\"off\">Each bootstrapped component is the base of its own tree of components.\nInserting a bootstrapped component usually triggers a cascade of component creations that fill out that tree.</p>\n\n<p translation-result=\"on\">雖然也可以在宿主頁面中放多個元件，但是大多數應用只有一個元件樹，並且只從一個根元件開始引導。</p><p translation-origin=\"off\">While you can put more than one component tree on a host web page, most applications have only one component tree and bootstrap a single root component.</p>\n\n<p translation-result=\"on\">這個根元件通常叫做 <code>AppComponent</code>，並且位於根模組的 <code>bootstrap</code> 陣列中。</p><p translation-origin=\"off\">This one root component is usually called <code>AppComponent</code> and is in the root module's <code>bootstrap</code> array.</p>\n\n<p translation-result=\"on\">如果你要基於某個 API 的響應來啟動此元件，或者要在一個不與其元件選擇器相匹配的 DOM 節點上裝載 <code>AppComponent</code>，請參見 <code><a href=\"api/core/ApplicationRef#bootstrap\" class=\"code-anchor\">ApplicationRef.bootstrap()</a></code> 的文件。</p><p translation-origin=\"off\">In a situation where you want to bootstrap a component based on an API response,\nor you want to mount the <code>AppComponent</code> in a different DOM node that doesn't match the component selector, please refer to <code><a href=\"api/core/ApplicationRef#bootstrap\" class=\"code-anchor\">ApplicationRef.bootstrap()</a></code> documentation.</p>\n\n<h2 id=\"more-about-angular-modules\" translation-result=\"on\">關於 Angular 模組的更多知識<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#more-about-angular-modules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">More about Angular Modules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/bootstrapping#more-about-angular-modules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要進一步瞭解常見的 NgModules 知識，參閱 <a href=\"guide/frequent-ngmodules\">關於模組的常見問題</a>。</p><p translation-origin=\"off\">For more on NgModules you're likely to see frequently in applications, see <a href=\"guide/frequent-ngmodules\">Frequently Used Modules</a>.</p>\n\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - api/core/DoBootstrap\n - errors/NG0403\n - guide/architecture-modules\n - guide/dynamic-form\n - guide/example-apps-list\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/module-types\n - guide/ngmodule-faq\n - guide/ngmodule-vs-jsmodule\n - guide/ngmodules\n - guide/upgrade-setup\n-->\n<!-- links from this doc:\n - api/common/http/HttpClientModule\n - api/core/ApplicationRef#bootstrap\n - api/core/Directive\n - api/core/NgModule\n - api/forms/FormsModule\n - api/platform-browser/BrowserModule\n - cli\n - guide/attribute-directives\n - guide/bootstrapping#bootstrap-陣列\n - guide/bootstrapping#declarations-陣列\n - guide/bootstrapping#imports-陣列\n - guide/bootstrapping#launching-your-app-with-a-root-module\n - guide/bootstrapping#more-about-angular-modules\n - guide/bootstrapping#prerequisites\n - guide/bootstrapping#providers-陣列\n - guide/bootstrapping#the-bootstrap-array\n - guide/bootstrapping#the-declarations-array\n - guide/bootstrapping#the-imports-array\n - guide/bootstrapping#the-providers-array\n - guide/bootstrapping#using-directives-with-ngmodule\n - guide/bootstrapping#關於-angular-模組的更多知識\n - guide/bootstrapping#前提條件\n - guide/bootstrapping#啟動過程\n - guide/bootstrapping#透過-ngmodule-使用指令\n - guide/frequent-ngmodules\n - guide/glossary#decorator\n - guide/ngmodule-vs-jsmodule\n - guide/pipes\n - guide/providers\n - guide/structural-directives\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/bootstrapping.md?message=docs%3A%20請簡述你的修改...\n-->"}