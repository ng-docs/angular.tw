{"id":"guide/set-document-title","title":"Set the document title","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/aio/aio/content/guide/set-document-title.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <a id=\"top\"></a>\n<h1 id=\"set-the-document-title\" translation-result=\"on\">設定文件標題<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#set-the-document-title\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"set-the-document-title\">Set the document title<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#set-the-document-title\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">你的應用應該能讓瀏覽器標題欄顯示你想讓它顯示的內容。本文會解釋怎麼做。</p><p translation-result=\"on\">參閱<live-example name=\"set-document-title\"></live-example></p><p translation-origin=\"off\">Your app should be able to make the browser title bar say whatever you want it to say.\nThis cookbook explains how to do it.</p>\n\n<p translation-origin=\"off\">See the <live-example name=\"set-document-title\"></live-example>.</p>\n\n<h2 id=\"the-problem-with-title\" translation-result=\"on\"><em>&lt;title&gt;</em>的問題<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#the-problem-with-title\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"the-problem-with-title\">The problem with <em>&lt;title&gt;</em><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#the-problem-with-title\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">顯而易見的方法是把元件的屬性繫結到 HTML 的 <code>&lt;title&gt;</code> 標籤上，像這樣：</p><p translation-origin=\"off\">The obvious approach is to bind a property of the component to the HTML <code>&lt;title&gt;</code> like this:</p>\n\n<code-example format=\"\">\n  &lt;title&gt;{{This_Does_Not_Work}}&lt;/title&gt;\n</code-example>\n<p translation-result=\"on\">抱歉，這樣不行。應用程式的根元件是一個包含在 <code>&lt;body&gt;</code> 標籤裡的元素。該 HTML 的 <code>&lt;title&gt;</code> 在文件的 <code>&lt;head&gt;</code> 元素裡，在 <code>&lt;body&gt;</code> 之外，Angular 的資料繫結無法存取到它。</p><p translation-result=\"on\">可以從瀏覽器獲得 <code>document</code> 物件，並且手動設定標題。但是這樣看起來很髒，而且將無法在瀏覽器之外執行應用程式。</p><p translation-origin=\"off\">Sorry but that won't work.\nThe root component of the application is an element contained within the <code>&lt;body&gt;</code> tag.\nThe HTML <code>&lt;title&gt;</code> is in the document <code>&lt;head&gt;</code>, outside the body, making it inaccessible to Angular data binding.</p>\n\n<p translation-origin=\"off\">You could grab the browser <code>document</code> object and set the title manually.\nThat's dirty and undermines your chances of running the app outside of a browser someday.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">  在瀏覽器外執行應用程式意味著：利用伺服器端預先渲染，為應用程式實現幾乎即時的首次渲染，同時還能支援 SEO(搜尋引擎最佳化)。\n意味著你可以在一個 Web Worker 中執行你的應用程式，透過多執行緒技術增強應用程式的響應性。\n還意味著你可以在 Electron.js 或者 Windows Universal 裡面執行，釋出到桌面環境。</p><p translation-origin=\"off\">  Running your app outside a browser means that you can take advantage of server-side\npre-rendering for near-instant first app render times and for SEO. It means you could run from\ninside a Web Worker to improve your app's responsiveness by using multiple threads. And it\nmeans that you could run your app inside Electron.js or Windows Universal to deliver it to the desktop.</p>\n\n</div>\n<h2 id=\"use-the-title-service\" translation-result=\"on\">使用 <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#use-the-title-service\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"use-the-title-service\">Use the <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> service<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#use-the-title-service\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">幸運的是，Angular 在<em>瀏覽器平台</em>的套件中，提供了一個 <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服務，彌補了這種差異。\n<a href=\"api/platform-browser/Title\">Title</a>服務是一個簡單的類，提供了一個 API，用來獲取和設定當前 HTML 文件的標題。</p><p translation-origin=\"off\">Fortunately, Angular bridges the gap by providing a <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> service as part of the <em>Browser platform</em>.\nThe <a href=\"api/platform-browser/Title\">Title</a> service is a simple class that provides an API\nfor getting and setting the current HTML document title:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"> <code>getTitle(): string</code> —— 獲取當前 HTML 文件的標題。</p><p translation-origin=\"off\"><code>getTitle() : string</code>—Gets the title of the current HTML document.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> <code>setTitle( newTitle: string)</code> —— 設定當前 HTML 文件的標題。</p><p translation-origin=\"off\"><code>setTitle( newTitle : string )</code>—Sets the title of the current HTML document.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">你可以把 <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服務注入到根元件 <code>AppComponent</code>，並暴露出可供繫結的 <code>setTitle</code> 方法讓別人來呼叫該服務：</p><p translation-origin=\"off\">You can inject the <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> service into the root <code>AppComponent</code> and expose a bindable <code>setTitle</code> method that calls it:</p>\n\n<code-example path=\"set-document-title/src/app/app.component.ts\" region=\"class\" header=\"src/app/app.component.ts (class)\">\nexport class AppComponent {\n  public constructor(private titleService: <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>) { }\n\n  public setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n}\n\n</code-example>\n<p translation-result=\"on\">把這個方法繫結到三個 A 標籤，瞧瞧！</p><p translation-origin=\"off\">Bind that method to three anchor tags and voilà!</p>\n\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/set-document-title/set-title-anim.gif\" alt=\"Set title\" width=\"596\" height=\"316\">\n</div>\n<p translation-result=\"on\">這裡是完整的方案(程式碼)。</p><p translation-origin=\"off\">Here's the complete solution:</p>\n\n<code-tabs>\n  <code-pane header=\"src/main.ts\" path=\"set-document-title/src/main.ts\">\nimport { <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>();\n}\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule);\n\n\n</code-pane>\n  <code-pane header=\"src/app/app.module.ts\" path=\"set-document-title/src/app/app.module.ts\">\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a> } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [\n    <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-pane>\n  <code-pane header=\"src/app/app.component.ts\" path=\"set-document-title/src/app/app.component.ts\">\n// Import the native Angular services.\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a> } from '@angular/platform-browser';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  template: `\n    &lt;p&gt;\n      Select a title to set on the current HTML document:\n    &lt;/p&gt;\n\n    &lt;ul&gt;\n      &lt;li&gt;&lt;a (click)=\"setTitle('Good morning!')\"&gt;Good morning&lt;/a&gt;.&lt;/li&gt;\n      &lt;li&gt;&lt;a (click)=\"setTitle('Good afternoon!')\"&gt;Good afternoon&lt;/a&gt;.&lt;/li&gt;\n      &lt;li&gt;&lt;a (click)=\"setTitle('Good evening!')\"&gt;Good evening&lt;/a&gt;.&lt;/li&gt;\n    &lt;/ul&gt;\n  `,\n})\nexport class AppComponent {\n  public constructor(private titleService: <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>) { }\n\n  public setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n}\n\n\n</code-pane>\n</code-tabs>\n<h2 id=\"why-provide-the-title-service-in-bootstrap\" translation-result=\"on\">為什麼要在 <em>bootstrap</em> 裡面提供這個 <em>Title</em> 服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#why-provide-the-title-service-in-bootstrap\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"why-provide-the-title-service-in-bootstrap\">Why provide the <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> service in <code>bootstrap</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/set-document-title#why-provide-the-title-service-in-bootstrap\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你通常會在應用程式的根元件 <code>AppComponent</code> 中提供應用程式級的服務。</p><p translation-result=\"on\">但這裡，要在引導過程中註冊這個 Title 服務，這個位置是為你設定 Angular 執行環境而保留的。</p><p translation-result=\"on\">你的做法正是如此。這裡的 <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服務是 Angular<em>瀏覽器平台</em>的一部分。如果在其它平臺上引導應用程式，就得提供另一個專為那個平台準備的 <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服務。</p><p translation-origin=\"off\">Generally you want to provide application-wide services in the root application component, <code>AppComponent</code>.</p>\n\n<p translation-origin=\"off\">This cookbook recommends registering the title service during bootstrapping,\na location you reserve for configuring the runtime Angular environment.</p>\n\n<p translation-origin=\"off\">That's exactly what you're doing.\nThe <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> service is part of the Angular <em>browser platform</em>.\nIf you bootstrap your application into a different platform,\nyou'll have to provide a different <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> service that understands\nthe concept of a \"document title\" for that specific platform.\nIdeally, the application itself neither knows nor cares about the runtime environment.</p>\n\n\n  \n</div>\n\n\n<!-- links to this doc:\n - guide/example-apps-list\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/NgModule\n - api/core/enableProdMode\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - api/platform-browser/Title\n - guide/set-document-title#set-the-document-title\n - guide/set-document-title#the-problem-with-title\n - guide/set-document-title#use-the-title-service\n - guide/set-document-title#why-provide-the-title-service-in-bootstrap\n - https://github.com/ng-docs/angular-cn/edit/aio/aio/content/guide/set-document-title.md?message=docs%3A%20請簡述你的修改...\n-->"}