{"id":"guide/ngmodules","title":"NgModules","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/ngmodules.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#ngmodules\"><i class=\"material-icons\">link</i></a></h1>\n<p translation-result=\"on\"><strong>NgModules</strong> 用於配置注入器和編譯器，並幫你把那些相關的東西組織在一起。</p><p translation-origin=\"off\"><strong>NgModules</strong> configure the injector and the compiler and help organize related things together.</p>\n\n<p translation-result=\"on\">NgModule 是一個帶有 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 裝飾器的類別。<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的引數是一個元資料物件，用於描述如何編譯元件的範本，以及如何在執行時建立注入器。它會標出該模組自己的元件、指令和管道，透過 <code>exports</code> 屬性公開其中的一部分，以便外部元件使用它們。<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 還能把一些服務提供者新增到應用的依賴注入器中。</p><p translation-origin=\"off\">An NgModule is a class marked by the <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> decorator.\n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> takes a metadata object that describes how to compile a component's template and how to create an injector at runtime.\nIt identifies the module's own components, directives, and pipes, making some of them public, through the <code>exports</code> property, so that external components can use them.\n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> can also add service providers to the application dependency injectors.</p>\n\n<p translation-result=\"on\">要想找一個涉及本章所講的全部技術的範例，參閱 <live-example></live-example>。\n要想得到針對單項技術的一些講解，參閱本目錄下的相關頁面。</p><p translation-origin=\"off\">For an example application showcasing all the techniques that NgModules related pages cover, see the <live-example></live-example>.\nFor explanations on the individual techniques, visit the relevant NgModule pages under the NgModules section.</p>\n\n<h2 id=\"angular-modularity\" translation-result=\"on\">Angular 模組化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#angular-modularity\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Angular modularity<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#angular-modularity\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">模組是組織應用和使用外部庫擴充應用的最佳途徑。</p><p translation-origin=\"off\">Modules are a great way to organize an application and extend it with capabilities from external libraries.</p>\n\n<p translation-result=\"on\">Angular 自己的函式庫都是 NgModule，比如 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>、<code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 和 <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code>。很多第三方函式庫也是 NgModule，比如 <a href=\"https://material.angular.cn\">Material Design</a>、 <a href=\"http://ionicframework.com\">Ionic</a> 和 <a href=\"https://github.com/angular/angularfire2\">AngularFire2</a>。</p><p translation-origin=\"off\">Angular libraries are NgModules, such as <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>, <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>, and <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code>.\nMany third-party libraries are available as NgModules such as <a href=\"https://material.angular.io\">Material Design</a>, <a href=\"https://ionicframework.com\">Ionic</a>, and <a href=\"https://github.com/angular/angularfire2\">AngularFire2</a>.</p>\n\n<p translation-result=\"on\">NgModule 把元件、指令和管道打包成內聚的功能塊，每個模組聚焦於一個特性區域、業務領域、工作流或通用工具。</p><p translation-origin=\"off\">NgModules consolidate components, directives, and pipes into cohesive blocks of functionality, each focused on a feature area, application business domain, workflow, or common collection of utilities.</p>\n\n<p translation-result=\"on\">模組還可以把服務加到應用中。這些服務可能是內部開發的（比如你自己寫的），或者來自外部的（比如 Angular 的路由和 HTTP 客戶端）。</p><p translation-origin=\"off\">Modules can also add services to the application.\nSuch services might be internally developed, like something you'd develop yourself or come from outside sources, such as the Angular router and HTTP client.</p>\n\n<p translation-result=\"on\">模組可以在應用啟動時急性載入，也可以由路由器進行非同步的延遲載入。</p><p translation-origin=\"off\">Modules can be loaded eagerly when the application starts or lazy loaded asynchronously by the router.</p>\n\n<p translation-result=\"on\">NgModule 的元資料會做這些：</p><p translation-origin=\"off\">NgModule metadata does the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">宣告某些元件、指令和管道屬於這個模組</p><p translation-origin=\"off\">Declares which components, directives, and pipes belong to the module</p>\n\n</li>\n<li>\n<p translation-result=\"on\">公開其中的部分元件、指令和管道，以便其它模組中的元件範本中可以使用它們</p><p translation-origin=\"off\">Makes some of those components, directives, and pipes public so that other module's component templates can use them</p>\n\n</li>\n<li>\n<p translation-result=\"on\">匯入其它帶有元件、指令和管道的模組，這些模組中的元件都是本模組所需的</p><p translation-origin=\"off\">Imports other modules with the components, directives, and pipes that components in the current module need</p>\n\n</li>\n<li>\n<p translation-result=\"on\">提供一些供應用中的其它元件使用的服務</p><p translation-origin=\"off\">Provides services that other application components can use</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">每個 Angular 應用都至少有一個模組，也就是根模組。你可以<a href=\"guide/bootstrapping\">引導</a>那個模組，以啟動該應用。</p><p translation-origin=\"off\">Every Angular application has at least one module, the root module.\nYou <a href=\"guide/bootstrapping\">bootstrap</a> that module to launch the application.</p>\n\n<p translation-result=\"on\">對於那些只有少量元件的簡單應用，根模組就是你所需的一切。隨著應用的成長，你要把這個根模組重構成一些<a href=\"guide/feature-modules\">特性模組</a>，它們代表一組密切相關的功能集。然後你再把這些模組匯入到根模組中。</p><p translation-origin=\"off\">The root module is all you need in an application with few components.\nAs the application grows, you refactor the root module into <a href=\"guide/feature-modules\">feature modules</a> that represent collections of related functionality.\nYou then import these modules into the root module.</p>\n\n<h2 id=\"the-basic-ngmodule\" translation-result=\"on\">基本的模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#the-basic-ngmodule\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">The basic NgModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#the-basic-ngmodule\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><a href=\"cli\">Angular CLI</a> 在建立新應用時會產生如下基本模組 <code>AppModule</code>。</p><p translation-origin=\"off\">The <a href=\"cli\">Angular CLI</a> generates the following basic <code>AppModule</code> when creating a new application.</p>\n\n<code-example path=\"ngmodules/src/app/app.module.1.ts\" header=\"src/app/app.module.ts (default AppModule)\">\n// imports\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> decorator with its metadata\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [AppComponent],\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n</code-example>\n<p translation-result=\"on\">檔案的頂部是一些匯入陳述式。接下來是你配置 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的地方，用於規定哪些元件和指令屬於它（<code>declarations</code>），以及它使用了哪些其它模組（<code>imports</code>）。如果要進一步瞭解 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的結構，參閱<a href=\"guide/bootstrapping\">引導</a>。</p><p translation-origin=\"off\">At the top are the import statements.\nThe next section is where you configure the <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> by stating what components and directives belong to it (<code>declarations</code>) as well as which other modules it uses (<code>imports</code>).\nFor more information on the structure of an <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>, be sure to read <a href=\"guide/bootstrapping\">Bootstrapping</a>.</p>\n\n<h2 id=\"more-on-ngmodules\" translation-result=\"on\">關於 NgModule 的更多知識<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">More on NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可能還對下列內容感興趣：</p><p translation-origin=\"off\">You may also be interested in the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/feature-modules\">特性模組</a></p><p translation-origin=\"off\"><a href=\"guide/feature-modules\">Feature Modules</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/providers\">服務提供者</a></p><p translation-origin=\"off\"><a href=\"guide/providers\">Providers</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/module-types\">NgModule 的分類</a></p><p translation-origin=\"off\"><a href=\"guide/module-types\">Types of NgModules</a></p>\n\n</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/ajs-quick-reference\n - guide/aot-compiler\n - guide/architecture-modules\n - guide/architecture-next-steps\n - guide/example-apps-list\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/ngmodule-vs-jsmodule\n - guide/pipes\n - guide/pipes-custom-data-trans\n - guide/testing-services\n - guide/upgrade\n - tutorial/tour-of-heroes/toh-pt1\n-->\n<!-- links from this doc:\n - api/common/http/HttpClientModule\n - api/core/NgModule\n - api/forms/FormsModule\n - api/platform-browser/BrowserModule\n - api/router/RouterModule\n - cli\n - guide/bootstrapping\n - guide/feature-modules\n - guide/module-types\n - guide/ngmodules#angular-modularity\n - guide/ngmodules#angular-模組化\n - guide/ngmodules#more-on-ngmodules\n - guide/ngmodules#ngmodules\n - guide/ngmodules#the-basic-ngmodule\n - guide/ngmodules#關於-ngmodule-的更多知識\n - guide/ngmodules#基本的模組\n - guide/providers\n - http://ionicframework.com\n - https://github.com/angular/angularfire2\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/ngmodules.md?message=docs%3A%20請簡述你的修改...\n - https://ionicframework.com\n - https://material.angular.cn\n - https://material.angular.io\n-->"}