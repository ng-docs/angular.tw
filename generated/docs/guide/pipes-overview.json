{"id":"guide/pipes-overview","title":"Understanding Pipes","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipes-overview.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"understanding-pipes\" translation-result=\"on\">瞭解管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#understanding-pipes\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Understanding Pipes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#understanding-pipes\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">使用<a href=\"guide/glossary#pipe\" title=\"管道的定義\">管道</a>來轉換字串、貨幣金額、日期和其他資料以進行顯示。</p><p translation-origin=\"off\">Use <a href=\"guide/glossary#pipe\" title=\"Definition of a pipe\">pipes</a> to transform strings, currency amounts, dates, and other data for display.</p>\n\n<h2 id=\"what-is-a-pipe\" translation-result=\"on\">什麼是管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#what-is-a-pipe\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What is a pipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#what-is-a-pipe\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">管道是在<a href=\"guide/glossary#template-expression\" title=\"範本表示式的定義\">範本表示式</a>中使用的簡單函式，用於接受輸入值並返回轉換後的值。管道很有用，因為你可以在整個應用程式中使用它們，同時每個管道只宣告一次。例如，你可以用管道將日期顯示為<strong>1988 年 4 月 15 日，</strong>而不是原始字串格式。</p><p translation-origin=\"off\">Pipes are simple functions to use in <a href=\"guide/glossary#template-expression\" title=\"Definition of template expression\">template expressions</a> to accept an input value and return a transformed value. Pipes are useful because you can use them throughout your application, while only declaring each pipe once.\nFor example, you would use a pipe to show a date as <strong>April 15, 1988</strong> rather than the raw string format.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">對於本主題中使用的範例應用程式，請參閱<live-example></live-example>.</p><p translation-origin=\"off\">For the sample application used in this topic, see the <live-example name=\"pipes\"></live-example>.</p>\n\n</div>\n<h2 id=\"built-in-pipes\" translation-result=\"on\">內建管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#built-in-pipes\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Built-in pipes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#built-in-pipes\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular 為典型的資料轉換提供了內建的管道，包括國際化的轉換（i18n），它使用本地化資訊來格式化資料。資料格式化常用的內建管道如下：</p><p translation-origin=\"off\">Angular provides built-in pipes for typical data transformations, including transformations for internationalization (i18n), which use locale information to format data.\nThe following are commonly used built-in pipes for data formatting:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/DatePipe\"><code>DatePipe</code></a>：根據本地環境中的規則格式化日期值。</p><p translation-origin=\"off\"><a href=\"api/common/DatePipe\"><code>DatePipe</code></a>: Formats a date value according to locale rules.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/UpperCasePipe\"><code>UpperCasePipe</code></a>：把文字全部轉換成大寫。</p><p translation-origin=\"off\"><a href=\"api/common/UpperCasePipe\"><code>UpperCasePipe</code></a>: Transforms text to all upper case.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/LowerCasePipe\"><code>LowerCasePipe</code></a>：把文字全部轉換成小寫。</p><p translation-origin=\"off\"><a href=\"api/common/LowerCasePipe\"><code>LowerCasePipe</code></a>: Transforms text to all lower case.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/CurrencyPipe\"><code>CurrencyPipe</code></a>：把數字轉換成貨幣字串，根據本地環境中的規則進行格式化。</p><p translation-origin=\"off\"><a href=\"api/common/CurrencyPipe\"><code>CurrencyPipe</code></a>: Transforms a number to a currency string, formatted according to locale rules.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/DecimalPipe\"><code>DecimalPipe</code></a>：把數字轉換成帶小數點的字串，根據本地環境中的規則進行格式化。</p><p translation-origin=\"off\"><a href=\"api/common/DecimalPipe\"><code>DecimalPipe</code></a>: Transforms a number into a string with a decimal point, formatted according to locale rules.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/PercentPipe\"><code>PercentPipe</code></a>：把數字轉換成百分比字串，根據本地環境中的規則進行格式化。</p><p translation-origin=\"off\"><a href=\"api/common/PercentPipe\"><code>PercentPipe</code></a>: Transforms a number to a percentage string, formatted according to locale rules.</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<ul>\n<li>\n<p translation-result=\"on\">關於內建管道的完整列表，請參閱<a href=\"api/common#pipes\" title=\"管道 API 參考總結\">管道 API 文件</a>。</p><p translation-origin=\"off\">For a complete list of built-in pipes, see the <a href=\"api/common#pipes\" title=\"Pipes API reference summary\">pipes API documentation</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">要了解有關使用管道進行國際化 (i18n) 工作的更多資訊，請參閱<a href=\"guide/i18n-common-format-data-locale\" title=\"Format data based on locale | Angular\">根據區域設定格式化資料</a>。</p><p translation-origin=\"off\">To learn more about using pipes for internationalization (i18n) efforts, see <a href=\"guide/i18n-common-format-data-locale\" title=\"Format data based on locale | Angular\">formatting data based on locale</a>.</p>\n\n</li>\n</ul>\n</div>\n<p translation-result=\"on\">你還可以建立管道來封裝自訂轉換，並在範本表示式中使用自訂管道。</p><p translation-origin=\"off\">Create pipes to encapsulate custom transformations and use your custom pipes in template expressions.</p>\n\n<h2 id=\"pipes-and-precedence\" translation-result=\"on\">管道的優先順序<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#pipes-and-precedence\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Pipes and precedence<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#pipes-and-precedence\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">管道運運算元要比三目運算子（<code>?:</code>）的優先順序高，這意味著 <code>a ? b : c | x</code> 會被解析成 <code>a ? b : (c | x)</code>。</p><p translation-origin=\"off\">The pipe operator has a higher precedence than the ternary operator (<code>?:</code>), which means <code>a ? b : c | x</code> is parsed as <code>a ? b : (c | x)</code>.\nThe pipe operator cannot be used without parentheses in the first and second operands of <code>?:</code>.</p>\n\n<p translation-result=\"on\">由於這種優先順序設定，如果你要用管道處理三目元算符的結果，就要把整個表示式包裹在括號中，比如 <code>(a ? b : c) | x</code>。</p><p translation-origin=\"off\">Due to precedence, if you want a pipe to apply to the result of a ternary, wrap the entire expression in parentheses; for example, <code>(a ? b : c) | x</code>.</p>\n\n<code-example path=\"pipes/src/app/precedence.component.html\" region=\"precedence\" header=\"src/app/precedence.component.html\">\n&lt;!-- use parentheses in the third operand so the pipe applies to the whole expression --&gt;\n{{ (true ? 'true' : 'false') | uppercase }}\n\n</code-example>\n<!-- links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：4/1/2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common#pipes\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/LowerCasePipe\n - api/common/PercentPipe\n - api/common/UpperCasePipe\n - guide/glossary#pipe\n - guide/glossary#template-expression\n - guide/i18n-common-format-data-locale\n - guide/pipes-overview#built-in-pipes\n - guide/pipes-overview#pipes-and-precedence\n - guide/pipes-overview#understanding-pipes\n - guide/pipes-overview#what-is-a-pipe\n - guide/pipes-overview#瞭解管道\n - guide/pipes-overview#什麼是管道\n - guide/pipes-overview#內建管道\n - guide/pipes-overview#管道的優先順序\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipes-overview.md?message=docs%3A%20請簡述你的修改...\n-->"}