{"id":"guide/web-worker","title":"Background processing using web workers","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/web-worker.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"background-processing-using-web-workers\" translation-result=\"on\">用 Web Worker 處理後臺處理序<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/web-worker#background-processing-using-web-workers\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Background processing using web workers<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/web-worker#background-processing-using-web-workers\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\"><a href=\"https://developer.mozilla.org/docs/Web/API/Web_Workers_API\">Web Worker</a>允許你在後台執行緒中執行 CPU 密集型計算，解放主執行緒以更新使用者介面。如果你發現你的應用會進行很多計算，比如產生 CAD 圖紙或進行繁重的幾何計算，那麼使用 Web Worker 可以幫助你提高應用的效能。</p><p translation-origin=\"off\"><a href=\"https://developer.mozilla.org/docs/Web/API/Web_Workers_API\">Web workers</a> lets you run CPU-intensive computations in a background thread, freeing the main thread to update the user interface.\nApplication's performing a lot of computations, like generating Computer-Aided Design (CAD) drawings or doing heavy geometric calculations, can use web workers to increase performance.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">CLI 不支援在 Web Worker 中執行 Angular。</p><p translation-origin=\"off\">The Angular CLI does not support running itself in a web worker.</p>\n\n</div>\n<h2 id=\"adding-a-web-worker\" translation-result=\"on\">新增一個 Web Worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/web-worker#adding-a-web-worker\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Adding a web worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/web-worker#adding-a-web-worker\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要把 Web Worker 新增到現有專案中，請使用 Angular CLI <code>ng generate</code> 命令。</p><p translation-origin=\"off\">To add a web worker to an existing project, use the Angular CLI <code>ng generate</code> command.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng generate web-worker &lt;location&gt;\n\n</code-example>\n<p translation-result=\"on\">你可以在應用的任何位置新增 Web Worker。比如，要把一個 Web Worker 新增到根元件 <code>src/app/app.component.ts</code>，請執行如下命令。</p><p translation-origin=\"off\">You can add a web worker anywhere in your application.\nFor example, to add a web worker to the root component, <code>src/app/app.component.ts</code>, run the following command.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng generate web-worker app\n\n</code-example>\n<p translation-result=\"on\">該命令會執行以下操作。</p><p translation-origin=\"off\">The command performs the following actions.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">把你的專案配置為使用 Web Worker，如果還沒有的話。</p><p translation-origin=\"off\">Configures your project to use web workers, if it isn't already.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">把如下腳手架程式碼新增到 <code>src/app/app.worker.ts</code> 以接收訊息。</p><p translation-origin=\"off\">Adds the following scaffold code to <code>src/app/app.worker.ts</code> to  receive messages.</p>\n\n<code-example language=\"typescript\" header=\"src/app/app.worker.ts\">\n\naddEventListener('message', ({ data }) =&gt; {\n  const response = `worker response to ${data}`;\n  postMessage(response);\n});\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">把如下腳手架程式碼新增到 <code>src/app/app.component.ts</code> 以使用這個 Worker。</p><p translation-origin=\"off\">Adds the following scaffold code to <code>src/app/app.component.ts</code> to use the worker.</p>\n\n<code-example language=\"typescript\" header=\"src/app/app.component.ts\">\n\nif (typeof Worker !== 'undefined') {\n  // Create a new\n  const worker = new Worker(new URL('./app.worker', import.meta.url));\n  worker.onmessage = ({ data }) =&gt; {\n    console.log(`page got message: ${data}`);\n  };\n  worker.postMessage('hello');\n} else {\n  // Web workers are not supported in this environment.\n  // You should add a fallback so that your program still executes correctly.\n}\n\n</code-example>\n</li>\n</ol>\n<p translation-result=\"on\">產生這個初始腳手架之後，你必須把程式碼重構成向這個 Worker 傳送訊息和從 Worker 接收訊息，以便使用 Web Worker。</p><p translation-origin=\"off\">After you create this initial scaffold, you must refactor your code to use the web worker by sending messages to and from the worker.</p>\n\n<div class=\"alert is-important\">\n<p translation-result=\"on\">某些環境或平台（比如<a href=\"guide/universal\">伺服器端渲染</a>中使用的 <code>@angular/platform-server</code> 不支援 Web Worker。為了確保你的應用能夠在這些環境中工作，你必須提供一個回退機制來執行本來要由這個 Worker 執行的計算。</p><p translation-origin=\"off\">Some environments or platforms, such as <code>@angular/platform-server</code> used in <a href=\"guide/universal\">Server-side Rendering</a>, don't support web workers.\nTo ensure that your application works in these environments, you must provide a fallback mechanism to perform the computations that the worker would otherwise perform.</p>\n\n</div>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/architecture-next-steps\n - guide/developer-guide-overview\n-->\n<!-- links from this doc:\n - guide/universal\n - guide/web-worker#adding-a-web-worker\n - guide/web-worker#background-processing-using-web-workers\n - guide/web-worker#新增一個-web-worker\n - guide/web-worker#用-web-worker-處理後臺處理序\n - https://developer.mozilla.org/docs/Web/API/Web_Workers_API\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/web-worker.md?message=docs%3A%20請簡述你的修改...\n-->"}