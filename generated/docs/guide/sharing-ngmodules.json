{"id":"guide/sharing-ngmodules","title":"Sharing modules","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/sharing-ngmodules.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"sharing-modules\" translation-result=\"on\">共享特性模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/sharing-ngmodules#sharing-modules\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Sharing modules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/sharing-ngmodules#sharing-modules\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">建立共享模組能讓你更好地組織和梳理程式碼。你可以把常用的指令、管道和元件放進一個模組中，然後在應用中其它需要這些的地方匯入該模組。</p><p translation-origin=\"off\">Creating shared modules allows you to organize and streamline your code.\nYou can put commonly used directives, pipes, and components into one module and then import just that module wherever you need it in other parts of your application.</p>\n\n<p translation-result=\"on\">想象某個應用有下列模組：</p><p translation-origin=\"off\">Consider the following module from an imaginary app:</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport { <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> } from '@angular/common';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> } from '@angular/forms';\nimport { CustomerComponent } from './customer.component';\nimport { NewItemDirective } from './new-item.directive';\nimport { OrdersPipe } from './orders.pipe';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n imports:      [ <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> ],\n declarations: [ CustomerComponent, NewItemDirective, OrdersPipe ],\n exports:      [ CustomerComponent, NewItemDirective, OrdersPipe,\n                 <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a>, <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> ]\n})\nexport class SharedModule { }\n\n</code-example>\n<p translation-result=\"on\">請注意以下事項：</p><p translation-origin=\"off\">Notice the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">它匯入了 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>，因為該模組需要一些常用指令。</p><p translation-origin=\"off\">It imports the <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> because the module's component needs common directives</p>\n\n</li>\n<li>\n<p translation-result=\"on\">它宣告並匯出了一些工具性的管道、指令和元件類別。</p><p translation-origin=\"off\">It declares and exports the utility pipe, directive, and component classes</p>\n\n</li>\n<li>\n<p translation-result=\"on\">它重新匯出了 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 和 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code></p><p translation-origin=\"off\">It re-exports the <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> and <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code></p>\n\n</li>\n</ul>\n<p translation-result=\"on\">透過重新匯出 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 和 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>，任何匯入了這個 <code>SharedModule</code> 的其它模組，就都可以存取來自 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 的 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> 和 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code> 等指令了，也可以繫結到來自 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> 中的 <code>[(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]</code> 的屬性了。</p><p translation-origin=\"off\">By re-exporting <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> and <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>, any other module that imports this <code>SharedModule</code>, gets access to directives like <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> and <code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code> from <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> and can bind to component properties with <code>[(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]</code>, a directive in the <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>.</p>\n\n<p translation-result=\"on\">即使 <code>SharedModule</code> 中宣告的元件沒有繫結過 <code>[(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]</code>，而且 <code>SharedModule</code> 也不需要匯入 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>，<code>SharedModule</code> 仍然可以匯出 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>，而不必把它列在 <code>imports</code> 中。這種方式下，你可以讓其它模組也能存取 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>，而不用直接在自己的 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 裝飾器中匯入它。</p><p translation-origin=\"off\">Even though the components declared by <code>SharedModule</code> might not bind with <code>[(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]</code> and there may be no need for <code>SharedModule</code> to import <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>, <code>SharedModule</code> can still export <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> without listing it among its <code>imports</code>.\nThis way, you can give other modules access to <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> without having to import it directly into the <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> decorator.</p>\n\n<h2 id=\"more-on-ngmodules\" translation-result=\"on\">關於 NgModule 的更多知識<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/sharing-ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">More on NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/sharing-ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可能還對下列內容感興趣：</p><p translation-origin=\"off\">You may also be interested in the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/providers\">服務提供者</a></p><p translation-origin=\"off\"><a href=\"guide/providers\">Providers</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/module-types\">特性模組的分類</a></p><p translation-origin=\"off\"><a href=\"guide/module-types\">Types of Feature Modules</a></p>\n\n</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - errors/NG0301\n - guide/module-types\n - guide/singleton-services\n-->\n<!-- links from this doc:\n - api/common/CommonModule\n - api/common/NgFor\n - api/common/NgIf\n - api/core/NgModule\n - api/forms/FormsModule\n - api/forms/NgModel\n - guide/module-types\n - guide/providers\n - guide/sharing-ngmodules#more-on-ngmodules\n - guide/sharing-ngmodules#sharing-modules\n - guide/sharing-ngmodules#共享特性模組\n - guide/sharing-ngmodules#關於-ngmodule-的更多知識\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/sharing-ngmodules.md?message=docs%3A%20請簡述你的修改...\n-->"}