{"id":"guide/module-types","title":"Guidelines for creating NgModules","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/module-types.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"guidelines-for-creating-ngmodules\" translation-result=\"on\">模組（NgModule）建立指南<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#guidelines-for-creating-ngmodules\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Guidelines for creating NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#guidelines-for-creating-ngmodules\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本主題提供了一個概念性的概述，講的是你可以建立不同類別的<a href=\"guide/glossary#ngmodule\" title=\"NgModule 的定義\">模組</a> 使用模組化結構來組織程式碼。這些類別並不是一成不變的，而是建議性的。你可能想為其他目的建立模組，或者把其中某些類別的特徵結合在一起。</p><p translation-origin=\"off\">This topic provides a conceptual overview of the different categories of <a href=\"guide/glossary#ngmodule\" title=\"Definition of NgModule\">NgModules</a> you can create in order to organize your code in a modular structure.\nThese categories are not cast in stone —they are suggestions.\nYou may want to create NgModules for other purposes, or combine the characteristics of some of these categories.</p>\n\n<p translation-result=\"on\">模組是組織應用的好辦法，可以讓與特定功能或特性有關的程式碼與其他程式碼分開。可以使用模組把<a href=\"guide/glossary#component\" title=\"元件的定義\">元件</a>，<a href=\"guide/glossary#directive\" title=\"指令的定義\">指令</a>和<a href=\"guide/glossary#pipe\" title=\"管子的定義）\">管道</a>整合成一些內聚的程式碼塊。專注於某項功能或業務領域、工作流程或導航流程、通用工具集，或者一個或多個<a href=\"guide/glossary#service\" title=\"服務定義\">服務</a><a href=\"guide/glossary#provider\" title=\"提供者的定義\">提供者</a>。</p><p translation-origin=\"off\">NgModules are a great way to organize an application and keep code related to a specific functionality or feature separate from other code.\nUse NgModules to consolidate <a href=\"guide/glossary#component\" title=\"Definition of component\">components</a>, <a href=\"guide/glossary#directive\" title=\"Definition of directive\">directives</a>, and <a href=\"guide/glossary#pipe\" title=\"Definition of pipe\">pipes</a> into cohesive blocks of functionality.\nFocus each block on a feature or business domain, a workflow or navigation flow, a common collection of utilities, or one or more <a href=\"guide/glossary#provider\" title=\"Definition of provider\">providers</a> for <a href=\"guide/glossary#service\" title=\"Definition of service\">services</a>.</p>\n\n<p translation-result=\"on\">關於 Angular 模組的更多資訊，請參閱<a href=\"guide/ngmodules\" title=\"使用 Angular 模組整理你的應用\">使用模組組織你的應用</a>。</p><p translation-origin=\"off\">For more about NgModules, see <a href=\"guide/ngmodules\" title=\"Organizing your app with NgModules\">Organizing your app with NgModules</a>.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">要獲得模組相關主題中使用的範例應用，參閱<live-example name=\"ngmodules\"></live-example>。</p><p translation-origin=\"off\">For the example application used in NgModules-related topics, see the <live-example name=\"ngmodules\"></live-example>.</p>\n\n</div>\n<h2 id=\"summary-of-ngmodule-categories\" translation-result=\"on\">模組類別彙總<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#summary-of-ngmodule-categories\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Summary of NgModule categories<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#summary-of-ngmodule-categories\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">所有的應用都是從<a href=\"guide/bootstrapping\" title=\"用 NgModule 根啟動一款應用\">引導一個根模組</a>開始的。你可以按照自己喜歡的方式組織其它模組。</p><p translation-origin=\"off\">All applications start by <a href=\"guide/bootstrapping\" title=\"Launching an app with a root NgModule\">bootstrapping a root NgModule</a>.\nYou can organize your other NgModules any way you want.</p>\n\n<p translation-result=\"on\">本主題為下列常見模組類別提供了一些指導：</p><p translation-origin=\"off\">This topic provides some guidelines for the following general categories of NgModules:</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">分類</nt-wrapper><nt-wrapper translation-origin=\"off\">Category</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">詳情</nt-wrapper><nt-wrapper translation-origin=\"off\">Details</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><a href=\"guide/module-types#domain\">Domain</a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">圍繞特性、業務領域或使用者體驗進行組織。</nt-wrapper><nt-wrapper translation-origin=\"off\">Is organized around a feature, business domain, or user experience.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"guide/module-types#routed\">Routed</a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">模組的最上層元件充當<a href=\"guide/glossary#router\" title=\"路由器的定義\">路由器</a>存取這部分路由時的目的地。</nt-wrapper><nt-wrapper translation-origin=\"off\">Is the top component of the NgModule. Acts as the destination of a <a href=\"guide/glossary#router\" title=\"Definition of router\">router</a> navigation route.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"guide/module-types#routing\">Routing</a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由配置模組為另一個模組提供路由配置。</nt-wrapper><nt-wrapper translation-origin=\"off\">Provides the routing configuration for another NgModule.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"guide/module-types#service\">Service</a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">服務模組提供實用服務，比如資料存取和訊息傳遞。</nt-wrapper><nt-wrapper translation-origin=\"off\">Provides utility services such as data access and messaging.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"guide/module-types#widget\">Widget</a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">小部件模組可以為其它模組提供某些元件、指令或管道。</nt-wrapper><nt-wrapper translation-origin=\"off\">Makes a component, directive, or pipe available to other NgModules.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"guide/module-types#shared\">Shared</a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">共享模組可以為其它的模組提供元件，指令和管道的集合。</nt-wrapper><nt-wrapper translation-origin=\"off\">Makes a set of components, directives, and pipes available to other NgModules.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p translation-result=\"on\">下表總結了每個類別的主要特性。</p><p translation-origin=\"off\">The following table summarizes the key characteristics of each category.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">模組</nt-wrapper><nt-wrapper translation-origin=\"off\">NgModule</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">可宣告物件</nt-wrapper><nt-wrapper translation-origin=\"off\">Declarations</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">提供者</nt-wrapper><nt-wrapper translation-origin=\"off\">Providers</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">匯出</nt-wrapper><nt-wrapper translation-origin=\"off\">Exports</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">被誰匯入</nt-wrapper><nt-wrapper translation-origin=\"off\">Imported by</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">領域模組</nt-wrapper><nt-wrapper translation-origin=\"off\">Domain</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">罕見</nt-wrapper><nt-wrapper translation-origin=\"off\">Rare</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">最上層元件</nt-wrapper><nt-wrapper translation-origin=\"off\">Top component</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">其它領域 <code>AppModule</code></nt-wrapper><nt-wrapper translation-origin=\"off\">Another domain, <code>AppModule</code></nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">帶路由的模組</nt-wrapper><nt-wrapper translation-origin=\"off\">Routed</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">罕見</nt-wrapper><nt-wrapper translation-origin=\"off\">Rare</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">否</nt-wrapper><nt-wrapper translation-origin=\"off\">No</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">無</nt-wrapper><nt-wrapper translation-origin=\"off\">None</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由</nt-wrapper><nt-wrapper translation-origin=\"off\">Routing</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">否</nt-wrapper><nt-wrapper translation-origin=\"off\">No</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是 （路由守衛）</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes (Guards)</nt-wrapper></td>\n<td align=\"left\">RouterModule</td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">其它領域模組（為獲取路由定義）</nt-wrapper><nt-wrapper translation-origin=\"off\">Another domain (for routing)</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">服務模組</nt-wrapper><nt-wrapper translation-origin=\"off\">Service</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">否</nt-wrapper><nt-wrapper translation-origin=\"off\">No</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">否</nt-wrapper><nt-wrapper translation-origin=\"off\">No</nt-wrapper></td>\n<td align=\"left\"><code>AppModule</code></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">小部件模組</nt-wrapper><nt-wrapper translation-origin=\"off\">Widget</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">罕見</nt-wrapper><nt-wrapper translation-origin=\"off\">Rare</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">其它領域模組</nt-wrapper><nt-wrapper translation-origin=\"off\">Another domain</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">共享模組</nt-wrapper><nt-wrapper translation-origin=\"off\">Shared</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">否</nt-wrapper><nt-wrapper translation-origin=\"off\">No</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">是</nt-wrapper><nt-wrapper translation-origin=\"off\">Yes</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">其它領域模組</nt-wrapper><nt-wrapper translation-origin=\"off\">Another domain</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p><a id=\"domain\"></a></p>\n<h2 id=\"domain-ngmodules\" translation-result=\"on\">領域模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#domain-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Domain NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#domain-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用領域模組來提供專屬於特定功能或應用領域的介面，比如編輯客戶或下單。例子之一是 <live-example name=\"ngmodules\"></live-example> 中的 <code>ContactModule</code>。</p><p translation-origin=\"off\">Use a domain NgModule to deliver a user experience dedicated to a particular feature or application domain, such as editing a customer or placing an order.\nOne example is <code>ContactModule</code> in the <live-example name=\"ngmodules\"></live-example>.</p>\n\n<p translation-result=\"on\">領域模組用來組織與特定功能有關的程式碼，裡面包含構成此功能的所有元件、路由和範本。領域模組中的最上層元件是該特性或領域的根，是你要匯出的唯一元件。各種私有的支撐子元件都是它的後代。</p><p translation-origin=\"off\">A domain NgModule organizes the code related to a certain function, containing all of the components, routing, and templates that make up the function.\nYour top component in the domain NgModule acts as the feature or domain's root, and is the only component you export.\nPrivate supporting subcomponents descend from it.</p>\n\n<p translation-result=\"on\">領域模組要匯入到另一個模組中一次並且只能一次，比如一個領域模組，或者一個只包含少量模組的應用的根模組（<code>AppModule</code>）中。</p><p translation-origin=\"off\">Import a domain NgModule exactly once into another NgModule, such as a domain NgModule, or into the root NgModule (<code>AppModule</code>) of an application that contains only a few NgModules.</p>\n\n<p translation-result=\"on\">領域模組主要由可宣告物件組成，很少會在此提供服務。如果一定要提供，那麼這些服務的生命週期應和該模組的生命週期一致。</p><p translation-origin=\"off\">Domain NgModules consist mostly of declarations.\nYou rarely include providers.\nIf you do, the lifetime of the provided services should be the same as the lifetime of the NgModule.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">關於生命週期的詳細資訊，請參閱<a href=\"guide/lifecycle-hooks\" title=\"進入元件的生命週期\">“元件生命週期鉤子”</a>。</p><p translation-origin=\"off\">For more information about lifecycles, see <a href=\"guide/lifecycle-hooks\" title=\"Hooking into the component lifecycle\">Hooking into the component lifecycle</a>.</p>\n\n</div>\n<p><a id=\"routed\"></a></p>\n<h2 id=\"routed-ngmodules\" translation-result=\"on\">帶路由的模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#routed-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Routed NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#routed-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">所有<a href=\"guide/lazy-loading-ngmodules\" title=\"懶惰載入一個 NgModule\">延遲載入模組</a>都要用帶路由的模組。使用該模組的最上層元件作為路由器導航路由的目標。帶路由的模組不會匯出任何內容，因為它們的元件永遠不會出現在外部元件的範本中。</p><p translation-origin=\"off\">Use a routed NgModule for all <a href=\"guide/lazy-loading-ngmodules\" title=\"Lazy-loading an NgModule\">lazy-loaded NgModules</a>.\nUse the top component of the NgModule as the destination of a router navigation route.\nRouted NgModules don't export anything because their components never appear in the template of an external component.</p>\n\n<p translation-result=\"on\">不要把延遲載入的帶路由的模組匯入到另一個模組中，因為這會觸發一個急性載入，從而破壞了延遲載入它的目的。</p><p translation-origin=\"off\">Don't import a lazy-loaded routed NgModule into another NgModule, as this would trigger an eager load, defeating the purpose of lazy loading.</p>\n\n<p translation-result=\"on\">帶路由的模組很少有提供者，因為你只在需要的時候載入帶路由的模組（比如透過路由導航過來時）。<code>provider</code> 陣列中列出的服務不可用，因為根注入器不可能預先知道延遲載入的模組。如果你包含了提供者，那麼它們所提供的服務的生命週期應該和該模組的生命週期完全一樣。不要在帶路由的模組及其匯入的相關模組中提供全應用範圍內的<a href=\"guide/singleton-services\">單例服務。</a>。</p><p translation-origin=\"off\">Routed NgModules rarely have providers because you load a routed NgModule only when needed (such as for routing).\nServices listed in the NgModules' <code>provider</code> array would not be available because the root injector wouldn't know about the lazy-loaded NgModule.\nIf you include providers, the lifetime of the provided services should be the same as the lifetime of the NgModule.\nDon't provide app-wide <a href=\"guide/singleton-services\">singleton services</a> in a routed NgModule or in an NgModule that the routed NgModule imports.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">關於服務提供者和延遲載入的帶路由模組的更多資訊，請參閱<a href=\"guide/providers#limiting-provider-scope-by-lazy-loading-modules\" title=\"提供依賴：限制提供者範圍\">限制提供者的範圍</a>。</p><p translation-origin=\"off\">For more information about providers and lazy-loaded routed NgModules, see <a href=\"guide/providers#limiting-provider-scope-by-lazy-loading-modules\" title=\"Providing dependencies: Limiting provider scope\">Limiting provider scope</a>.</p>\n\n</div>\n<p><a id=\"routing\"></a></p>\n<h2 id=\"routing-ngmodules\" translation-result=\"on\">路由定義模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#routing-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Routing NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#routing-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用路由定義模組來為領域模組提供路由配置，從而將路由相關的關注點從其伴生領域模組中分離出來。例子之一是 <live-example name=\"ngmodules\"></live-example> 中的 <code>ContactRoutingModule</code>，它為其伴生領域模組 <code>ContactModule</code> 提供路由。</p><p translation-origin=\"off\">Use a routing NgModule to provide the routing configuration for a domain NgModule, thereby separating routing concerns from its companion domain NgModule.\nOne example is <code>ContactRoutingModule</code> in the <live-example name=\"ngmodules\"></live-example>, which provides the routing for its companion domain NgModule <code>ContactModule</code>.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">關於路由定義的概述和詳細資訊，請參閱<a href=\"guide/router\" title=\"路由應用內導航：路由到檢視\">應用內導航：路由到檢視</a>。</p><p translation-origin=\"off\">For an overview and details about routing, see <a href=\"guide/router\" title=\"In-app navigation: routing to views\">In-app navigation: routing to views</a>.</p>\n\n</div>\n<p translation-result=\"on\">使用路由定義模組來完成如下任務：</p><p translation-origin=\"off\">Use a routing NgModule to do the following tasks:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">定義路由</p><p translation-origin=\"off\">Define routes</p>\n\n</li>\n<li>\n<p translation-result=\"on\">把路由器配置檔案新增到模組的匯入表中</p><p translation-origin=\"off\">Add router configuration to the NgModule's import</p>\n\n</li>\n<li>\n<p translation-result=\"on\">往模組的提供者列表中新增路由守衛和解析器（resolver）提供者</p><p translation-origin=\"off\">Add guard and resolver service providers to the NgModule's providers</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">路由定義模組的名字應該和其伴生模組的名字平行，但使用 <code>Routing</code> 字尾。比如，<code>contact.module.ts</code> 中的 <code>ContactModule</code> 有一個位於 <code>contact-routing.module.ts</code> 中的名為 <code>ContactRoutingModule</code> 的路由定義模組。</p><p translation-origin=\"off\">The name of the routing NgModule should parallel the name of its companion NgModule, using the suffix <code>Routing</code>.\nFor example, <code>ContactModule</code> in <code>contact.module.ts</code> has a routing NgModule named <code>ContactRoutingModule</code> in <code>contact-routing.module.ts</code>.</p>\n\n<p translation-result=\"on\">路由定義模組只能匯入它的伴生模組中。如果伴生模組是根模組 <code>AppModule</code>，那麼 <code>AppRoutingModule</code> 就會透過其匯入表中的 <code>RouterModule.forRoot(routes)</code> 來新增路由器配置。所有其他的子路由定義模組都會匯入 <code>RouterModule.forChild(routes)</code>。</p><p translation-origin=\"off\">Import a routing NgModule only into its companion NgModule.\nIf the companion NgModule is the root <code>AppModule</code>, the <code>AppRoutingModule</code> adds router configuration to its imports with <code>RouterModule.forRoot(routes)</code>.\nAll other routing NgModules are children that import <code>RouterModule.forChild(routes)</code>.</p>\n\n<p translation-result=\"on\">在路由定義模組中，要重新匯出 <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code>，以便其伴生模組中的元件可以存取路由器指令，比如 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 和 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>。</p><p translation-origin=\"off\">In your routing NgModule, re-export the <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code> as a convenience so that components of the companion NgModule have access to router directives such as <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> and <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>.</p>\n\n<p translation-result=\"on\">不要在路由定義模組中使用可宣告物件。元件、指令和管道都是伴生領域模組的責任，而不是路由定義模組的。</p><p translation-origin=\"off\">Don't use declarations in a routing NgModule.\nComponents, directives, and pipes are the responsibility of the companion domain NgModule, not the routing NgModule.</p>\n\n<p><a id=\"service\"></a></p>\n<h2 id=\"service-ngmodules\" translation-result=\"on\">服務模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#service-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Service NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#service-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用服務模組來提供實用工具服務，比如資料存取或訊息傳遞。理想的服務模組完全由提供者組成，沒有可宣告物件。Angular 的 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 是服務模組的一個典範。</p><p translation-origin=\"off\">Use a service NgModule to provide a utility service such as data access or messaging.\nIdeal service NgModules consist entirely of providers and have no declarations.\nAngular's <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> is a good example of a service NgModule.</p>\n\n<p translation-result=\"on\">只能使用根模組 <code>AppModule</code> 來匯入各種服務模組。</p><p translation-origin=\"off\">Use only the root <code>AppModule</code> to import service NgModules.</p>\n\n<p><a id=\"widget\"></a></p>\n<h2 id=\"widget-ngmodules\" translation-result=\"on\">小部件模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#widget-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Widget NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#widget-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用小部件模組可以把元件、指令或管道提供給外部模組使用。把小部件模組匯入到任何需要在範本使用這些小部件的模組中。很多第三方 UI 元件庫都是作為小部件模組提供的。</p><p translation-origin=\"off\">Use a widget NgModule to make a component, directive, or pipe available to external NgModules.\nImport widget NgModules into any NgModules that need the widgets in their templates.\nMany third-party UI component libraries are provided as widget NgModules.</p>\n\n<p translation-result=\"on\">小部件模組應該完全由可宣告物件組成，其中大部分都是匯出的。服務提供者非常罕見。</p><p translation-origin=\"off\">A widget NgModule should consist entirely of declarations, most of them exported.\nIt would rarely have providers.</p>\n\n<p><a id=\"shared\"></a></p>\n<h2 id=\"shared-ngmodules\" translation-result=\"on\">共享模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#shared-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Shared NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#shared-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">把常用的指令、管道和元件放到一個模組中，通常叫做 <code>SharedModule</code>，然後在應用的其他部分只需要匯入這個模組就可以了。你可以在領域模組（包括<a href=\"guide/lazy-loading-ngmodules\" title=\"懶惰載入一個 NgModule\">延遲載入模組</a>）中匯入共享模組。例子之一就是<live-example name=\"ngmodules\"></live-example>中的 <code>SharedModule</code>，它提供了自訂管道 <code>AwesomePipe</code> 和 <code>HighlightDirective</code> 指令。</p><p translation-origin=\"off\">Put commonly used directives, pipes, and components into one NgModule, typically named <code>SharedModule</code>, and then import just that NgModule wherever you need it in other parts of your application.\nYou can import the shared NgModule in your domain NgModules, including <a href=\"guide/lazy-loading-ngmodules\" title=\"Lazy-loading an NgModule\">lazy-loaded NgModules</a>.\nOne example is <code>SharedModule</code> in the <live-example name=\"ngmodules\"></live-example>, which provides the <code>AwesomePipe</code> custom pipe and <code>HighlightDirective</code> directive.</p>\n\n<p translation-result=\"on\">共享模組不應該包含服務提供者，它所匯入或重新匯出的任何模組也都不應該包含提供者。</p><p translation-origin=\"off\">Shared NgModules should not include providers, nor should any of its imported or re-exported NgModules include providers.</p>\n\n<p translation-result=\"on\">要了解如何使用共享模組來組織和簡化程式碼，請參閱<a href=\"guide/sharing-ngmodules\" title=\"在應用中共享 NgModules\">在應用中使用共享模組</a>。</p><p translation-origin=\"off\">To learn how to use shared modules to organize and streamline your code, see <a href=\"guide/sharing-ngmodules\" title=\"Sharing NgModules in an app\">Sharing NgModules in an app</a>.</p>\n\n<h2 id=\"next-steps\" translation-result=\"on\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#next-steps\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Next steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可能還對下列內容感興趣：</p><p translation-origin=\"off\">You may also be interested in the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">關於 Angular 模組的更多資訊，請參閱<a href=\"guide/ngmodules\" title=\"使用 Angular 模組整理你的應用\">使用模組組織你的應用</a></p><p translation-origin=\"off\">For more about NgModules, see <a href=\"guide/ngmodules\" title=\"Organizing your app with NgModules\">Organizing your app with NgModules</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">要了解關於根模組的更多資訊，請參閱<a href=\"guide/bootstrapping\" title=\"用 NgModule 根啟動一款應用\">使用根模組啟動應用</a></p><p translation-origin=\"off\">To learn more about the root NgModule, see <a href=\"guide/bootstrapping\" title=\"Launching an app with a root NgModule\">Launching an app with a root NgModule</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">要了解最常使用的那些 Angular 模組，以及如何將它們匯入你的應用，請參閱<a href=\"guide/frequent-ngmodules\" title=\"經常使用的模組\">常用模組</a></p><p translation-origin=\"off\">To learn about frequently used Angular NgModules and how to import them into your app, see <a href=\"guide/frequent-ngmodules\" title=\"Frequently-used modules\">Frequently-used modules</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">關於模組元資料屬性的完整描述，請參閱<a href=\"guide/ngmodule-api\" title=\"使用 NgModule 元資料\">使用模組元資料</a></p><p translation-origin=\"off\">For a complete description of the NgModule metadata properties, see <a href=\"guide/ngmodule-api\" title=\"Using the NgModule metadata\">Using the NgModule metadata</a></p>\n\n</li>\n</ul>\n<p translation-result=\"on\">如果你想管理模組的載入以及依賴和服務的使用，參閱下列內容：</p><p translation-origin=\"off\">If you want to manage NgModule loading and the use of dependencies and services, see the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">要了解如何在應用啟動時急性載入模組，或者讓路由器非同步載入模組，請參閱<a href=\"guide/lazy-loading-ngmodules\">延遲載入特性模組</a></p><p translation-origin=\"off\">To learn about loading NgModules eagerly when the application starts, or lazy-loading NgModules asynchronously by the router, see <a href=\"guide/lazy-loading-ngmodules\">Lazy-loading feature modules</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">要了解如何為你的應用提供服務或其它依賴，請參閱<a href=\"guide/providers\" title=\"為 NgModule 提供依賴\">為模組提供依賴</a></p><p translation-origin=\"off\">To understand how to provide a service or other dependency for your app, see <a href=\"guide/providers\" title=\"Providing Dependencies for an NgModule\">Providing Dependencies for an NgModule</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">要了解如何在模組中建立單例服務，請參閱<a href=\"guide/singleton-services\" title=\"使服務成為單例\">“使服務成為單例”</a></p><p translation-origin=\"off\">To learn how to create a singleton service to use in NgModules, see <a href=\"guide/singleton-services\" title=\"Making a service a singleton\">Making a service a singleton</a></p>\n\n</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/feature-modules\n - guide/lazy-loading-ngmodules\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/ngmodules\n - guide/sharing-ngmodules\n-->\n<!-- links from this doc:\n - api/common/http/HttpClientModule\n - api/router/RouterLink\n - api/router/RouterModule\n - api/router/RouterOutlet\n - guide/bootstrapping\n - guide/frequent-ngmodules\n - guide/glossary#component\n - guide/glossary#directive\n - guide/glossary#ngmodule\n - guide/glossary#pipe\n - guide/glossary#provider\n - guide/glossary#router\n - guide/glossary#service\n - guide/lazy-loading-ngmodules\n - guide/lifecycle-hooks\n - guide/module-types#domain\n - guide/module-types#domain-ngmodules\n - guide/module-types#guidelines-for-creating-ngmodules\n - guide/module-types#next-steps\n - guide/module-types#routed\n - guide/module-types#routed-ngmodules\n - guide/module-types#routing\n - guide/module-types#routing-ngmodules\n - guide/module-types#service\n - guide/module-types#service-ngmodules\n - guide/module-types#shared\n - guide/module-types#shared-ngmodules\n - guide/module-types#summary-of-ngmodule-categories\n - guide/module-types#widget\n - guide/module-types#widget-ngmodules\n - guide/module-types#下一步\n - guide/module-types#共享模組\n - guide/module-types#小部件模組\n - guide/module-types#帶路由的模組\n - guide/module-types#服務模組\n - guide/module-types#模組ngmodule建立指南\n - guide/module-types#模組類別彙總\n - guide/module-types#路由定義模組\n - guide/module-types#領域模組\n - guide/ngmodule-api\n - guide/ngmodules\n - guide/providers\n - guide/providers#limiting-provider-scope-by-lazy-loading-modules\n - guide/router\n - guide/sharing-ngmodules\n - guide/singleton-services\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/module-types.md?message=docs%3A%20請簡述你的修改...\n-->"}