{"id":"guide/router-reference","title":"Router reference","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/router-reference.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"router-reference\" translation-result=\"on\">路由器參考手冊<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-reference\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Router reference<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-reference\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">下面的部分重點介紹了一些路由器的核心概念。</p><p translation-origin=\"off\">The following sections highlight some core router concepts.</p>\n\n<p><a id=\"basics-router-imports\"></a></p>\n<h2 id=\"router-imports\" translation-result=\"on\">路由器匯入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-imports\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Router imports<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-imports\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular 的 Router 是一個可選服務，它為指定的 URL 提供特定的元件檢視。它不是 Angular 核心的一部分，因此它位於自己的包 <code>@angular/router</code> 中。</p><p translation-origin=\"off\">The Angular Router is an optional service that presents a particular component view for a given URL.\nIt isn't part of the Angular core and thus is in its own library package, <code>@angular/router</code>.</p>\n\n<p translation-result=\"on\">從任何其它的 Angular 套件中匯入你需要的東西。</p><p translation-origin=\"off\">Import what you need from it as you would from any other Angular package.</p>\n\n<code-example header=\"src/app/app.module.ts (import)\" path=\"router/src/app/app.module.1.ts\" region=\"import-router\">\nimport { <a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>, <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a> } from '@angular/router';\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">關於瀏覽器 URL 風格的更多資訊，請參閱 <a href=\"guide/router#browser-url-styles\"><code>LocationStrategy</code> 和瀏覽器 URL 風格</a>。</p><p translation-origin=\"off\">For more on browser URL styles, see <a href=\"guide/router#browser-url-styles\"><code>LocationStrategy</code> and browser URL styles</a>.</p>\n\n</div>\n<p><a id=\"basics-config\"></a></p>\n<h2 id=\"configuration\" translation-result=\"on\">配置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#configuration\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Configuration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#configuration\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">帶路由的 Angular 應用中有一個 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服務的單例例項。當瀏覽器的 URL 發生變化時，該路由器會查詢相應的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>，以便根據它確定要顯示的元件。</p><p translation-origin=\"off\">A routed Angular application has one singleton instance of the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> service.\nWhen the browser's URL changes, that router looks for a corresponding <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> from which it can determine the component to display.</p>\n\n<p translation-result=\"on\">在配置之前，路由器沒有任何路由。下面的例子建立了五個路由定義，透過 <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> 方法配置路由器，並把結果新增到 <code>AppModule</code> 的 <code>imports</code> 陣列中。</p><p translation-origin=\"off\">A router has no routes until you configure it.\nThe following example creates five route definitions, configures the router via the <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> method, and adds the result to the <code>imports</code> array of the <code>AppModule</code>'.</p>\n\n<code-example header=\"src/app/app.module.ts (excerpt)\" path=\"router/src/app/app.module.0.ts\">\nconst appRoutes: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a> = [\n  { path: 'crisis-center', component: CrisisListComponent },\n  { path: 'hero/:id',      component: HeroDetailComponent },\n  {\n    path: 'heroes',\n    component: HeroListComponent,\n    data: { title: 'Heroes List' }\n  },\n  { path: '',\n    redirectTo: '/heroes',\n    pathMatch: 'full'\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // &lt;-- debugging purposes only\n    )\n    // other imports here\n  ],\n  ...\n})\nexport class AppModule { }\n\n</code-example>\n<p><a id=\"example-config\"></a></p>\n<p translation-result=\"on\"><code>appRoutes</code> 路由陣列描述瞭如何導航。把它傳給模組的 <code>imports</code> 陣列中的 <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> 方法來配置路由器。</p><p translation-origin=\"off\">The <code>appRoutes</code> array of routes describes how to navigate.\nPass it to the <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> method in the module <code>imports</code> to configure the router.</p>\n\n<p translation-result=\"on\">每個 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 都會把一個 URL <code>path</code> 對映到一個元件。路徑中沒有前導斜槓。路由器會為你解析並建構最終的 URL，這樣你就可以在應用檢視中導航時使用相對路徑和絕對路徑了。</p><p translation-origin=\"off\">Each <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> maps a URL <code>path</code> to a component.\nThere are no leading slashes in the path.\nThe router parses and builds the final URL for you, which lets you use both relative and absolute paths when navigating between application views.</p>\n\n<p translation-result=\"on\">第二個路由中的 <code>:id</code> 是路由引數的標記。在像 <code>/hero/42</code> 這樣的 URL 中，“42”是 <code>id</code> 引數的值。相應的 <code>HeroDetailComponent</code> 用這個值來查詢並顯示 <code>id</code> 為 42 的英雄。</p><p translation-origin=\"off\">The <code>:id</code> in the second route is a token for a route parameter.\nIn a URL such as <code>/hero/42</code>, \"42\" is the value of the <code>id</code> parameter.\nThe corresponding <code>HeroDetailComponent</code> uses that value to find and present the hero whose <code>id</code> is 42.</p>\n\n<p translation-result=\"on\">第三個路由中的 <code>data</code> 屬性是存放與該特定路由關聯的任意資料的地方。每個啟用的路由都可以存取 <code>data</code> 屬性。可以用它來儲存頁面標題，麵包屑文字和其它唯讀靜態資料等專案。可以用<a href=\"guide/router-tutorial-toh#resolve-guard\">解析器守衛</a>來檢索動態資料。</p><p translation-origin=\"off\">The <code>data</code> property in the third route is a place to store arbitrary data associated with this specific route.\nThe data property is accessible within each activated route.\nUse it to store items such as page titles, breadcrumb text, and other read-only, static data.\nUse the <a href=\"guide/router-tutorial-toh#resolve-guard\">resolve guard</a> to retrieve dynamic data.</p>\n\n<p translation-result=\"on\">第四個路由中的空路徑表示該應用的預設路徑 - 當 URL 中的路徑為空時通常要去的地方，就像它在剛進來時一樣。這個預設路由重新導向到了 <code>/heroes</code> 這個 URL 的路由，因此會顯示 <code>HeroesListComponent</code>。</p><p translation-origin=\"off\">The empty path in the fourth route represents the default path for the application —the place to go when the path in the URL is empty, as it typically is at the start.\nThis default route redirects to the route for the <code>/heroes</code> URL and, therefore, displays the <code>HeroesListComponent</code>.</p>\n\n<p translation-result=\"on\">如果你需要檢視導航生命週期中發生了什麼事件，可以把 <code>enableTracing</code> 選項作為路由器預設配置的一部分。這會把每個導航生命週期中發生的每個路由器事件都輸出到瀏覽器控制檯中。<code>enableTracing</code> 只會用於除錯目的。你可以把 <code>enableTracing: true</code> 選項作為第二個引數傳給 <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> 方法。</p><p translation-origin=\"off\">If you need to see what events are happening during the navigation lifecycle, there is the <code>enableTracing</code> option as part of the router's default configuration.\nThis outputs each router event that took place during each navigation lifecycle to the browser console.\nUse <code>enableTracing</code> only for debugging purposes.\nYou set the <code>enableTracing: true</code> option in the object passed as the second argument to the <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> method.</p>\n\n<p><a id=\"basics-router-outlet\"></a></p>\n<h2 id=\"router-outlet\" translation-result=\"on\">路由出口<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-outlet\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Router outlet<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-outlet\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 是一個來自路由器庫的指令，雖然它的用法像元件一樣。它充當佔位符，用於在範本中標記出路由器應該顯示把該元件顯示在那個出口的位置。</p><p translation-origin=\"off\">The <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> is a directive from the router library that is used like a component.\nIt acts as a placeholder that marks the spot in the template where the router should display the components for that outlet.</p>\n\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;\n&lt;!-- Routed components go here --&gt;\n\n</code-example>\n<p translation-result=\"on\">對於上面的配置，當這個應用的瀏覽器 URL 變為 <code>/heroes</code> 時，路由器就會把這個 URL 與路由路徑 <code>/heroes</code> 匹配，並把 <code>HeroListComponent</code> 作為兄弟元素顯示在宿主元件範本中的 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 下方。</p><p translation-origin=\"off\">Given the preceding configuration, when the browser URL for this application becomes <code>/heroes</code>, the router matches that URL to the route path <code>/heroes</code> and displays the <code>HeroListComponent</code> as a sibling element to the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> that you've placed in the host component's template.</p>\n\n<p><a id=\"basics-router-links\"></a>\n<a id=\"router-link\"></a></p>\n<h2 id=\"router-links\" translation-result=\"on\">路由連結<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-links\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Router links<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-links\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要想透過某些使用者操作（比如單擊一下 a 標籤）進行導航，請使用 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>。</p><p translation-origin=\"off\">To navigate as a result of some user action such as the click of an anchor tag, use <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>.</p>\n\n<p translation-result=\"on\">考慮下面的範本：</p><p translation-origin=\"off\">Consider the following template:</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"router/src/app/app.component.1.html\">\n&lt;h1&gt;Angular <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>&lt;/h1&gt;\n&lt;nav&gt;\n  &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/crisis-center\" <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active\" ariaCurrentWhenActive=\"page\"&gt;Crisis Center&lt;/a&gt;\n  &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/heroes\" <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active\" ariaCurrentWhenActive=\"page\"&gt;Heroes&lt;/a&gt;\n&lt;/nav&gt;\n&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;\n\n</code-example>\n<p translation-result=\"on\">a 標籤上的 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 指令讓路由器可以控制這些元素。導航路徑是固定的，所以你可以給 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 賦值一個字串（“一次性”繫結）。</p><p translation-origin=\"off\">The <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> directives on the anchor tags give the router control over those elements.\nThe navigation paths are fixed, so you can assign a string as a one-time binding to the <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>.</p>\n\n<p translation-result=\"on\">如果導航路徑更加動態，你可以給它繫結到一個範本表示式，該表示式要返回一個<a href=\"guide/router#link-parameters-array\">連結引數陣列</a>。路由器會把該陣列解析成一個完整的 URL。</p><p translation-origin=\"off\">Had the navigation path been more dynamic, you could have bound to a template expression that returned an array of route link parameters; that is, the <a href=\"guide/router#link-parameters-array\">link parameters array</a>.\nThe router resolves that array into a complete URL.</p>\n\n<p><a id=\"router-link-active\"></a></p>\n<h2 id=\"active-router-links\" translation-result=\"on\">活動路由鏈路<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#active-router-links\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Active router links<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#active-router-links\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令會根據當前的 <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> 切換活動 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 上所繫結的 CSS 類別。</p><p translation-origin=\"off\">The <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> directive toggles CSS classes for active <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> bindings based on the current <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code>.</p>\n\n<p translation-result=\"on\">在每個 a 標籤上，你會看到一個到 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令的<a href=\"guide/property-binding\">屬性繫結</a>，就像</p><p translation-origin=\"off\">On each anchor tag, you see a <a href=\"guide/property-binding\">property binding</a> to the <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> directive that looks like</p>\n\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\n<a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"...\"\n\n</code-example>\n<p translation-result=\"on\">等號 <code>=</code> 右側的範本表示式，包含一個以空格分隔的 CSS 類字串，當這個連結處於活動狀態時，路由器就會加上這些字串，並在非活動狀態時刪除。你可以把 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令設定成一串類別的字串，比如 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active fluffy\"</code>，也可以把它繫結到一個返回這樣一個字串的元件屬性上，比如</p><p translation-origin=\"off\">The template expression to the right of the equal sign, <code>=</code>, contains a space-delimited string of CSS classes that the Router adds when this link is active and removes when the link is inactive.\nYou set the <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> directive to a string of classes such as <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active fluffy\"</code> or bind it to a component property that returns such a string.\nFor example,</p>\n\n<code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\">\n\n[<a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>]=\"someStringProperty\"\n\n</code-example>\n<p translation-result=\"on\">活動路由連結會級聯到路由樹的每個級別，這樣父路由和子路由連結就可以同時處於活動狀態。要覆蓋這種行為，可以用 <code>{ exact: true }</code> 表示式繫結到 <code>[routerLinkActiveOptions]</code> 輸入繫結。使用 <code>{ exact: true }</code> 之後，給定的 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 只有在 URL 與當前 URL 完全匹配時才會啟用。</p><p translation-origin=\"off\">Active route links cascade down through each level of the route tree, so parent and child router links can be active at the same time.\nTo override this behavior, bind to the <code>[routerLinkActiveOptions]</code> input binding with the <code>{ exact: true }</code> expression.\nBy using <code>{ exact: true }</code>, a given <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> is only active if its URL is an exact match to the current URL.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 還允許你輕鬆地將 <code>aria-current</code> 屬性應用於活躍元素，從而為所有使用者提供更易於存取的體驗。有關更多資訊，請參閱無障礙性最佳實踐<a href=\"guide/accessibility#active-links-identification\">活動連結標識部分</a>。</p><p translation-origin=\"off\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> also allows you to easily apply the <code>aria-current</code> attribute to the active element, thus providing a more accessible experience for all users. For more information see the Accessibility Best Practices <a href=\"guide/accessibility#active-links-identification\">Active links identification section</a>.</p>\n\n<p><a id=\"basics-router-state\"></a></p>\n<h2 id=\"router-state\" translation-result=\"on\">路由器狀態<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-state\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Router state<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-state\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">每個成功的導航生命週期結束後，路由器都會建構一個 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 物件樹，它構成了路由器的當前狀態。你可以從任何地方使用應用的 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服務和 <code>routerState</code> 屬性來訪問當前的 <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code>。</p><p translation-origin=\"off\">After the end of each successful navigation lifecycle, the router builds a tree of <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> objects that make up the current state of the router.\nYou can access the current <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> from anywhere in the application using the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> service and the <code>routerState</code> property.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> 中的每個 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 都提供了向上或向下遍歷路由樹的方法，用於從父路由、子路由和兄弟路由中獲取資訊。</p><p translation-origin=\"off\">Each <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> in the <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> provides methods to traverse up and down the route tree to get information from parent, child, and sibling routes.</p>\n\n<p><a id=\"activated-route\"></a></p>\n<h2 id=\"activated-route\" translation-result=\"on\">啟用路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#activated-route\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Activated route<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#activated-route\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">路由的路徑和引數可以透過注入名為 <a href=\"api/router/ActivatedRoute\">ActivatedRoute</a> 的路由服務獲得。它提供了大量有用的資訊，包括：</p><p translation-origin=\"off\">The route path and parameters are available through an injected router service called the <a href=\"api/router/ActivatedRoute\">ActivatedRoute</a>.\nIt has a great deal of useful information including:</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">屬性</nt-wrapper><nt-wrapper translation-origin=\"off\">Property</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">詳情</nt-wrapper><nt-wrapper translation-origin=\"off\">Details</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><code>url</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個路由路徑的 <code>Observable</code>，是一個由路由路徑的各個部分組成的字串陣列。</nt-wrapper><nt-wrapper translation-origin=\"off\">An <code>Observable</code> of the route paths, represented as an array of strings for each part of the route path.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>data</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">包含提供給當前路由的 <code>data</code> 物件的 <code>Observable</code>。也包含任何由<a href=\"guide/router-tutorial-toh#resolve-guard\">解析守衛</a>解析出的值。</nt-wrapper><nt-wrapper translation-origin=\"off\">An <code>Observable</code> that contains the <code>data</code> object provided for the route. Also contains any resolved values from the <a href=\"guide/router-tutorial-toh#resolve-guard\">resolve guard</a>.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>params</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><code>Observable</code> 可以包含此路由的必選和<a href=\"guide/router-tutorial-toh#optional-route-parameters\">可選引數</a>。</nt-wrapper><nt-wrapper translation-origin=\"off\">An <code>Observable</code> that contains the required and <a href=\"guide/router-tutorial-toh#optional-route-parameters\">optional parameters</a> specific to the route.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>paramMap</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個包含該路由的必要引數和<a href=\"guide/router-tutorial-toh#optional-route-parameters\">可選引數</a> <a href=\"api/router/ParamMap\">map</a> 的 <code>Observable</code>。這個 map 支援從同一個引數中獲得單個或多個值。</nt-wrapper><nt-wrapper translation-origin=\"off\">An <code>Observable</code> that contains a <a href=\"api/router/ParamMap\">map</a> of the required and <a href=\"guide/router-tutorial-toh#optional-route-parameters\">optional parameters</a> specific to the route. The map supports retrieving single and multiple values from the same parameter.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>queryParamMap</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個包含適用於所有路由的<a href=\"guide/router-tutorial-toh#query-parameters\">查詢引數</a> <a href=\"api/router/ParamMap\">map</a> 的 <code>Observable</code>。這個 map 支援從同一個查詢引數中獲得單個或多個值。</nt-wrapper><nt-wrapper translation-origin=\"off\">An <code>Observable</code> that contains a <a href=\"api/router/ParamMap\">map</a> of the <a href=\"guide/router-tutorial-toh#query-parameters\">query parameters</a> available to all routes. The map supports retrieving single and multiple values from the query parameter.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>queryParams</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\"><code>Observable</code> 可以包含對所有路由都可用的<a href=\"guide/router-tutorial-toh#query-parameters\">查詢引數</a>。</nt-wrapper><nt-wrapper translation-origin=\"off\">An <code>Observable</code> that contains the <a href=\"guide/router-tutorial-toh#query-parameters\">query parameters</a> available to all routes.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>fragment</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個適用於所有路由的 URL <a href=\"guide/router-tutorial-toh#fragment\">片段</a>的 <code>Observable</code>。</nt-wrapper><nt-wrapper translation-origin=\"off\">An <code>Observable</code> of the URL <a href=\"guide/router-tutorial-toh#fragment\">fragment</a> available to all routes.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>outlet</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">用來渲染該路由的 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的名字。對於無名出口，這個出口的名字是 <code>primary</code>。</nt-wrapper><nt-wrapper translation-origin=\"off\">The name of the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> used to render the route. For an unnamed outlet, the outlet name is primary.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>routeConfig</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">包含原始路徑的那個路由的配置資訊。</nt-wrapper><nt-wrapper translation-origin=\"off\">The route configuration used for the route that contains the origin path.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>parent</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">當該路由是<a href=\"guide/router-tutorial-toh#child-routing-component\">子路由</a>時，表示該路由的父級 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>。</nt-wrapper><nt-wrapper translation-origin=\"off\">The route's parent <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> when this route is a <a href=\"guide/router-tutorial-toh#child-routing-component\">child route</a>.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>firstChild</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">包含該路由的子路由列表中的第一個 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>。</nt-wrapper><nt-wrapper translation-origin=\"off\">Contains the first <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> in the list of this route's child routes.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>children</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">包含當前路由下所有啟用的<a href=\"guide/router-tutorial-toh#child-routing-component\">子路由</a>。</nt-wrapper><nt-wrapper translation-origin=\"off\">Contains all the <a href=\"guide/router-tutorial-toh#child-routing-component\">child routes</a> activated under the current route.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<h2 id=\"router-events\" translation-result=\"on\">路由器事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-events\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Router events<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-events\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 在每次導航過程中都會透過 <code><a href=\"api/router/Router#events\" class=\"code-anchor\">Router.events</a></code> 屬性發出導航事件。這些事件如下表所示。</p><p translation-origin=\"off\">During each navigation, the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> emits navigation events through the <code><a href=\"api/router/Router#events\" class=\"code-anchor\">Router.events</a></code> property.\nThese events are shown in the following table.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">路由事件</nt-wrapper><nt-wrapper translation-origin=\"off\">Router event</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">詳情</nt-wrapper><nt-wrapper translation-origin=\"off\">Details</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationStart\"><code>NavigationStart</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">開始導航時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when navigation starts.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/RouteConfigLoadStart\"><code>RouteConfigLoadStart</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器<a href=\"guide/router-tutorial-toh#asynchronous-routing\">延遲載入</a>某個路由配置之前觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered before the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> <a href=\"guide/router-tutorial-toh#asynchronous-routing\">lazy loads</a> a route configuration.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/RouteConfigLoadEnd\"><code>RouteConfigLoadEnd</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">某個路由延遲載入完畢後觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered after a route has been lazy loaded.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/RoutesRecognized\"><code>RoutesRecognized</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器解析完 URL，並且識別出路由時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router parses the URL and the routes are recognized.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/GuardsCheckStart\"><code>GuardsCheckStart</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器開始執行路由守衛時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router begins the Guards phase of routing.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/ChildActivationStart\"><code>ChildActivationStart</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器開始啟用某個路由的子路由時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router begins activating a route's children.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/ActivationStart\"><code>ActivationStart</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器開始啟用某個路由時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router begins activating a route.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/GuardsCheckEnd\"><code>GuardsCheckEnd</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器完全完成了路由守衛階段時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router finishes the Guards phase of routing successfully.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/ResolveStart\"><code>ResolveStart</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器開始路由解析（Resolve）階段時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router begins the Resolve phase of routing.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/ResolveEnd\"><code>ResolveEnd</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器成功完成了路由解析（Resolve）階段時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router finishes the Resolve phase of routing successfully.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/ChildActivationEnd\"><code>ChildActivationEnd</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器啟用完某個路由的子路由時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router finishes activating a route's children.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/ActivationEnd\"><code>ActivationEnd</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器正在啟用某個路由時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when the Router finishes activating a route.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationEnd\"><code>NavigationEnd</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">導航成功結束時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when navigation ends successfully.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationCancel\"><code>NavigationCancel</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">導航被取消時觸發。這可能是因為在導航期間某個<a href=\"guide/router-tutorial-toh#guards\">路由守衛</a>返回了 false 或透過返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 而進行了重新導向。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when navigation is canceled. This can happen when a <a href=\"guide/router-tutorial-toh#guards\">Route Guard</a> returns false during navigation, or redirects by returning a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationError\"><code>NavigationError</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">當導航因為非預期的錯誤而失敗時觸發。</nt-wrapper><nt-wrapper translation-origin=\"off\">Triggered when navigation fails due to an unexpected error.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><a href=\"api/router/Scroll\"><code>Scroll</code></a></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">表示一個滾動事件。</nt-wrapper><nt-wrapper translation-origin=\"off\">Represents a scrolling event.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p translation-result=\"on\">當啟用了 <code>enableTracing</code> 選項時，Angular 會把這些事件都記錄到控制檯。關於篩選路由器導航事件的範例，請參閱 <a href=\"guide/observables-in-angular\">Angular 中的 Observables</a> 一章的<a href=\"guide/observables-in-angular#router\">路由器部分</a>。</p><p translation-origin=\"off\">When you enable the <code>enableTracing</code> option, Angular logs these events to the console.\nFor an example of filtering router navigation events, see the <a href=\"guide/observables-in-angular#router\">router section</a> of the <a href=\"guide/observables-in-angular\">Observables in Angular</a> guide.</p>\n\n<h2 id=\"router-terminology\" translation-result=\"on\">路由器術語<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-terminology\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Router terminology<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-terminology\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">這裡是一些關鍵的 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 術語及其含義：</p><p translation-origin=\"off\">Here are the key <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> terms and their meanings:</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">路由器部件</nt-wrapper><nt-wrapper translation-origin=\"off\">Router part</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">詳情</nt-wrapper><nt-wrapper translation-origin=\"off\">Details</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">為活動 URL 顯示應用中的元件。管理從一個元件到另一個的導航。</nt-wrapper><nt-wrapper translation-origin=\"off\">Displays the application component for the active URL. Manages navigation from one component to the next.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個單獨的 NgModule，它提供了一些必要的服務提供者和一些用於在應用檢視間導航的指令。</nt-wrapper><nt-wrapper translation-origin=\"off\">A separate NgModule that provides the necessary service providers and directives for navigating through application views.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">定義一個路由陣列，每一個條目都會把一個 URL 路徑對映到元件。</nt-wrapper><nt-wrapper translation-origin=\"off\">Defines an array of Routes, each mapping a URL path to a component.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">定義路由器如何基於一個 URL 模式導航到某個元件。大部分路由都由一個路徑和一個元件類組成。</nt-wrapper><nt-wrapper translation-origin=\"off\">Defines how the router should navigate to a component based on a URL pattern. Most routes consist of a path and a component type.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">該指令（<code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code>）用於指出路由器應該把檢視顯示在哪裡。</nt-wrapper><nt-wrapper translation-origin=\"off\">The directive (<code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code>) that marks where the router displays a view.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">用於將可點選的 HTML 元素繫結到某個路由的指令。單擊帶有 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 指令且繫結到<em>字串</em>或<em>連結引數陣列</em>的元素，將觸發導航。</nt-wrapper><nt-wrapper translation-origin=\"off\">The directive for binding a clickable HTML element to a route. Clicking an element with a <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> directive that's bound to a <em>string</em> or a <em>link parameters array</em> triggers a navigation.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">當包含在元素上或內部的關聯 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 變為活動/非活動狀態時，用於從 HTML 元素新增/刪除類別的指令。它還可以設定活動連結的 <code>aria-current</code> 以獲得更好的無障礙性。</nt-wrapper><nt-wrapper translation-origin=\"off\">The directive for adding/removing classes from an HTML element when an associated <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> contained on or inside the element becomes active/inactive. It can also set the <code>aria-current</code> of an active link for better accessibility.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個提供給每個路由元件的服務，其中包含當前路由專屬的資訊，比如路由引數、靜態資料、解析資料、全域查詢引數和全域片段。</nt-wrapper><nt-wrapper translation-origin=\"off\">A service that's provided to each route component that contains route specific information such as route parameters, static data, resolve data, global query parameters, and the global fragment.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由器的當前狀態，包括一棵當前啟用路由的樹以及遍歷這棵路由樹的便捷方法。</nt-wrapper><nt-wrapper translation-origin=\"off\">The current state of the router including a tree of the currently activated routes together with convenience methods for traversing the route tree.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">連結引數陣列</nt-wrapper><nt-wrapper translation-origin=\"off\">Link parameters array</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個由路由器將其解釋為路由指南的陣列。你可以將該陣列繫結到 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 或將該陣列作為引數傳給 <code>Router.navigate</code> 方法。</nt-wrapper><nt-wrapper translation-origin=\"off\">An array that the router interprets as a routing instruction. You can bind that array to a <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> or pass the array as an argument to the <code>Router.navigate</code> method.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">路由元件</nt-wrapper><nt-wrapper translation-origin=\"off\">Routing component</nt-wrapper></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">一個帶有 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的 Angular 元件，可基於路由器的導航來顯示檢視。</nt-wrapper><nt-wrapper translation-origin=\"off\">An Angular component with a <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> that displays views based on router navigations.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - api/router/RouterEvent\n - api/router/Routes\n - guide/router-tutorial-toh\n - guide/routing-overview\n - guide/universal\n-->\n<!-- links from this doc:\n - api/core/NgModule\n - api/router/ActivatedRoute\n - api/router/ActivationEnd\n - api/router/ActivationStart\n - api/router/ChildActivationEnd\n - api/router/ChildActivationStart\n - api/router/GuardsCheckEnd\n - api/router/GuardsCheckStart\n - api/router/NavigationCancel\n - api/router/NavigationEnd\n - api/router/NavigationError\n - api/router/NavigationStart\n - api/router/ParamMap\n - api/router/ResolveEnd\n - api/router/ResolveStart\n - api/router/Route\n - api/router/RouteConfigLoadEnd\n - api/router/RouteConfigLoadStart\n - api/router/Router\n - api/router/Router#events\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterModule\n - api/router/RouterModule#forRoot\n - api/router/RouterOutlet\n - api/router/RouterState\n - api/router/Routes\n - api/router/RoutesRecognized\n - api/router/Scroll\n - api/router/UrlTree\n - guide/accessibility#active-links-identification\n - guide/observables-in-angular\n - guide/observables-in-angular#router\n - guide/property-binding\n - guide/router#browser-url-styles\n - guide/router#link-parameters-array\n - guide/router-reference#activated-route\n - guide/router-reference#active-router-links\n - guide/router-reference#configuration\n - guide/router-reference#router-events\n - guide/router-reference#router-imports\n - guide/router-reference#router-links\n - guide/router-reference#router-outlet\n - guide/router-reference#router-reference\n - guide/router-reference#router-state\n - guide/router-reference#router-terminology\n - guide/router-reference#活動路由鏈路\n - guide/router-reference#啟用路由\n - guide/router-reference#路由出口\n - guide/router-reference#路由器事件\n - guide/router-reference#路由器參考手冊\n - guide/router-reference#路由器匯入\n - guide/router-reference#路由器術語\n - guide/router-reference#路由器狀態\n - guide/router-reference#路由連結\n - guide/router-reference#配置\n - guide/router-tutorial-toh#asynchronous-routing\n - guide/router-tutorial-toh#child-routing-component\n - guide/router-tutorial-toh#fragment\n - guide/router-tutorial-toh#guards\n - guide/router-tutorial-toh#optional-route-parameters\n - guide/router-tutorial-toh#query-parameters\n - guide/router-tutorial-toh#resolve-guard\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/router-reference.md?message=docs%3A%20請簡述你的修改...\n-->"}