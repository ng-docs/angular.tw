{"id":"guide/frequent-ngmodules","title":"Frequently-used modules","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/frequent-ngmodules.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"frequently-used-modules\" translation-result=\"on\">常用模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#frequently-used-modules\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Frequently-used modules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#frequently-used-modules\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">Angular 應用至少需要一個充當根模組使用的模組。\n如果你要把某些特性新增到應用中，可以透過新增模組來實現。\n下列是一些常用的 Angular 模組，其中帶有一些其內容物的例子：</p><p translation-origin=\"off\">An Angular application needs at least one module that serves as the root module.\nAs you add features to your app, you can add them in modules.\nThe following are frequently used Angular modules with examples of some of the things they contain:</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">模組</nt-wrapper><nt-wrapper translation-origin=\"off\">NgModule</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">匯入自</nt-wrapper><nt-wrapper translation-origin=\"off\">Import it from</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">為何用它</nt-wrapper><nt-wrapper translation-origin=\"off\">Why you use it</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code></td>\n<td align=\"left\"><code>@angular/platform-browser</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">在瀏覽器中執行應用。</nt-wrapper><nt-wrapper translation-origin=\"off\">To run your application in a browser.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code></td>\n<td align=\"left\"><code>@angular/common</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">使用 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> 和 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code>。</nt-wrapper><nt-wrapper translation-origin=\"off\">To use <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> and <code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code>.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code></td>\n<td align=\"left\"><code>@angular/forms</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">建構範本驅動表單（包括 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code>）。</nt-wrapper><nt-wrapper translation-origin=\"off\">To build template driven forms (includes <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code>).</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a></code></td>\n<td align=\"left\"><code>@angular/forms</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">建構響應式表單。</nt-wrapper><nt-wrapper translation-origin=\"off\">To build reactive forms.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code></td>\n<td align=\"left\"><code>@angular/router</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">使用 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 、 <code>.forRoot()</code> 和 <code>.forChild()</code>。</nt-wrapper><nt-wrapper translation-origin=\"off\">To use <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>, <code>.forRoot()</code>, and <code>.forChild()</code>.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code></td>\n<td align=\"left\"><code>@angular/common/<a href=\"api/common/http\" class=\"code-anchor\">http</a></code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">使用 HTTP 協議與伺服器通訊。</nt-wrapper><nt-wrapper translation-origin=\"off\">To communicate with a server using the HTTP protocol.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<h2 id=\"importing-modules\" translation-result=\"on\">匯入模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#importing-modules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Importing modules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#importing-modules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">當你使用這些 Angular 模組時，在 <code>AppModule</code>（或適當的特性模組）中匯入它們，並把它們列在當前 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>imports</code> 陣列中。比如，在 <a href=\"cli\">Angular CLI</a> 產生的基本應用中，<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 會在 <code>app.module.ts</code> 中 <code>AppModule</code> 的頂部最先匯入。</p><p translation-origin=\"off\">When you use these Angular modules, import them in <code>AppModule</code>, or your feature module as appropriate, and list them in the <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> <code>imports</code> array.\nFor example, in the basic application generated by the <a href=\"cli\">Angular CLI</a>, <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> is the first import at the top of the <code>AppModule</code>, <code>app.module.ts</code>.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\n/* import modules so that AppModule can access them */\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ /* add modules here so Angular knows to use them */\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n</code-example>\n<p translation-result=\"on\">檔案頂部的這些匯入是 JavaScript 的匯入陳述式，而 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 中的 <code>imports</code> 陣列則是 Angular 特有的。\n要了解更多的不同點，參閱 <a href=\"guide/ngmodule-vs-jsmodule\">JavaScript 模組 vs. NgModule</a>。</p><p translation-origin=\"off\">The imports at the top of the array are JavaScript import statements while the <code>imports</code> array within <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> is Angular specific.\nFor more information on the difference, see <a href=\"guide/ngmodule-vs-jsmodule\">JavaScript Modules vs. NgModules</a>.</p>\n\n<h2 id=\"browsermodule-and-commonmodule\" translation-result=\"on\"><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 和 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#browsermodule-和-commonmodule\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\"><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> and <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#browsermodule-and-commonmodule\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 匯入了 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>，它貢獻了很多通用的指令，比如 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 和 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>。\n另外，<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 重新匯出了 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>，以便它所有的指令在任何匯入了 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 的模組中都可以使用。</p><p translation-origin=\"off\"><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> imports <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>, which contributes many common directives such as <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> and <code><a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>.\nAdditionally, <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> re-exports <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> making all of its directives available to any module that imports <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>.</p>\n\n<p translation-result=\"on\">對於執行在瀏覽器中的應用來說，都必須在根模組中 <code>AppModule</code> 匯入 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>，因為它提供了啟動和執行瀏覽器應用時某些必須的服務。<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 的提供者是面向整個應用的，所以它只能在根模組中使用，而不是特性模組。\n特性模組只需要 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 中的常用指令，它們不需要重新安裝所有全應用級的服務。</p><p translation-origin=\"off\">For applications that run in the browser, import <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> in the root <code>AppModule</code> because it provides services that are essential to launch and run a browser application.\n<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>'s providers are for the whole application so it should only be in the root module, not in feature modules.\nFeature modules only need the common directives in <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>; they don't need to re-install app-wide providers.</p>\n\n<p translation-result=\"on\">如果你把 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 匯入了延遲載入的特性模組中，Angular 就會返回一個錯誤，並告訴你要改用 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>。</p><p translation-origin=\"off\">If you do import <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> into a lazy loaded feature module, Angular returns an error telling you to use <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> instead.</p>\n\n<div class=\"lightbox\">\n<img alt=\"BrowserModule error\" src=\"generated/images/guide/frequent-ngmodules/browser-module-error.gif\" width=\"750\">\n</div>\n<h2 id=\"more-on-ngmodules\" translation-result=\"on\">關於 NgModule 的更多知識<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">More on NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/frequent-ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可能還對下列內容感興趣：</p><p translation-origin=\"off\">You may also be interested in the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/bootstrapping\">引導啟動</a></p><p translation-origin=\"off\"><a href=\"guide/bootstrapping\">Bootstrapping</a></p>\n\n</li>\n<li>\n<p><a href=\"guide/ngmodules\">NgModules</a></p>\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/ngmodule-vs-jsmodule\">JavaScript 模組與 NgModules</a>。</p><p translation-origin=\"off\"><a href=\"guide/ngmodule-vs-jsmodule\">JavaScript Modules vs. NgModules</a></p>\n\n</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/bootstrapping\n - guide/module-types\n - guide/ngmodule-vs-jsmodule\n-->\n<!-- links from this doc:\n - api/common/CommonModule\n - api/common/NgFor\n - api/common/NgIf\n - api/common/http\n - api/common/http/HttpClientModule\n - api/core/NgModule\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/forms/ReactiveFormsModule\n - api/platform-browser/BrowserModule\n - api/router/RouterLink\n - api/router/RouterModule\n - cli\n - guide/bootstrapping\n - guide/frequent-ngmodules#browsermodule-and-commonmodule\n - guide/frequent-ngmodules#browsermodule-和-commonmodule\n - guide/frequent-ngmodules#frequently-used-modules\n - guide/frequent-ngmodules#importing-modules\n - guide/frequent-ngmodules#more-on-ngmodules\n - guide/frequent-ngmodules#關於-ngmodule-的更多知識\n - guide/frequent-ngmodules#匯入模組\n - guide/frequent-ngmodules#常用模組\n - guide/ngmodule-vs-jsmodule\n - guide/ngmodules\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/frequent-ngmodules.md?message=docs%3A%20請簡述你的修改...\n-->"}