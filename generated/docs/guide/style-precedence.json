{"id":"guide/style-precedence","title":"Style Precedence","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/style-precedence.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"style-precedence\" translation-result=\"on\">樣式的優先順序<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#style-precedence\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Style Precedence<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#style-precedence\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">當存在多個繫結具有相同的類別名稱或樣式屬性名時，Angular 會使用一組優先順序規則來確定要應用於此元素的類或樣式。這些規則指定了與樣式和類相關的繫結的優先順序。最有特異性的優先順序最高，最寬鬆的優先順序最低，樣式優先順序如下：</p><p translation-origin=\"off\">When there are multiple bindings to the same class name or style attribute, Angular uses a set of precedence rules to determine which classes or styles to apply to the element.\nThese rules specify an order for which style and class related bindings have priority.\nThis styling precedence is as follows, from the most specific with the highest priority to least specific with the lowest priority:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">範本繫結是最具體的，因為它們會直接且排他地應用於元素，因此它們具有最高的優先順序。</p><p translation-origin=\"off\">Template bindings are the most specific because they apply to the element directly and exclusively, so they have the highest precedence.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">繫結型別</nt-wrapper><nt-wrapper translation-origin=\"off\">Binding type</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">例子</nt-wrapper><nt-wrapper translation-origin=\"off\">Examples</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">屬性繫結</nt-wrapper><nt-wrapper translation-origin=\"off\">Property binding</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [class.foo]=\"hasFoo\"&gt; </code-example> <code-example format=\"html\" hidecopy=\"\" language=\"html\">&lt;div [style.color]=\"color\"&gt; </code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">對映繫結</nt-wrapper><nt-wrapper translation-origin=\"off\">Map binding</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [class]=\"classExpression\"&gt; </code-example> <code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"&gt; </code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">靜態值</nt-wrapper><nt-wrapper translation-origin=\"off\">Static value</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div class=\"foo\"&gt; </code-example> <code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div <a href=\"api/animations/style\" class=\"code-anchor\">style</a>=\"color: blue\"&gt; </code-example></td>\n</tr>\n\n</tbody>\n</table>\n</li>\n<li>\n<p translation-result=\"on\">指令的宿主繫結不太有特異性，因為你可以在多個位置使用該指令，因此它們的優先順序比範本繫結低。</p><p translation-origin=\"off\">Directive host bindings are less specific because you can use directives in multiple locations, so they have a lower precedence than template bindings.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">繫結型別</nt-wrapper><nt-wrapper translation-origin=\"off\">Binding type</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">例子</nt-wrapper><nt-wrapper translation-origin=\"off\">Examples</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">屬性繫結</nt-wrapper><nt-wrapper translation-origin=\"off\">Property binding</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'[class.foo]': 'hasFoo'} </code-example> <code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'[style.color]': 'color'} </code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">對映繫結</nt-wrapper><nt-wrapper translation-origin=\"off\">Map binding</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'[class]': 'classExpr'} </code-example> <code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]': 'styleExpr'} </code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">靜態值</nt-wrapper><nt-wrapper translation-origin=\"off\">Static value</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'class': 'foo'} </code-example> <code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'<a href=\"api/animations/style\" class=\"code-anchor\">style</a>': 'color: blue'} </code-example></td>\n</tr>\n\n</tbody>\n</table>\n</li>\n<li>\n<p translation-result=\"on\">元件宿主繫結的優先順序最低。</p><p translation-origin=\"off\">Component host bindings have the lowest precedence.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">繫結型別</nt-wrapper><nt-wrapper translation-origin=\"off\">Binding type</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">例子</nt-wrapper><nt-wrapper translation-origin=\"off\">Examples</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">屬性繫結</nt-wrapper><nt-wrapper translation-origin=\"off\">Property binding</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'[class.foo]': 'hasFoo'} </code-example> <code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\">host: {'[style.color]': 'color'} </code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">對映繫結</nt-wrapper><nt-wrapper translation-origin=\"off\">Map binding</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'[class]': 'classExpression'} </code-example> <code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]': 'styleExpression'} </code-example></td>\n</tr>\n\n<tr>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">靜態值</nt-wrapper><nt-wrapper translation-origin=\"off\">Static value</nt-wrapper></td>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'class': 'foo'} </code-example> <code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> host: {'<a href=\"api/animations/style\" class=\"code-anchor\">style</a>': 'color: blue'} </code-example></td>\n</tr>\n\n</tbody>\n</table>\n</li>\n</ol>\n<h2 id=\"precedence-and-specificity\" translation-result=\"on\">優先順序與特異性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#precedence-and-specificity\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Precedence and specificity<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#precedence-and-specificity\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在下面的範例中，與 <code>[class.special]</code> 對特定類別的繫結優先於一般性的 <code>[class]</code> 繫結。同樣，到特定樣式的繫結（比如 <code>[style.color]</code>）要優先於一般性的 <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code> 繫結。</p><p translation-origin=\"off\">In the following example, binding to a specific class, as in <code>[class.special]</code>, takes precedence over a generic <code>[class]</code> binding.\nSimilarly, binding to a specific style, as in <code>[style.color]</code>, takes precedence over a generic <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code> binding.</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"attribute-binding/src/app/app.component.html\" region=\"basic-specificity\">\n&lt;h3&gt;Basic specificity&lt;/h3&gt;\n\n&lt;!-- The `class.special` binding overrides any value for the `special` class in `classExpression`.  --&gt;\n&lt;div [class.special]=\"isSpecial\" [class]=\"classExpression\"&gt;Some text.&lt;/div&gt;\n\n&lt;!-- The `style.border` binding overrides any value for the `border` property in `styleExpression`.  --&gt;\n&lt;div [style.border]=\"border\" [<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"&gt;Some text.&lt;/div&gt;\n\n</code-example>\n<h2 id=\"precedence-and-bindings-from-different-sources\" translation-result=\"on\">來自不同來源的優先順序和繫結<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#precedence-and-bindings-from-different-sources\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Precedence and bindings from different sources<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#precedence-and-bindings-from-different-sources\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">特異性規則也作用於繫結，即使它們來自不同的來源。元素可以具有源自針對自身範本的繫結、源自其匹配指令的宿主繫結以及源自匹配其元件的宿主繫結。</p><p translation-origin=\"off\">Specificity rules also apply to bindings even when they originate from different sources.\nAn element can have bindings that originate from its own template, from host bindings on matched directives, and from host bindings on matched components.</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"attribute-binding/src/app/app.component.html\" region=\"source-specificity\">\n&lt;h3&gt;Source specificity&lt;/h3&gt;\n\n&lt;!-- The `class.special` template binding overrides any host binding to the `special` class set by `dirWithClassBinding` or `comp-with-host-binding`.--&gt;\n\n&lt;comp-with-host-binding [class.special]=\"isSpecial\" dirWithClassBinding&gt;&lt;/comp-with-host-binding&gt;\n\n\n&lt;!-- The `style.color` template binding overrides any host binding to the `color` property set by `dirWithStyleBinding` or `comp-with-host-binding`. --&gt;\n&lt;div&gt;\n  &lt;comp-with-host-binding [style.color]=\"color\" dirWithStyleBinding&gt;&lt;/comp-with-host-binding&gt;\n&lt;/div&gt;\n\n&lt;h3&gt;Dynamic vs <a href=\"api/upgrade/static\" class=\"code-anchor\">static</a>&lt;/h3&gt;\n\n&lt;!-- If `[class.special]` equals false, this value overrides the `class=\"special\"` below --&gt;\n&lt;div class=\"special\" [class.special]=\"false\"&gt;Some text.&lt;/div&gt;\n\n&lt;!-- If `styleExpression` has a value for the `border` property, this value overrides the `<a href=\"api/animations/style\" class=\"code-anchor\">style</a>=\"border: dotted darkblue 3px\"` below --&gt;\n&lt;div <a href=\"api/animations/style\" class=\"code-anchor\">style</a>=\"border: dotted darkblue 3px\" [<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"&gt;Some text.&lt;/div&gt;\n\n\n&lt;div class=\"readability\"&gt;\n  &lt;comp-with-host-binding dirWithHostBinding&gt;&lt;/comp-with-host-binding&gt;\n&lt;/div&gt;\n\n&lt;app-my-input-with-attribute-decorator type=\"number\"&gt;&lt;/app-my-input-with-attribute-decorator&gt;\n\n\n</code-example>\n<h2 id=\"precedence-of-bindings-and-static-attributes\" translation-result=\"on\">繫結和靜態 Attribute 的優先順序<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#precedence-of-bindings-and-static-attributes\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Precedence of bindings and static attributes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#precedence-of-bindings-and-static-attributes\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">繫結優先於靜態屬性，因為它們是動態的。在以下情況下，<code>class</code> 和 <code>[class]</code> 具有相似的特異性，但是 <code>[class]</code> 繫結更有優先權。</p><p translation-origin=\"off\">Bindings take precedence over static attributes because they are dynamic.\nIn the following case, <code>class</code> and <code>[class]</code> have similar specificity, but the <code>[class]</code> binding takes precedence.</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"attribute-binding/src/app/app.component.html\" region=\"dynamic-priority\">\n&lt;h3&gt;Dynamic vs <a href=\"api/upgrade/static\" class=\"code-anchor\">static</a>&lt;/h3&gt;\n\n&lt;!-- If `[class.special]` equals false, this value overrides the `class=\"special\"` below --&gt;\n&lt;div class=\"special\" [class.special]=\"false\"&gt;Some text.&lt;/div&gt;\n\n&lt;!-- If `styleExpression` has a value for the `border` property, this value overrides the `<a href=\"api/animations/style\" class=\"code-anchor\">style</a>=\"border: dotted darkblue 3px\"` below --&gt;\n&lt;div <a href=\"api/animations/style\" class=\"code-anchor\">style</a>=\"border: dotted darkblue 3px\" [<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"&gt;Some text.&lt;/div&gt;\n\n\n</code-example>\n<p><a id=\"styling-delegation\"></a></p>\n<h2 id=\"delegating-to-styles-with-lower-precedence\" translation-result=\"on\">委託給優先順序較低的樣式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#delegating-to-styles-with-lower-precedence\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Delegating to styles with lower precedence<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/style-precedence#delegating-to-styles-with-lower-precedence\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">透過使用 <code>undefined</code> 值，較高優先順序的樣式也可以讓位於較低優先順序的樣式。比如，考慮以下範本：</p><p translation-origin=\"off\">Higher precedence styles can defer to lower precedence styles using <code>undefined</code> values.\nFor example, consider the following template:</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"attribute-binding/src/app/app.component.html\" region=\"style-delegation\">\n&lt;comp-with-host-binding dirWithHostBinding&gt;&lt;/comp-with-host-binding&gt;\n\n</code-example>\n<p translation-result=\"on\">假設 <code>dirWithHostBinding</code> 指令和 <code>comp-with-host-binding</code> 元件都具有 <code>[style.width]</code> 宿主繫結。</p><p translation-origin=\"off\">Imagine that the <code>dirWithHostBinding</code> directive and the <code>comp-with-host-binding</code> component both have a <code>[style.width]</code> host binding.</p>\n\n<code-example header=\"src/app/comp-with-host-binding.component.ts and dirWithHostBinding.directive.ts\" path=\"attribute-binding/src/app/comp-with-host-binding.component.ts\" region=\"hostbinding\">\n@<a href=\"api/core/HostBinding\" class=\"code-anchor\">HostBinding</a>('style.width')\nwidth = '200px';\n\n</code-example>\n<p translation-result=\"on\">如果 <code>dirWithHostBinding</code> 將其繫結設定為 <code>undefined</code>，則 <code>width</code> 屬性將回退到 <code>comp-with-host-binding</code> 宿主繫結的值。</p><p translation-origin=\"off\">If <code>dirWithHostBinding</code> sets its binding to <code>undefined</code>, the <code>width</code> property falls back to the value of the <code>comp-with-host-binding</code> host binding.</p>\n\n<code-example format=\"typescript\" header=\"dirWithHostBinding directive\" language=\"typescript\">\n\n@<a href=\"api/core/HostBinding\" class=\"code-anchor\">HostBinding</a>('style.width')\nwidth = ''; // undefined\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">但如果 <code>dirWithHostBinding</code> 將其繫結設定為 <code>null</code>（只有 undefined 是例外），則 Angular 會完全移除 <code>width</code> 屬性。</p><p translation-origin=\"off\">If <code>dirWithHostBinding</code> sets its binding to <code>null</code>, Angular removes the <code>width</code> property entirely.</p>\n\n<code-example format=\"typescript\" header=\"dirWithHostBinding\" language=\"typescript\">\n\n@<a href=\"api/core/HostBinding\" class=\"code-anchor\">HostBinding</a>('style.width')\nwidth = null;\n\n</code-example>\n</div>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/class-binding\n-->\n<!-- links from this doc:\n - api/animations/style\n - api/core/HostBinding\n - api/upgrade/static\n - guide/style-precedence#delegating-to-styles-with-lower-precedence\n - guide/style-precedence#precedence-and-bindings-from-different-sources\n - guide/style-precedence#precedence-and-specificity\n - guide/style-precedence#precedence-of-bindings-and-static-attributes\n - guide/style-precedence#style-precedence\n - guide/style-precedence#優先順序與特異性\n - guide/style-precedence#委託給優先順序較低的樣式\n - guide/style-precedence#來自不同來源的優先順序和繫結\n - guide/style-precedence#樣式的優先順序\n - guide/style-precedence#繫結和靜態-attribute-的優先順序\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/style-precedence.md?message=docs%3A%20請簡述你的修改...\n-->"}