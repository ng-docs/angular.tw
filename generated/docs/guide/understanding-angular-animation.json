{"id":"guide/understanding-angular-animation","title":"Understanding Angular animation","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/understanding-angular-animation.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"understanding-angular-animation\" translation-result=\"on\">理解 Angular 動畫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#understanding-angular-animation\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Understanding Angular animation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#understanding-angular-animation\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">動畫提供了運動的錯覺：HTML 元素會隨時間改變樣式。精心設計的動畫可以讓你的應用程式更加有趣和易於使用，但它們不僅僅是裝飾性的。</p><p translation-origin=\"off\">Animation provides the illusion of motion: HTML elements change styling over time. Well-designed animations can make your application more fun and straightforward to use, but they aren't just cosmetic.</p>\n\n<h2 id=\"prerequisites\" translation-result=\"on\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在學習 Angular 動畫之前，你應該已熟悉如何建構基本的 Angular 應用程式：</p><p translation-origin=\"off\">Before learning Angular animations, you should be familiar with building basic Angular apps:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"tutorial\">課程</a></p><p translation-origin=\"off\"><a href=\"tutorial\">Tutorial</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/architecture\">架構概覽</a></p><p translation-origin=\"off\"><a href=\"guide/architecture\">Architecture Overview</a></p>\n\n</li>\n</ul>\n<p translation-result=\"on\">動畫可以透過多種方式改善你的應用程式和使用者體驗：</p><p translation-origin=\"off\">Animations can improve your application and user experience in many ways:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">沒有動畫，Web 頁面的過渡就會顯得突兀、不協調</p><p translation-origin=\"off\">Without animations, web page transitions can seem abrupt and jarring</p>\n\n</li>\n<li>\n<p translation-result=\"on\">運動能極大地提升使用者體驗，因此動畫可以讓使用者察覺到應用對他們的操作做出了響應</p><p translation-origin=\"off\">Motion greatly enhances the user experience, so animations give users a chance to detect the application's response to their actions</p>\n\n</li>\n<li>\n<p translation-result=\"on\">良好的動畫可以直觀的把使用者的注意力吸引到要留意的地方</p><p translation-origin=\"off\">Good animations intuitively call the user's attention to where it is needed</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">通常，動畫會隨時間進行多種樣式<em>轉換</em>。HTML 元素可以移動、改變顏色、增大、縮小、淡化或滑出頁面。這些變化可以同時或依次發生。你可以控制每個轉換的時間。</p><p translation-origin=\"off\">Typically, animations involve multiple style <em>transformations</em> over time.\nAn HTML element can move, change color, grow, shrink, fade, or slide off the page. These changes can occur simultaneously or sequentially. You can control the timing of each transformation.</p>\n\n<p translation-result=\"on\">Angular 的動畫系統建立在 CSS 能力之上，這意味著你可以對瀏覽器認為可設定動畫的任何屬性設定動畫。這包括位置、大小、變換、顏色、邊框等。</p><p translation-origin=\"off\">Angular's animation system is built on CSS capability, which means you can animate any property that the browser considers animatable. This includes positions, sizes, transforms, colors, borders, and more.</p>\n\n<p translation-result=\"on\">W3C 在其 <a href=\"https://www.w3.org/TR/css-transitions-1\">CSS Transitions</a> 頁面上維護了一個動畫屬性列表。</p><p translation-origin=\"off\">The W3C maintains a list of animatable properties on its <a href=\"https://www.w3.org/TR/css-transitions-1\">CSS Transitions</a> page.</p>\n\n<h2 id=\"animation-transition-states\" translation-result=\"on\">動畫過渡狀態<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#animation-transition-states\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Animation transition states<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#animation-transition-states\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">動畫過渡狀態表示動畫中某些點的樣式，你可以對其進行動畫處理。例如，你可以將一個狀態設定為不同狀態的起點和動畫的結束點。</p><p translation-origin=\"off\">Animation transition states represent a style at certain points in your animations that you can animate to and from. For example, you can animate a state as the starting point to a different state and the end of an animation.</p>\n\n<p translation-result=\"on\">為將單個 HTML 元素從一種狀態更改為另一種狀態之間的過渡設定動畫。例如，你可以指定按鈕根據使用者的最後一個操作顯示<strong>開啟</strong>或<strong>關閉</strong>。當按鈕處於 <code>open</code> 狀態時，它是完全可見的黃色。當它處於 <code>closed</code> 狀態時，它是半透明的藍色。</p><p translation-origin=\"off\">Animate a transition that changes a single HTML element from one state to another. For example, you can specify that a button displays either <strong>Open</strong> or <strong>Closed</strong> based on the user's last action. When the button is in the <code>open</code> state, it's visible and yellow. When it's in the <code>closed</code> state, it's translucent and blue.</p>\n\n<p translation-result=\"on\">在 HTML 中，這些屬性都使用普通的 CSS 樣式，比如顏色（color）和透明度（opacity）。在 Angular 中，使用 <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> 函式來指定一組用作動畫的 CSS 樣式。可以為動畫狀態指定一組樣式，併為該狀態指定一個名字，比如 <code>open</code> 或 <code>closed</code>。</p><p translation-origin=\"off\">In HTML, these attributes are set using ordinary CSS styles such as color and opacity. In Angular, use the <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> function to specify a set of CSS styles for use with animations. Collect a set of styles in an animation state, and give the state a name, such as <code>open</code> or <code>closed</code>.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">要建立一個新的 <code>open-close</code> 元件並使用簡單的過渡動畫進行動畫處理，請在命令列工具中執行以下命令來建立元件：</p><p translation-origin=\"off\">To create a new <code>open-close</code> component to animate with simple transitions, run the following command in the command line tool to create the component:</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng g component open-close\n\n</code-example>\n<p translation-result=\"on\">這將在 <code>src/app/open-close.component.ts</code> 中建立該元件。</p><p translation-origin=\"off\">This creates the component at <code>src/app/open-close.component.ts</code>.</p>\n\n</div>\n\n  <div class=\"reviewed\">最後複查時間：12/19/2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/style\n - guide/architecture\n - guide/understanding-angular-animation#animation-transition-states\n - guide/understanding-angular-animation#prerequisites\n - guide/understanding-angular-animation#understanding-angular-animation\n - guide/understanding-angular-animation#前提條件\n - guide/understanding-angular-animation#動畫過渡狀態\n - guide/understanding-angular-animation#理解-angular-動畫\n - tutorial\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/understanding-angular-animation.md?message=docs%3A%20請簡述你的修改...\n - https://www.w3.org/TR/css-transitions-1\n-->"}