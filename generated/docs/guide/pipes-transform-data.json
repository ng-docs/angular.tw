{"id":"guide/pipes-transform-data","title":"Transforming data with parameters and chained pipes","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipes-transform-data.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"transforming-data-with-parameters-and-chained-pipes\" translation-result=\"on\">使用引數和管道鏈來格式化資料<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#transforming-data-with-parameters-and-chained-pipes\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Transforming data with parameters and chained pipes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#transforming-data-with-parameters-and-chained-pipes\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">可以用可選引數微調管道的輸出。比如，你可以使用 <a href=\"api/common/CurrencyPipe\" title=\"API 參考\"><code>CurrencyPipe</code></a> 和國家程式碼（如 EUR）作為引數。範本表示式 <code>{{ amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a>:'EUR' }}</code> 會把 <code>amount</code> 轉換成歐元。緊跟在管道名稱（<code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code>）後面的是冒號（<code>:</code>）和引數值（<code>'EUR'</code>）。</p><p translation-origin=\"off\">Use optional parameters to fine-tune a pipe's output.\nFor example, use the <a href=\"api/common/CurrencyPipe\" title=\"API reference\"><code>CurrencyPipe</code></a> with a country code such as EUR as a parameter.\nThe template expression <code>{{ amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a>:'EUR' }}</code> transforms the <code>amount</code> to currency in euros.\nFollow the pipe name (<code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code>) with a colon (<code>:</code>) and the parameter value (<code>'EUR'</code>).</p>\n\n<p translation-result=\"on\">如果管道能接受多個引數，就用冒號分隔這些值。比如，<code>{{ amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a>:'EUR':'Euros '}}</code> 會把第二個引數（字串 <code>'Euros '</code>）新增到輸出字串中。你可以使用任何有效的範本表示式作為引數，比如字串字面量或元件的屬性。</p><p translation-origin=\"off\">If the pipe accepts multiple parameters, separate the values with colons.\nFor example, <code>{{ amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a>:'EUR':'Euros '}}</code> adds the second parameter, the string literal <code>'Euros '</code>, to the output string. Use any valid template expression as a parameter, such as a string literal or a component property.</p>\n\n<p translation-result=\"on\">有些管道需要至少一個引數，並且允許使用更多的可選引數，比如 <a href=\"api/common/SlicePipe\" title=\"SlicePipe 的 API 參考\"><code>SlicePipe</code></a>。比如，<code>{{ slice:1:5 }}</code> 會建立一個新陣列或字串，它以第 <code>1</code> 個元素開頭，並以第 <code>5</code> 個元素結尾。</p><p translation-origin=\"off\">Some pipes require at least one parameter and allow more optional parameters, such as <a href=\"api/common/SlicePipe\" title=\"API reference for SlicePipe\"><code>SlicePipe</code></a>. For example, <code>{{ slice:1:5 }}</code> creates a new array or string containing a subset of the elements starting with element <code>1</code> and ending with element <code>5</code>.</p>\n\n<h2 id=\"example-formatting-a-date\" translation-result=\"on\">範例：格式化日期<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#example-formatting-a-date\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Example: Formatting a date<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#example-formatting-a-date\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">下面的例子顯示了兩種不同格式（<code>'shortDate'</code> 和 <code>'fullDate'</code>）之間的切換：</p><p translation-origin=\"off\">The tabs in the following example demonstrates toggling between two different formats (<code>'shortDate'</code> and <code>'fullDate'</code>):</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">該 <code>app.component.html</code> 範本使用 <a href=\"api/common/DatePipe\"><code>DatePipe</code></a>（名為 <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code>）的格式引數把日期顯示為 <strong>04/15/88</strong>。</p><p translation-origin=\"off\">The <code>app.component.html</code> template uses a format parameter for the <a href=\"api/common/DatePipe\"><code>DatePipe</code></a> (named <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code>) to show the date as <strong>04/15/88</strong>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>hero-birthday2.component.ts</code> 元件把該管道的 format 引數繫結到 <code>template</code> 中元件的 <code>format</code> 屬性，並添加了一個按鈕，其 click 事件繫結到了該元件的 <code>toggleFormat()</code> 方法。</p><p translation-origin=\"off\">The <code>hero-birthday2.component.ts</code> component binds the pipe's format parameter to the component's <code>format</code> property in the <code>template</code> section, and adds a button for a click event bound to the component's <code>toggleFormat()</code> method.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>hero-birthday2.component.ts</code> 元件的 <code>toggleFormat()</code> 方法會在短格式（<code>'shortDate'</code>）和長格式（<code>'fullDate'</code>）之間切換該元件的 <code>format</code> 屬性。</p><p translation-origin=\"off\">The <code>hero-birthday2.component.ts</code> component's <code>toggleFormat()</code> method toggles the component's <code>format</code> property between a short form\n(<code>'shortDate'</code>) and a longer form (<code>'fullDate'</code>).</p>\n\n</li>\n</ul>\n<code-tabs>\n    <code-pane header=\"src/app/app.component.html\" region=\"format-birthday\" path=\"pipes/src/app/app.component.html\">\n&lt;p&gt;The hero's birthday is {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>:\"MM/dd/yy\" }} &lt;/p&gt;\n\n</code-pane>\n    <code-pane header=\"src/app/hero-birthday2.component.ts (template)\" region=\"template\" path=\"pipes/src/app/hero-birthday2.component.ts\">\ntemplate: `\n  &lt;p&gt;The hero's birthday is {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>:format }}&lt;/p&gt;\n  &lt;button type=\"button\" (click)=\"toggleFormat()\"&gt;Toggle Format&lt;/button&gt;\n`\n\n</code-pane>\n    <code-pane header=\"src/app/hero-birthday2.component.ts (class)\" region=\"class\" path=\"pipes/src/app/hero-birthday2.component.ts\">\nexport class HeroBirthday2Component {\n  birthday = new Date(1988, 3, 15); // April 15, 1988 -- since month parameter is zero-based\n  toggle = true; // start with true == shortDate\n\n  get format()   { return this.toggle ? 'shortDate' : 'fullDate'; }\n  toggleFormat() { this.toggle = !this.toggle; }\n}\n\n\n</code-pane>\n</code-tabs>\n<p translation-result=\"on\">點選 <strong>Toggle Format</strong> 按鈕可以在 <strong>04/15/1988</strong> 和 <strong>Friday, April 15, 1988</strong> 之間切換日期格式。</p><p translation-origin=\"off\">Clicking the <strong>Toggle Format</strong> button alternates the date format between <strong>04/15/1988</strong> and <strong>Friday, April 15, 1988</strong>.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">關於 <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code> 管道的格式選項，參閱 <a href=\"api/common/DatePipe\" title=\"DatePipe API 參考手冊頁面\">DatePipe</a>。</p><p translation-origin=\"off\">For <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code> pipe format options, see <a href=\"api/common/DatePipe\" title=\"DatePipe API Reference page\">DatePipe</a>.</p>\n\n</div>\n<h2 id=\"example-applying-two-formats-by-chaining-pipes\" translation-result=\"on\">範例：透過串聯管道應用兩種格式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#example-applying-two-formats-by-chaining-pipes\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Example: Applying two formats by chaining pipes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#example-applying-two-formats-by-chaining-pipes\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">可以對管道進行串聯，以便一個管道的輸出成為下一個管道的輸入。</p><p translation-origin=\"off\">Chain pipes so that the output of one pipe becomes the input to the next.</p>\n\n<p translation-result=\"on\">在下面的範例中，串聯管道首先將格式應用於一個日期值，然後將格式化之後的日期轉換為大寫字元。<code>src/app/app.component.html</code> 範本的第一個標籤頁把 <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code> 和 <code><a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">UpperCasePipe</a></code> 的串聯起來，將其顯示為 <strong>APR 15, 1988</strong>。<code>src/app/app.component.html</code> 範本的第二個標籤頁在串聯 <code><a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a></code> 之前，還把 <code>fullDate</code> 引數傳給了 <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code>，將其顯示為 <strong>FRIDAY, APRIL 15, 1988</strong>。</p><p translation-origin=\"off\">In the following example, chained pipes first apply a format to a date value, then convert the formatted date to uppercase characters.\nThe first tab for the <code>src/app/app.component.html</code> template chains <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code> and <code><a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">UpperCasePipe</a></code> to display the birthday as <strong>APR 15, 1988</strong>.\nThe second tab for the <code>src/app/app.component.html</code> template passes the <code>fullDate</code> parameter to <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code> before chaining to <code><a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a></code>, which produces <strong>FRIDAY, APRIL 15, 1988</strong>.</p>\n\n<code-tabs>\n    <code-pane header=\"src/app/app.component.html (1)\" region=\"chained-birthday\" path=\"pipes/src/app/app.component.html\">\nThe chained hero's birthday is\n{{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a> | <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a>}}\n\n</code-pane>\n    <code-pane header=\"src/app/app.component.html (2)\" region=\"chained-parameter-birthday\" path=\"pipes/src/app/app.component.html\">\nThe chained hero's birthday is\n{{  birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>:'fullDate' | uppercase}}\n\n</code-pane>\n</code-tabs>\n\n  <div class=\"reviewed\">最後複查時間：4/1/2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/SlicePipe\n - api/common/UpperCasePipe\n - guide/pipes-transform-data#example-applying-two-formats-by-chaining-pipes\n - guide/pipes-transform-data#example-formatting-a-date\n - guide/pipes-transform-data#transforming-data-with-parameters-and-chained-pipes\n - guide/pipes-transform-data#使用引數和管道鏈來格式化資料\n - guide/pipes-transform-data#範例格式化日期\n - guide/pipes-transform-data#範例透過串聯管道應用兩種格式\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipes-transform-data.md?message=docs%3A%20請簡述你的修改...\n-->"}