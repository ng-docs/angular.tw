{"id":"guide/service-worker-devops","title":"Service worker in production","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/service-worker-devops.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"service-worker-in-production\" translation-result=\"on\">生產環境下的 Service Worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-in-production\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Service worker in production<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-in-production\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本頁講的是如何使用 Angular Service Worker 釋出和支援生產環境下的應用。它解釋了 Angular Service Worker 如何滿足大規模生產環境的需求、Service Worker 在多種條件下有哪些行為以及有哪些可用的資源和故障保護機制。</p><p translation-origin=\"off\">This page is a reference for deploying and supporting production applications that use the Angular service worker.\nIt explains how the Angular service worker fits into the larger production environment, the service worker's behavior under various conditions, and available resources and fail-safes.</p>\n\n<h2 id=\"prerequisites\" translation-result=\"on\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">對下列知識有基本的瞭解：</p><p translation-origin=\"off\">A basic understanding of the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/service-worker-communications\">與 Service Worker 通訊</a>.</p><p translation-origin=\"off\"><a href=\"guide/service-worker-communications\">Service Worker Communication</a></p>\n\n</li>\n</ul>\n<h2 id=\"service-worker-and-caching-of-application-resources\" translation-result=\"on\">Service Worker 與應用資源的快取<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-and-caching-of-application-resources\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Service worker and caching of application resources<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-and-caching-of-application-resources\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可以把 Angular Service Worker 想象成一個轉發式快取或裝在終端使用者瀏覽器中的 CDN（內容分發網路）邊緣。Service Worker 的工作是從本地快取中響應 Angular 應用對資源或資料的請求，而不用等待網路。和所有快取一樣，它有一些規則來決定內容該如何過期或更新。</p><p translation-origin=\"off\">Imagine the Angular service worker as a forward cache or a Content Delivery Network (CDN) edge that is installed in the end user's web browser.\nThe service worker responds to requests made by the Angular application for resources or data from a local cache, without needing to wait for the network.\nLike any cache, it has rules for how content is expired and updated.</p>\n\n<p><a id=\"versions\"></a></p>\n<h3 id=\"application-versions\" translation-result=\"on\">應用的版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#application-versions\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Application versions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#application-versions\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在 Angular Service Worker 的語境下，“版本”是指用來表示 Angular 應用的某一次建構成果的一組資源。當應用的一個新的建構釋出時，Service Worker 就把它看做此應用的一個新版本。就算只修改了一個檔案，也同樣如此。在任何一個給定的時間，Service Worker 可能會在它的快取中擁有此應用的多個版本，這幾個版本也都能用於提供服務。要了解更多，參閱 <a href=\"guide/service-worker-devops#tabs\">App 選項卡</a>。</p><p translation-origin=\"off\">In the context of an Angular service worker, a \"version\" is a collection of resources that represent a specific build of the Angular application.\nWhenever a new build of the application is deployed, the service worker treats that build as a new version of the application.\nThis is true even if only a single file is updated.\nAt any given time, the service worker might have multiple versions of the application in its cache and it might be serving them simultaneously.\nFor more information, see the <a href=\"guide/service-worker-devops#tabs\">Application tabs</a> section.</p>\n\n<p translation-result=\"on\">要保持應用的整體性，Angular Service Worker 會用所有的檔案共同組成一個版本。組成版本的這些檔案通常包括 HTML、JS 和 CSS 檔案。把這些檔案分成一組是至關重要的，因為它們會互相參考，並且依賴於一些特定內容。比如，<code>index.html</code> 檔案可能有個參考 <code>bundle.js</code> 的 <code>&lt;script&gt;</code> 標籤，它可能會試圖從這個指令碼中呼叫一個 <code>startApp()</code> 函式。任何時候，只要這個版本的 <code>index.html</code> 被提供了，與它對應的 <code>bundle.js</code> 也必須同時提供。這種情況下，使用呼叫了 <code>startApp()</code> 的老的 <code>index.html</code> 並同時使用定義了 <code>runApp()</code> 的新 bundle 就是無效的。</p><p translation-origin=\"off\">To preserve application integrity, the Angular service worker groups all files into a version together.\nThe files grouped into a version usually include HTML, JS, and CSS files.\nGrouping of these files is essential for integrity because HTML, JS, and CSS files frequently refer to each other and depend on specific content.\nFor example, an <code>index.html</code> file might have a <code>&lt;script&gt;</code> tag that references <code>bundle.js</code> and it might attempt to call a function <code>startApp()</code> from within that script.\nAny time this version of <code>index.html</code> is served, the corresponding <code>bundle.js</code> must be served with it.\nFor example, assume that the <code>startApp()</code> function is renamed to <code>runApp()</code> in both files.\nIn this scenario, it is not valid to serve the old <code>index.html</code>, which calls <code>startApp()</code>, along with the new bundle, which defines <code>runApp()</code>.</p>\n\n<p translation-result=\"on\">當使用延遲載入模組時，檔案的整體性就顯得格外重要。某個 JS 包可能參考很多惰性塊，而這些惰性塊的檔名在應用的每次特定的建構中都是唯一的。如果執行應用的 <code>X</code> 版本檢視載入一個惰性塊，但該塊的伺服器已經升級到了 <code>X + 1</code> 版本，這次延遲載入操作就會失敗。</p><p translation-origin=\"off\">This file integrity is especially important when lazy loading modules.\nA JS bundle might reference many lazy chunks, and the filenames of the lazy chunks are unique to the particular build of the application.\nIf a running application at version <code>X</code> attempts to load a lazy chunk, but the server has already updated to version <code>X + 1</code>, the lazy loading operation fails.</p>\n\n<p translation-result=\"on\">本應用的版本識別符號由其所有資源的內容決定，如果它們中的任何一個發生了變化，則版本識別符號也隨之改變。實際上，版本是由 <code>ngsw.json</code> 檔案的內容決定的，包含了所有已知內容的雜湊值。如果任何一個被快取的檔案發生了變化，則該檔案的雜湊也將在 <code>ngsw.json</code> 中隨之變化，從而導致 Angular Service Worker 將這個活動檔案的集合視為一個新版本。</p><p translation-origin=\"off\">The version identifier of the application is determined by the contents of all resources, and it changes if any of them change.\nIn practice, the version is determined by the contents of the <code>ngsw.json</code> file, which includes hashes for all known content.\nIf any of the cached files change, the file's hash changes in <code>ngsw.json</code>. This change causes the Angular service worker to treat the active set of files as a new version.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">此建構過程會使用來自 <code>ngsw-config.json</code> 的資訊建立清單檔案（<code>ngsw.json</code>）。</p><p translation-origin=\"off\">The build process creates the manifest file, <code>ngsw.json</code>, using information from <code>ngsw-config.json</code>.</p>\n\n</div>\n<p translation-result=\"on\">藉助 Angular Service Worker 的這種版本控制行為，應用伺服器就可以確保這個 Angular 應用中的這組檔案始終保持一致。</p><p translation-origin=\"off\">With the versioning behavior of the Angular service worker, an application server can ensure that the Angular application always has a consistent set of files.</p>\n\n<h4 id=\"update-checks\" translation-result=\"on\">更新檢測<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#update-checks\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Update checks<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#update-checks\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">每當使用者開啟或重新整理應用程式時，Angular Service Worker 都會透過檢視清單（manifest）檔案 “ngsw.json” 的更新來檢查該應用程式的更新。如果它找到了更新，就會自動下載並快取這個版本，並在下次載入應用程式時提供。</p><p translation-origin=\"off\">Every time the user opens or refreshes the application, the Angular service worker checks for updates to the application by looking for updates to the <code>ngsw.json</code> manifest.\nIf an update is found, it is downloaded and cached automatically, and is served the next time the application is loaded.</p>\n\n<h3 id=\"resource-integrity\" translation-result=\"on\">資源整體性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#resource-integrity\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Resource integrity<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#resource-integrity\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">長週期快取的潛在副作用之一就是可能無意中快取了無效的資源。在普通的 HTTP 快取中，硬重新整理或快取過期限制了快取這種無效檔案導致的負面影響。而 Service Worker 會忽略這樣的約束，事實上會對整個應用程式進行長期快取。因此，讓 Service Worker 獲得正確的內容就顯得至關重要，所以它會保持這些資源的雜湊值，以維護其完整性。</p><p translation-origin=\"off\">One of the potential side effects of long caching is inadvertently caching a resource that's not valid.\nIn a normal HTTP cache, a hard refresh or the cache expiring limits the negative effects of caching a file that's not valid.\nA service worker ignores such constraints and effectively long-caches the entire application.\nIt's important that the service worker gets the correct content, so it keeps hashes of the resources to maintain their integrity.</p>\n\n<h4 id=\"hashed-content\" translation-result=\"on\">雜湊內容<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#hashed-content\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Hashed content<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#hashed-content\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">為了確保資源的整體性，Angular Service Worker 會驗證所有帶雜湊的資源的雜湊值。通常，對於 <a href=\"cli\">Angular CLI</a> 應用程式，使用者的 <code>src/ngsw-config.json</code> 配置檔案中會涵蓋 <code>dist</code> 目錄下的所有內容。</p><p translation-origin=\"off\">To ensure resource integrity, the Angular service worker validates the hashes of all resources for which it has a hash.\nFor an application created with the <a href=\"cli\">Angular CLI</a>, this is everything in the <code>dist</code> directory covered by the user's <code>src/ngsw-config.json</code> configuration.</p>\n\n<p translation-result=\"on\">如果某個特定的檔案未能透過驗證，Angular Service Worker 就會嘗試用 “cache-busting” URL 為引數重新獲取內容，以消除瀏覽器或中間快取的影響。如果該內容也未能透過驗證，則 Service Worker 會認為該應用的整個版本都無效，並停止用它提供服務。如有必要，Service Worker 會進入安全模式，這些請求將退化為直接存取網路。如果服務無效、損壞或內容過期的風險很高，則會選擇不使用快取。</p><p translation-origin=\"off\">If a particular file fails validation, the Angular service worker attempts to re-fetch the content using a \"cache-busting\" URL parameter to prevent browser or intermediate caching.\nIf that content also fails validation, the service worker considers the entire version of the application to not be valid and stops serving the application.\nIf necessary, the service worker enters a safe mode where requests fall back on the network. The service worker doesn't use its cache if there's a high risk of serving content that is broken, outdated, or not valid.</p>\n\n<p translation-result=\"on\">導致雜湊值不匹配的原因有很多：</p><p translation-origin=\"off\">Hash mismatches can occur for a variety of reasons:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">在源伺服器和終端使用者之間快取圖層可能會提供陳舊的內容。</p><p translation-origin=\"off\">Caching layers between the origin server and the end user could serve stale content</p>\n\n</li>\n<li>\n<p translation-result=\"on\">非原子化的部署可能會導致 Angular Service Worker 看到部分更新後的內容。</p><p translation-origin=\"off\">A non-atomic deployment could result in the Angular service worker having visibility of partially updated content</p>\n\n</li>\n<li>\n<p translation-result=\"on\">建構過程中的錯誤可能會導致更新了資源，卻沒有更新 <code>ngsw.json</code>。反之，也可能發生沒有更新資源，卻更新了 <code>ngsw.json</code> 的情況。</p><p translation-origin=\"off\">Errors during the build process could result in updated resources without <code>ngsw.json</code> being updated.\nThe reverse could also happen resulting in an updated <code>ngsw.json</code> without updated resources.</p>\n\n</li>\n</ul>\n<h4 id=\"unhashed-content\" translation-result=\"on\">不帶雜湊的內容<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#unhashed-content\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Unhashed content<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#unhashed-content\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\"><code>ngsw.json</code> 清單中唯一帶雜湊值的資源就是建構清單時 <code>dist</code> 目錄中的資源。而其它資源，特別是從 CDN 載入的資源，其內容在建構時是未知的，或者會比應用程式部署得更頻繁。</p><p translation-origin=\"off\">The only resources that have hashes in the <code>ngsw.json</code> manifest are resources that were present in the <code>dist</code> directory at the time the manifest was built.\nOther resources, especially those loaded from CDNs, have content that is unknown at build time or are updated more frequently than the application is deployed.</p>\n\n<p translation-result=\"on\">如果 Angular Service Worker 沒有雜湊可以驗證給定的資源，它仍然會快取它的內容，但會使用 “重新驗證時失效” 的策略來承認 HTTP 快取頭。也就是說，即使被快取資源的 HTTP 快取頭指出該資源已不再有效，Angular Service Worker 仍然會繼續提供內容。同時它會在後台重新整理資源。這樣，那些被破壞的非雜湊資源留在快取中的時間就不會超出為它配置的生命週期。</p><p translation-origin=\"off\">If the Angular service worker does not have a hash to verify a resource is valid, it still caches its contents. At the same time, it honors the HTTP caching headers by using a policy of <em>stale while revalidate</em>.\nThe Angular service worker continues to serve a resource even after its HTTP caching headers indicate\nthat it is no longer valid. At the same time, it attempts to refresh the expired resource in the background.\nThis way, broken unhashed resources do not remain in the cache beyond their configured lifetimes.</p>\n\n<p><a id=\"tabs\"></a></p>\n<h3 id=\"application-tabs\" translation-result=\"on\">App 選項卡<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#application-tabs\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Application tabs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#application-tabs\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果應用程式的資源版本突然發生了變化或沒有給出警告，就可能會有問題。關於這些問題的描述，請參閱前面的 <a href=\"guide/service-worker-devops#versions\">版本</a> 部分。</p><p translation-origin=\"off\">It can be problematic for an application if the version of resources it's receiving changes suddenly or without warning.\nSee the <a href=\"guide/service-worker-devops#versions\">Application versions</a> section for a description of such issues.</p>\n\n<p translation-result=\"on\">Angular Service Worker 會保證：正在執行的應用程式會繼續執行和當前應用相同的版本。而如果在新的 Web 瀏覽器選項卡中打開了該應用的另一個例項，則會提供該應用的最新版本。因此，這個新標籤可以和原始標籤同時執行不同版本的應用。</p><p translation-origin=\"off\">The Angular service worker provides a guarantee: a running application continues to run the same version of the application.\nIf another instance of the application is opened in a new web browser tab, then the most current version of the application is served.\nAs a result, that new tab can be running a different version of the application than the original tab.</p>\n\n<div class=\"alert is-important\">\n<p translation-result=\"on\"><strong>重要</strong>：<br>\n這種擔保比普通的 Web 部署模型提供的擔保還要<strong>更強一點</strong>。\n如果沒有 Service Worker，則不能保證稍後在這個延遲載入的程式碼\n和其初始程式碼的版本是一樣的。</p><p translation-origin=\"off\"><strong>IMPORTANT</strong>: <br>\nThis guarantee is <strong>stronger</strong> than that provided by the normal web deployment model.\nWithout a service worker, there is no guarantee that lazily loaded code is from the same version as the application's initial code.</p>\n\n</div>\n<p translation-result=\"on\">Angular Service Worker 可能會在錯誤條件下更改正在執行的應用程式的版本，例如：</p><p translation-origin=\"off\">The Angular service worker might change the version of a running application under error conditions such as:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">由於雜湊失敗，當前版本變得無效</p><p translation-origin=\"off\">The current version becomes non-valid due to a failed hash</p>\n\n</li>\n<li>\n<p translation-result=\"on\">不相關的錯誤導致 Service Worker 進入安全模式並暫時停用它</p><p translation-origin=\"off\">An unrelated error causes the service worker to enter safe mode and deactivates it temporarily</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">當沒有標籤頁使用它們時，Angular Service Worker 會清理應用版本。</p><p translation-origin=\"off\">The Angular service worker cleans up application versions when no tab is using them.</p>\n\n<p translation-result=\"on\">另一些可能導致 Angular Service Worker 在執行期間改變版本的因素是一些正常事件：</p><p translation-origin=\"off\">Other reasons the Angular service worker might change the version of a running application are normal events:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">頁面被重新載入/重新整理。</p><p translation-origin=\"off\">The page is reloaded/refreshed</p>\n\n</li>\n<li>\n<p translation-result=\"on\">該頁面透過 <code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> 服務請求立即啟用這個更新。</p><p translation-origin=\"off\">The page requests an update be immediately activated using the <code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> service</p>\n\n</li>\n</ul>\n<h3 id=\"service-worker-updates\" translation-result=\"on\">Service Worker 更新<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-updates\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Service worker updates<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-updates\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">Angular Service Worker 是一個執行在 Web 瀏覽器中的小指令碼。有時，這個 Service Worker 也可能會需要更新，以修復錯誤和增強特性。</p><p translation-origin=\"off\">The Angular service worker is a small script that runs in web browsers.\nFrom time to time, the service worker is updated with bug fixes and feature improvements.</p>\n\n<p translation-result=\"on\">首次開啟應用時或在一段非活動時間之後再存取應用程式時，就會下載 Angular Service Worker。如果 Service Worker 發生了變化，就會在後台進行更新。</p><p translation-origin=\"off\">The Angular service worker is downloaded when the application is first opened and when the application is accessed after a period of inactivity.\nIf the service worker changes, it's updated in the background.</p>\n\n<p translation-result=\"on\">Angular Service Worker 的大部分更新對應用程式來說都是透明的。舊快取仍然有效，其內容仍然能正常使用。但是，在 Angular Service Worker 中可能偶爾會有錯誤修復或新功能，需要讓舊的快取失效。這時，應用程式就從會網路上透明地進行重新整理。</p><p translation-origin=\"off\">Most updates to the Angular service worker are transparent to the application. The old caches are still valid and content is still served normally.\nOccasionally, a bug fix or feature in the Angular service worker might require the invalidation of old caches.\nIn this case, the service worker transparently refreshes the application from the network.</p>\n\n<h3 id=\"bypassing-the-service-worker\" translation-result=\"on\">繞過 Service Worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#bypassing-the-service-worker\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Bypassing the service worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#bypassing-the-service-worker\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">某些情況下，你可能想要完全繞過 Service Worker，轉而讓瀏覽器處理請求。比如當你要用到某些 Service Worker 尚不支援的特性時（比如<a href=\"https://github.com/w3c/ServiceWorker/issues/1141\">報告檔案上傳的進度</a>）。</p><p translation-origin=\"off\">In some cases, you might want to bypass the service worker entirely and let the browser handle the request.\nAn example is when you rely on a feature that is currently not supported in service workers, such as <a href=\"https://github.com/w3c/ServiceWorker/issues/1141\">reporting progress on uploaded files</a>.</p>\n\n<p translation-result=\"on\">要想繞過 Service Worker，你可以設定一個名叫 <code>ngsw-bypass</code> 的請求頭或查詢引數。這個請求頭或查詢引數的值會被忽略，可以把它設為空字串或略去。</p><p translation-origin=\"off\">To bypass the service worker, set <code>ngsw-bypass</code> as a request header, or as a query parameter.\nThe value of the header or query parameter is ignored and can be empty or omitted.</p>\n\n<h3 id=\"service-worker-requests-when-the-server-cant-be-reached\" translation-result=\"on\">無法存取伺服器時的 Service Worker 請求<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-requests-when-the-server-cant-be-reached\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Service worker requests when the server can't be reached<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-requests-when-the-server-cant-be-reached\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">除非<a href=\"guide/service-worker-devops#bypassing-the-service-worker\">顯式繞過 Service Worker</a>，否則 Service Worker 會處理所有請求。根據快取的狀態和配置，Service Worker 可以返回快取的響應或將請求傳送到伺服器。Service Worker 僅快取對非修改型請求的響應，例如 <code>GET</code> 和 <code>HEAD</code>。</p><p translation-origin=\"off\">The service worker processes all requests unless the <a href=\"guide/service-worker-devops#bypassing-the-service-worker\">service worker is explicitly bypassed</a>.\nThe service worker either returns a cached response or sends the request to the server, depending on the state and configuration of the cache.\nThe service worker only caches responses to non-mutating requests, such as <code>GET</code> and <code>HEAD</code>.</p>\n\n<p translation-result=\"on\">如果 Service Worker 收到來自伺服器的錯誤或沒有收到響應，它會返回一個錯誤狀態，以表明呼叫的結果。例如，如果 Service Worker 沒有收到響應，它會建立並返回一個 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504\">504 Gateway Timeout</a> 狀態。此範例中的 <code>504</code> 狀態可能是因為伺服器離線或客戶端已斷開連線而返回的。</p><p translation-origin=\"off\">If the service worker receives an error from the server or it doesn't receive a response, it returns an error status that indicates the result of the call.\nFor example, if the service worker doesn't receive a response, it creates a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504\">504 Gateway Timeout</a> status to return. The <code>504</code> status in this example could be returned because the server is offline or the client is disconnected.</p>\n\n<h2 id=\"debugging-the-angular-service-worker\" translation-result=\"on\">除錯 Angular Service Worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#debugging-the-angular-service-worker\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Debugging the Angular service worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#debugging-the-angular-service-worker\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">偶爾，可能會需要檢查執行中的 Angular Service Worker，以調查問題或確保它在按設計執行。瀏覽器提供了用於除錯 Service Worker 的內建工具，而且 Angular Service Worker 本身也包含了一些有用的除錯功能。</p><p translation-origin=\"off\">Occasionally, it might be necessary to examine the Angular service worker in a running state to investigate issues or whether it's operating as designed.\nBrowsers provide built-in tools for debugging service workers and the Angular service worker itself includes useful debugging features.</p>\n\n<h3 id=\"locating-and-analyzing-debugging-information\" translation-result=\"on\">定位並分析除錯資訊<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#locating-and-analyzing-debugging-information\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Locating and analyzing debugging information<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#locating-and-analyzing-debugging-information\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">Angular Service Worker 會在虛擬目錄 <code>ngsw/</code> 下暴露出除錯資訊。目前，它暴露的唯一的 URL 是 <code>ngsw/state</code>。下面是這個除錯頁面中的一段範例內容：</p><p translation-origin=\"off\">The Angular service worker exposes debugging information under the <code>ngsw/</code> virtual directory.\nCurrently, the single exposed URL is <code>ngsw/state</code>.\nHere is an example of this debug page's contents:</p>\n\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nNGSW Debug Info:\n\nDriver version: 13.3.7\nDriver state: NORMAL ((nominal))\nLatest manifest hash: eea7f5f464f90789b621170af5a569d6be077e5c\nLast update check: never\n\n=== Version eea7f5f464f90789b621170af5a569d6be077e5c ===\n\nClients: 7b79a015-69af-4d3d-9ae6-95ba90c79486, 5bc08295-aaf2-42f3-a4cc-9e4ef9100f65\n\n=== Idle Task Queue ===\nLast update tick: 1s496u\nLast update run: never\nTask queue:\n * init post-load (update, cleanup)\n\nDebug log:\n\n</code-example>\n<h4 id=\"driver-state\" translation-result=\"on\">驅動程式的狀態<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#driver-state\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Driver state<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#driver-state\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">第一行表示驅動程式的狀態：</p><p translation-origin=\"off\">The first line indicates the driver state:</p>\n\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nDriver state: NORMAL ((nominal))\n\n</code-example>\n<p translation-result=\"on\"><code>NORMAL</code> 表示這個 Service Worker 正在正常執行，並且沒有處於降級執行的狀態。</p><p translation-origin=\"off\"><code>NORMAL</code> indicates that the service worker is operating normally and is not in a degraded state.</p>\n\n<p translation-result=\"on\">有兩種可能的降級狀態：</p><p translation-origin=\"off\">There are two possible degraded states:</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">降級狀態</nt-wrapper><nt-wrapper translation-origin=\"off\">Degraded states</nt-wrapper></th>\n<th align=\"left\"><nt-wrapper translation-result=\"on\">詳情</nt-wrapper><nt-wrapper translation-origin=\"off\">Details</nt-wrapper></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><code>EXISTING_CLIENTS_ONLY</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">Service Worker 沒有應用的最新已知版本的乾淨副本。較舊的快取版本可以安全使用，因此現有的選項卡會繼續從快取中執行，但應用中的新載入將由網路提供。當檢測到並安裝好新版本的應用程式時，Service Worker 將嘗試從此狀態恢復。當有新的 <code>ngsw.json</code> 可用時，會發生這種情況。</nt-wrapper><nt-wrapper translation-origin=\"off\">The service worker does not have a clean copy of the latest known version of the application. Older cached versions are safe to use, so existing tabs continue to run from cache, but new loads of the application will be served from the network. The service worker will try to recover from this state when a new version of the application is detected and installed. This happens when a new <code>ngsw.json</code> is available.</nt-wrapper></td>\n</tr>\n\n<tr>\n<td align=\"left\"><code>SAFE_MODE</code></td>\n<td align=\"left\"><nt-wrapper translation-result=\"on\">Service Worker 不能保證使用快取資料的安全性。發生了意外錯誤或所有快取版本都無效。這時所有的流量都將從網路提供，儘量少執行 Service Worker 中的程式碼。</nt-wrapper><nt-wrapper translation-origin=\"off\">The service worker cannot guarantee the safety of using cached data. Either an unexpected error occurred or all cached versions are invalid. All traffic will be served from the network, running as little service worker code as possible.</nt-wrapper></td>\n</tr>\n\n</tbody>\n</table>\n<p translation-result=\"on\">在這兩種情況下，後面的括號註解中都會提供導致 Service Worker 進入降級狀態的錯誤資訊。</p><p translation-origin=\"off\">In both cases, the parenthetical annotation provides the\nerror that caused the service worker to enter the degraded state.</p>\n\n<p translation-result=\"on\">這兩種狀態都是暫時的；它們僅在 <a href=\"https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope\">ServiceWorker 例項</a> 的生命週期內儲存。瀏覽器有時會終止空閒的 Service Worker，以節省記憶體和處理能力，並建立一個新的 Service Worker 例項來響應網路事件。無論先前例項的狀態如何，新例項均以 <code>NORMAL</code> 模式啟動。</p><p translation-origin=\"off\">Both states are temporary; they are saved only for the lifetime of the <a href=\"https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope\">ServiceWorker instance</a>.\nThe browser sometimes terminates an idle service worker to conserve memory and processor power, and creates a new service worker instance in response to network events.\nThe new instance starts in the <code>NORMAL</code> mode, regardless of the state of the previous instance.</p>\n\n<h4 id=\"latest-manifest-hash\" translation-result=\"on\">最新清單的雜湊<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#latest-manifest-hash\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Latest manifest hash<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#latest-manifest-hash\"><i class=\"material-icons\">link</i></a></h4>\n\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nLatest manifest hash: eea7f5f464f90789b621170af5a569d6be077e5c\n\n</code-example>\n<p translation-result=\"on\">這是 Service Worker 所知道的應用最新版本的 SHA1 雜湊值。</p><p translation-origin=\"off\">This is the SHA1 hash of the most up-to-date version of the application that the service worker knows about.</p>\n\n<h4 id=\"last-update-check\" translation-result=\"on\">最後一次更新檢查<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#last-update-check\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Last update check<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#last-update-check\"><i class=\"material-icons\">link</i></a></h4>\n\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nLast update check: never\n\n</code-example>\n<p translation-result=\"on\">這表示 Service Worker 最後一次檢查應用程式的新版本或更新的時間。“never” 表示 Service Worker 從未檢查過更新。</p><p translation-origin=\"off\">This indicates the last time the service worker checked for a new version, or update, of the application.\n<code>never</code> indicates that the service worker has never checked for an update.</p>\n\n<p translation-result=\"on\">在這個除錯檔案範例中，這次更新檢查目前是已排期的，如下一節所述。</p><p translation-origin=\"off\">In this example debug file, the update check is currently scheduled, as explained the next section.</p>\n\n<h4 id=\"version\" translation-result=\"on\">版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#version\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Version<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#version\"><i class=\"material-icons\">link</i></a></h4>\n\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\n=== Version eea7f5f464f90789b621170af5a569d6be077e5c ===\n\nClients: 7b79a015-69af-4d3d-9ae6-95ba90c79486, 5bc08295-aaf2-42f3-a4cc-9e4ef9100f65\n\n</code-example>\n<p translation-result=\"on\">在這個例子中，Service Worker 擁有一個版本的應用程式快取並用它服務於兩個不同的選項卡。</p><p translation-origin=\"off\">In this example, the service worker has one version of the application cached and being used to serve two different tabs.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\"><strong>注意</strong>：<br>\n這個版本雜湊值是上面列出的“最新清單的雜湊”。\n它的兩個客戶執行的都是最新版本。每個客戶都用瀏覽器中 <code>Clients</code> API 的 ID 列了出來。</p><p translation-origin=\"off\"><strong>NOTE</strong>: <br>\nThis version hash is the \"latest manifest hash\" listed above.\nBoth clients are on the latest version.\nEach client is listed by its ID from the <code>Clients</code> API in the browser.</p>\n\n</div>\n<h4 id=\"idle-task-queue\" translation-result=\"on\">空閒任務佇列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#idle-task-queue\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Idle task queue<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#idle-task-queue\"><i class=\"material-icons\">link</i></a></h4>\n\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\n=== Idle Task Queue ===\nLast update tick: 1s496u\nLast update run: never\nTask queue:\n * init post-load (update, cleanup)\n\n</code-example>\n<p translation-result=\"on\">空閒任務佇列是 Service Worker 中所有在後台發生的未決任務的佇列。如果這個佇列中存在任何任務，則列出它們的描述。在這個例子中，Service Worker 安排的任務是一個用於更新檢查和清除過期快取的後期初始化操作。</p><p translation-origin=\"off\">The Idle Task Queue is the queue of all pending tasks that happen in the background in the service worker.\nIf there are any tasks in the queue, they are listed with a description.\nIn this example, the service worker has one such task scheduled, a post-initialization operation involving an update check and cleanup of stale caches.</p>\n\n<p translation-result=\"on\">最後的 tick/run 計數器給出了與特定事件發生有關的空閒佇列中的時間。“Last update run” 計數器顯示的是上次執行空閒任務的時間。“Last update tick” 顯示的是自上次事件以來可能要處理的佇列的時間。</p><p translation-origin=\"off\">The last update tick/run counters give the time since specific events happened related to the idle queue.\nThe \"Last update run\" counter shows the last time idle tasks were actually executed.\n\"Last update tick\" shows the time since the last event after which the queue might be processed.</p>\n\n<h4 id=\"debug-log\" translation-result=\"on\">除錯日誌<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#debug-log\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\">Debug log<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#debug-log\"><i class=\"material-icons\">link</i></a></h4>\n\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nDebug log:\n\n</code-example>\n<p translation-result=\"on\">Service Worker 中發生的錯誤會記錄在此。</p><p translation-origin=\"off\">Errors that occur within the service worker are logged here.</p>\n\n<h3 id=\"developer-tools\" translation-result=\"on\">開發者工具<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#developer-tools\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Developer tools<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#developer-tools\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">Chrome 等瀏覽器提供了能與 Service Worker 互動的開發者工具。這些工具在使用得當時非常強大，但也要牢記一些事情。</p><p translation-origin=\"off\">Browsers such as Chrome provide developer tools for interacting with service workers.\nSuch tools can be powerful when used properly, but there are a few things to keep in mind.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用開發人員工具時，Service Worker 將繼續在後台執行，並且不會重新啟動。這可能會導致開著 Dev Tools 時的行為與使用者實際遇到的行為不一樣。</p><p translation-origin=\"off\">When using developer tools, the service worker is kept running in the background and never restarts.\nThis can cause behavior with Dev Tools open to differ from behavior a user might experience.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果你檢視快取儲存器的檢視器，快取就會經常過期。右鍵單擊快取儲存器的標題並重新整理快取。</p><p translation-origin=\"off\">If you look in the Cache Storage viewer, the cache is frequently out of date.\nRight-click the Cache Storage title and refresh the caches.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在 Service Worker 頁停止並重新啟動這個 Service Worker 將會觸發一次更新檢查。</p><p translation-origin=\"off\">Stopping and starting the service worker in the Service Worker pane checks for updates</p>\n\n</li>\n</ul>\n<h2 id=\"service-worker-safety\" translation-result=\"on\">Service Worker 的安全性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-safety\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Service worker safety<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-safety\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">錯誤或損壞的配置可能會導致 Angular Service Worker 以不可預知的方式工作。如果出現了這種情況，管理員需要快速停用 Service Worker，Angular Service Worker 也包含多種故障保護機制。</p><p translation-origin=\"off\">Bugs or broken configurations could cause the Angular service worker to act in unexpected ways.\nIf this happens, the Angular service worker contains several failsafe mechanisms in case an administrator needs to deactivate the service worker quickly.</p>\n\n<h3 id=\"fail-safe\" translation-result=\"on\">故障保護機制<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#fail-safe\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Fail-safe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#fail-safe\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要停用 Service Worker，請刪除或重新命名 <code>ngsw.json</code> 檔案。當 Service Worker 對 <code>ngsw.json</code> 的請求返回 <code>404</code> 時，Service Worker 就會刪除它的所有快取並登出自己，本質上就是自毀。</p><p translation-origin=\"off\">To deactivate the service worker, rename the <code>ngsw.json</code> file or delete it.\nWhen the service worker's request for <code>ngsw.json</code> returns a <code>404</code>, then the service worker removes all its caches and de-registers itself, essentially self-destructing.</p>\n\n<h3 id=\"safety-worker\" translation-result=\"on\">安全工作者<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#safety-worker\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Safety worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#safety-worker\"><i class=\"material-icons\">link</i></a></h3>\n\n<!-- vale Angular.Google_Acronyms = NO -->\n<p translation-result=\"on\"><code>@angular/service-worker</code> NPM 套件中還包含一個小指令碼 <code>safety-worker.js</code>。當載入它時，就會把它從瀏覽器中登出，並移除此 Service Worker 的快取。這個指令碼可以作為終極武器來擺脫那些已經安裝在客戶端頁面上的不想要的 Service Worker。</p><p translation-origin=\"off\">A small script, <code>safety-worker.js</code>, is also included in the <code>@angular/service-worker</code> NPM package.\nWhen loaded, it un-registers itself from the browser and removes the service worker caches.\nThis script can be used as a last resort to get rid of unwanted service workers already installed on client pages.</p>\n\n<!-- vale Angular.Google_Acronyms = YES -->\n<div class=\"alert is-important\">\n<p translation-result=\"on\"><strong>重要</strong>：<br>\n你不能直接註冊這個 Safety Worker，因為具有已快取狀態的舊客戶端可能無法看到一個新的、用來安裝 另一個 worker 指令碼的 <code>index.html</code>。</p><p translation-origin=\"off\"><strong>IMPORTANT</strong>: <br>\nYou cannot register this worker directly, as old clients with cached state might not see a new <code>index.html</code> which installs the different worker script.</p>\n\n</div>\n<p translation-result=\"on\">你必須在想要登出的 Service Worker 指令碼的 URL 中提供 <code>safety-worker.js</code> 的內容，\n而且必須持續這樣做，直到確定所有使用者都已成功登出了原有的 Worker。\n對大多數網站而言，這意味著你應該永遠為舊的 Service Worker URL 提供 這個 Safety Worker。\n這個指令碼可以用來停用 <code>@angular/service-worker</code>（並移除相應的快取）以及任何其它曾在你的站點上提供過的 Service Worker。</p><p translation-origin=\"off\">Instead, you must serve the contents of <code>safety-worker.js</code> at the URL of the Service Worker script you are trying to unregister. You must continue to do so until you are certain all users have successfully unregistered the old worker.\nFor most sites, this means that you should serve the safety worker at the old Service Worker URL forever.\nThis script can be used to deactivate <code>@angular/service-worker</code> and remove the corresponding caches. It also removes any other Service Workers which might have been served in the past on your site.</p>\n\n<h3 id=\"changing-your-applications-location\" translation-result=\"on\">更改應用的位置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#changing-your-applications-location\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Changing your application's location<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#changing-your-applications-location\"><i class=\"material-icons\">link</i></a></h3>\n\n<div class=\"alert is-important\">\n<p translation-result=\"on\"><strong>重要</strong>：<br>\nService Worker 無法在重新導向後工作。你可能已經遇到過這種錯誤：<code>The script resource is behind a redirect, which is disallowed</code>。</p><p translation-origin=\"off\"><strong>IMPORTANT</strong>: <br>\nService workers don't work behind redirect.\nYou might have already encountered the error <code>The script resource is behind a redirect, which is disallowed</code>.</p>\n\n</div>\n<p translation-result=\"on\">如果你不得不更改應用的位置，就可能會出現問題。如果你設定了從舊位置（比如 <code>example.com</code>）到新位置（比如 <code>www.example.com</code>）的重新導向，則 Service Worker 將停止工作。同樣，對於完全從 Service Worker 載入該網站的使用者，甚至都不會觸發重新導向。老的 Worker（註冊在 <code>example.com</code>）會嘗試更新並將請求傳送到原來的位置 <code>example.com</code>，該位置重新導向到新位置 <code>www.example.com</code> 就會導致錯誤 <code>The script resource is behind a redirect, which is disallowed</code>。</p><p translation-origin=\"off\">This can be a problem if you have to change your application's location.\nIf you set up a redirect from the old location, such as <code>example.com</code>, to the new location, <code>www.example.com</code> in this example, the worker stops working.\nAlso, the redirect won't even trigger for users who are loading the site entirely from Service Worker.\nThe old worker, which was registered at <code>example.com</code>, tries to update and sends a request to the old location <code>example.com</code>. This request is redirected to the new location <code>www.example.com</code> and creates the error: <code>The script resource is behind a redirect, which is disallowed</code>.</p>\n\n<p translation-result=\"on\">為了解決這個問題，你可能需要用上述技巧（<a href=\"guide/service-worker-devops#fail-safe\">故障安全</a>或<a href=\"guide/service-worker-devops#safety-worker\">Safety Worker</a>）之一移除老的 Worker。</p><p translation-origin=\"off\">To remedy this, you might need to deactivate the old worker using one of the preceding techniques: <a href=\"guide/service-worker-devops#fail-safe\">Fail-safe</a> or <a href=\"guide/service-worker-devops#safety-worker\">Safety Worker</a>.</p>\n\n<h2 id=\"more-on-angular-service-workers\" translation-result=\"on\">關於 Angular Service Worker 的更多資訊<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#more-on-angular-service-workers\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">More on Angular service workers<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#more-on-angular-service-workers\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可能還對下列內容感興趣：</p><p translation-origin=\"off\">You might also be interested in the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/service-worker-config\">Service Worker 配置</a></p><p translation-origin=\"off\"><a href=\"guide/service-worker-config\">Service Worker Configuration</a></p>\n\n</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/service-worker-config\n - guide/service-worker-intro\n - guide/service-worker-notifications\n-->\n<!-- links from this doc:\n - api/service-worker/SwUpdate\n - cli\n - guide/service-worker-communications\n - guide/service-worker-config\n - guide/service-worker-devops#app-選項卡\n - guide/service-worker-devops#application-tabs\n - guide/service-worker-devops#application-versions\n - guide/service-worker-devops#bypassing-the-service-worker\n - guide/service-worker-devops#changing-your-applications-location\n - guide/service-worker-devops#debug-log\n - guide/service-worker-devops#debugging-the-angular-service-worker\n - guide/service-worker-devops#developer-tools\n - guide/service-worker-devops#driver-state\n - guide/service-worker-devops#fail-safe\n - guide/service-worker-devops#hashed-content\n - guide/service-worker-devops#idle-task-queue\n - guide/service-worker-devops#last-update-check\n - guide/service-worker-devops#latest-manifest-hash\n - guide/service-worker-devops#locating-and-analyzing-debugging-information\n - guide/service-worker-devops#more-on-angular-service-workers\n - guide/service-worker-devops#prerequisites\n - guide/service-worker-devops#resource-integrity\n - guide/service-worker-devops#safety-worker\n - guide/service-worker-devops#service-worker-and-caching-of-application-resources\n - guide/service-worker-devops#service-worker-in-production\n - guide/service-worker-devops#service-worker-requests-when-the-server-cant-be-reached\n - guide/service-worker-devops#service-worker-safety\n - guide/service-worker-devops#service-worker-updates\n - guide/service-worker-devops#service-worker-與應用資源的快取\n - guide/service-worker-devops#service-worker-更新\n - guide/service-worker-devops#service-worker-的安全性\n - guide/service-worker-devops#tabs\n - guide/service-worker-devops#unhashed-content\n - guide/service-worker-devops#update-checks\n - guide/service-worker-devops#version\n - guide/service-worker-devops#versions\n - guide/service-worker-devops#不帶雜湊的內容\n - guide/service-worker-devops#關於-angular-service-worker-的更多資訊\n - guide/service-worker-devops#前提條件\n - guide/service-worker-devops#雜湊內容\n - guide/service-worker-devops#安全工作者\n - guide/service-worker-devops#定位並分析除錯資訊\n - guide/service-worker-devops#應用的版本\n - guide/service-worker-devops#開發者工具\n - guide/service-worker-devops#故障保護機制\n - guide/service-worker-devops#無法存取伺服器時的-service-worker-請求\n - guide/service-worker-devops#更改應用的位置\n - guide/service-worker-devops#更新檢測\n - guide/service-worker-devops#最後一次更新檢查\n - guide/service-worker-devops#最新清單的雜湊\n - guide/service-worker-devops#版本\n - guide/service-worker-devops#生產環境下的-service-worker\n - guide/service-worker-devops#空閒任務佇列\n - guide/service-worker-devops#繞過-service-worker\n - guide/service-worker-devops#除錯-angular-service-worker\n - guide/service-worker-devops#除錯日誌\n - guide/service-worker-devops#資源整體性\n - guide/service-worker-devops#驅動程式的狀態\n - https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope\n - https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/service-worker-devops.md?message=docs%3A%20請簡述你的修改...\n - https://github.com/w3c/ServiceWorker/issues/1141\n-->"}