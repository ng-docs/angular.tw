{"id":"guide/pipes-custom-data-trans","title":"Creating pipes for custom data transformations","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipes-custom-data-trans.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"creating-pipes-for-custom-data-transformations\" translation-result=\"on\">為自訂資料轉換建立管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#creating-pipes-for-custom-data-transformations\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Creating pipes for custom data transformations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#creating-pipes-for-custom-data-transformations\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">建立自訂管道來封裝那些內建管道沒有提供的轉換。然後就可以在範本表示式中使用自訂管道了，像內建管道一樣，把輸入值轉換成顯示輸出。</p><p translation-origin=\"off\">Create custom pipes to encapsulate transformations that are not provided with the built-in pipes.\nThen, use your custom pipe in template expressions, the same way you use built-in pipes—to transform input values to output values for display.</p>\n\n<h2 id=\"marking-a-class-as-a-pipe\" translation-result=\"on\">把一個類別標記為一個管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#marking-a-class-as-a-pipe\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Marking a class as a pipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#marking-a-class-as-a-pipe\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要將類標記為管道並提供配置元資料，請將<a href=\"api/core/Pipe\" title=\"管道的 API 參考\"><code>@Pipe</code></a><a href=\"guide/glossary#decorator--decoration\" title=\"裝飾器的定義\">裝飾器</a>新增到此類上。</p><p translation-origin=\"off\">To mark a class as a pipe and supply configuration metadata, apply the <a href=\"api/core/Pipe\" title=\"API reference for Pipe\"><code>@Pipe</code></a> <a href=\"guide/glossary#decorator--decoration\" title=\"Definition for decorator\">decorator</a> to the class.</p>\n\n<p translation-result=\"on\">使用<a href=\"guide/glossary#case-types\" title=\"案例型別的定義\">UpperCamelCase</a>（類別名稱的一般約定）作為管道類別名稱，並使用<a href=\"guide/glossary#case-types\" title=\"案例型別的定義\">camelCase</a>作為對應的 <code>name</code> 字串。不要在 <code>name</code> 中使用連字元。</p><p translation-origin=\"off\">Use <a href=\"guide/glossary#case-types\" title=\"Definition of case types\">UpperCamelCase</a> (the general convention for class names) for the pipe class name, and <a href=\"guide/glossary#case-types\" title=\"Definition of case types\">camelCase</a> for the corresponding <code>name</code> string.\nDo not use hyphens in the <code>name</code>.</p>\n\n<p translation-result=\"on\">有關詳細資訊和更多範例，請參閱<a href=\"guide/styleguide#pipe-names\" title=\"Angular 編碼風格指南中的管道名稱\">管道名稱</a>。</p><p translation-origin=\"off\">For details and more examples, see <a href=\"guide/styleguide#pipe-names\" title=\"Pipe names in the Angular coding style guide\">Pipe names</a>.</p>\n\n<p translation-result=\"on\">在範本表示式中使用 <code>name</code> 就像在內建管道中一樣。</p><p translation-origin=\"off\">Use <code>name</code> in template expressions as you would for a built-in pipe.</p>\n\n<div class=\"alert is-important\">\n<ul>\n<li>\n<p translation-result=\"on\">將你的管道包含在 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 元資料的 <code>declarations</code> 欄位中，以使其可用於範本。請參閱範例應用程式中的 <code>app.module.ts</code> 檔案（<live-example></live-example>）。有關詳細資訊，請參閱<a href=\"guide/ngmodules\" title=\"NgModules 介紹\">NgModules</a>。</p><p translation-origin=\"off\">Include your pipe in the <code>declarations</code> field of the <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> metadata in order for it to be available to a template. See the <code>app.module.ts</code> file in the example application (<live-example></live-example>). For details, see <a href=\"guide/ngmodules\" title=\"NgModules introduction\">NgModules</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">註冊自訂管道。<a href=\"cli\" title=\"CLI 概述和命令參考\">Angular CLI</a> 的 <a href=\"cli/generate#pipe\" title=\"ng 在 CLI Command Reference 中產生管道\"><code>ng generate pipe</code></a> 命令會自動註冊該管道。</p><p translation-origin=\"off\">Register your custom pipes. The <a href=\"cli\" title=\"CLI Overview and Command Reference\">Angular CLI</a> <a href=\"cli/generate#pipe\" title=\"ng generate pipe in the CLI Command Reference\"><code>ng generate pipe</code></a> command registers the pipe automatically.</p>\n\n</li>\n</ul>\n</div>\n<h2 id=\"using-the-pipetransform-interface\" translation-result=\"on\">使用 PipeTransform 介面<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#using-the-pipetransform-interface\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Using the PipeTransform interface<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#using-the-pipetransform-interface\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在自訂管道類中實現 <a href=\"api/core/PipeTransform\" title=\"PipeTransform 的 API 參考\"><code>PipeTransform</code></a> 介面來執行轉換。</p><p translation-origin=\"off\">Implement the <a href=\"api/core/PipeTransform\" title=\"API reference for PipeTransform\"><code>PipeTransform</code></a> interface in your custom pipe class to perform the transformation.</p>\n\n<p translation-result=\"on\">Angular 呼叫 <code>transform</code> 方法，該方法使用繫結的值作為第一個引數，把其它任何引數都以列表的形式作為第二個引數，並返回轉換後的值。</p><p translation-origin=\"off\">Angular invokes the <code>transform</code> method with the value of a binding as the first argument, and any parameters as the second argument in list form, and returns the transformed value.</p>\n\n<h2 id=\"example-transforming-a-value-exponentially\" translation-result=\"on\">範例：指數級轉換<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#example-transforming-a-value-exponentially\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Example: Transforming a value exponentially<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#example-transforming-a-value-exponentially\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在遊戲中，可能希望實現一種指數級轉換，以指數級增加英雄的力量。比如，如果英雄的得分是 2，那麼英雄的能量會指數級增長 10 次，最終得分為 1024。你可以使用自訂管道進行這種轉換。</p><p translation-origin=\"off\">In a game, you might want to implement a transformation that raises a value exponentially to increase a hero's power.\nFor example, if the hero's score is 2, boosting the hero's power exponentially by 10 produces a score of 1024.\nUse a custom pipe for this transformation.</p>\n\n<p translation-result=\"on\">下列程式碼範例顯示了兩個元件定義：</p><p translation-origin=\"off\">The following code example shows two component definitions:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>exponential-strength.pipe.ts</code> 透過一個執行轉換的 <code>transform</code> 方法定義了一個名為 <code>exponentialStrength</code> 的自訂管道。它為傳給管道的引數定義了 <code>transform</code> 方法的一個引數（<code>exponent</code>）。</p><p translation-origin=\"off\">The <code>exponential-strength.pipe.ts</code> component defines a custom pipe named <code>exponentialStrength</code> with the <code>transform</code> method that performs the transformation.\nIt defines an argument to the <code>transform</code> method (<code>exponent</code>) for a parameter passed to the pipe.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>power-booster.component.ts</code> 元件示範瞭如何使用該管道，指定了一個值（<code>2</code>）和一個 exponent 引數（<code>10</code>）。</p><p translation-origin=\"off\">The <code>power-booster.component.ts</code> component demonstrates how to use the pipe, specifying a value (<code>2</code>) and the exponent parameter (<code>10</code>).</p>\n\n</li>\n</ul>\n<code-tabs>\n    <code-pane header=\"src/app/exponential-strength.pipe.ts\" path=\"pipes/src/app/exponential-strength.pipe.ts\">\nimport { <a href=\"api/core/Pipe\" class=\"code-anchor\">Pipe</a>, <a href=\"api/core/PipeTransform\" class=\"code-anchor\">PipeTransform</a> } from '@angular/core';\n/*\n * Raise the value exponentially\n * Takes an exponent argument that defaults to 1.\n * Usage:\n *   value | exponentialStrength:exponent\n * Example:\n *   {{ 2 | exponentialStrength:10 }}\n *   formats to: 1024\n*/\n@<a href=\"api/core/Pipe\" class=\"code-anchor\">Pipe</a>({name: 'exponentialStrength'})\nexport class ExponentialStrengthPipe implements <a href=\"api/core/PipeTransform\" class=\"code-anchor\">PipeTransform</a> {\n  transform(value: number, exponent = 1): number {\n    return Math.pow(value, exponent);\n  }\n}\n\n\n</code-pane>\n    <code-pane header=\"src/app/power-booster.component.ts\" path=\"pipes/src/app/power-booster.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-power-booster',\n  template: `\n    &lt;h2&gt;Power Booster&lt;/h2&gt;\n    &lt;p&gt;Super power boost: {{2 | exponentialStrength: 10}}&lt;/p&gt;\n  `\n})\nexport class PowerBoosterComponent { }\n\n\n</code-pane>\n</code-tabs>\n<p translation-result=\"on\">瀏覽器顯示如下：</p><p translation-origin=\"off\">The browser displays the following:</p>\n\n<code-example language=\"none\">\n\nPower Booster\n\nSuperpower boost: 1024\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">可以到<live-example></live-example>中體驗 <code>exponentialStrength</code> 管道的行為，可以更改範本中的值和可選的指數值。</p><p translation-origin=\"off\">To examine the behavior of the <code>exponentialStrength</code> pipe in the <live-example name=\"pipes\"></live-example>, change the value and optional exponent in the template.</p>\n\n</div>\n\n  <div class=\"reviewed\">最後複查時間：1/6/2023</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/NgModule\n - api/core/Pipe\n - api/core/PipeTransform\n - cli\n - cli/generate#pipe\n - guide/glossary#case-types\n - guide/glossary#decorator--decoration\n - guide/ngmodules\n - guide/pipes-custom-data-trans#creating-pipes-for-custom-data-transformations\n - guide/pipes-custom-data-trans#example-transforming-a-value-exponentially\n - guide/pipes-custom-data-trans#marking-a-class-as-a-pipe\n - guide/pipes-custom-data-trans#using-the-pipetransform-interface\n - guide/pipes-custom-data-trans#為自訂資料轉換建立管道\n - guide/pipes-custom-data-trans#使用-pipetransform-介面\n - guide/pipes-custom-data-trans#把一個類別標記為一個管道\n - guide/pipes-custom-data-trans#範例指數級轉換\n - guide/styleguide#pipe-names\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipes-custom-data-trans.md?message=docs%3A%20請簡述你的修改...\n-->"}