{"id":"guide/i18n","title":"Localizing your app","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/aio/content/guide/i18n.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"localizing-your-app\" translation-result=\"on\">應用本地化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#localizing-your-app\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"localizing-your-app\">Localizing your app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#localizing-your-app\"><i class=\"material-icons\">link</i></a></h1>\n\n\n<a id=\"angular-i18n\"></a>\n<p translation-result=\"on\"><em>國際化</em>（i18n）是一個過程，用於對你的應用進行設計和準備以便在全球不同地區使用。<em>本地化</em>是指為不同的本地環境建構應用版本的過程，包括提取用於翻譯成不同語言的文字，以及格式化特定本地環境的資料。</p><p translation-result=\"on\"><em>本地環境（locale）</em>用於標識某個區域（比如某個國家/地區），人們會在該區域內使用特定的語言或語言變體。本地環境決定了日期、時間、數字和貨幣的格式和解析方式，以及各種測量單位和時區、語言、國家/地區的翻譯名稱。</p><p translation-origin=\"off\"><em>Internationalization</em> (i18n) is the process of designing and preparing your app to be usable in different locales around the world.\n<em>Localization</em> is the process of building versions of your app for different locales, including extracting text for translation into different languages, and formatting data for particular locales.</p>\n\n<p translation-origin=\"off\">A <em>locale</em> identifies a region (such as a country) in which people speak a particular language or language variant. The locale determines the formatting and parsing of dates, times, numbers, and currencies as well as measurement units and the translated names for time zones, languages, and countries.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">要為所有目標本地環境建立一個與之相適應的使用者介面，並考慮到不同語言中的間距差異。欲知詳情，請參閱<a href=\"https://marketfinder.thinkwithgoogle.com/intl/en_us/guide/how-to-approach-i18n/#overview\" title=\"如何實現國際化\">如何實現國際化</a> 。</p><p translation-origin=\"off\">Create an adaptable user interface for all of your target locales that takes into consideration the differences in spacing for different languages. For details, see <a href=\"https://marketfinder.thinkwithgoogle.com/intl/en_us/guide/how-to-approach-i18n/#overview\" title=\"How to approach internationalization\">How to approach internationalization</a>.</p>\n\n</div>\n<p translation-result=\"on\">使用 Angular 國際化你的應用：</p><p translation-origin=\"off\">Use Angular to internationalize your app:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用內建管道以本地格式顯示日期、數字、百分比和貨幣。</p><p translation-origin=\"off\">Use built-in pipes to display dates, numbers, percentages, and currencies in a local format.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">標記出元件範本中要翻譯的文字。</p><p translation-origin=\"off\">Mark text in component templates for translation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">標記出要翻譯的表示式的複數形式。</p><p translation-origin=\"off\">Mark plural forms of expressions for translation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">標記出要翻譯的備用文字。</p><p translation-origin=\"off\">Mark alternate text for translation.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">在為國際使用者準備好應用之後，透過執行以下任務，用 <a href=\"cli\">Angular CLI</a> 本地化你的應用：</p><p translation-origin=\"off\">After preparing your app for an international audience, use the <a href=\"cli\">Angular CLI</a> to  localize your app by performing the following tasks:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">用 CLI 命令把標記過的文字提取到<em>源語言</em>檔案中。</p><p translation-origin=\"off\">Use the CLI to extract marked text to a <em>source language</em> file.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">把這個檔案為每種語言複製一份，並把這些<em>翻譯檔案</em>發給翻譯人員或翻譯服務。</p><p translation-origin=\"off\">Make a copy of this file for each language, and send these <em>translation files</em> to a translator or service.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在為一個或多個本地環境建構應用時，使用 CLI 合併這些翻譯完成的檔案。</p><p translation-origin=\"off\">Use the CLI to merge the finished translation files when building your app for one or more locales.</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">  要探索本指南中使用的法語翻譯範例應用，請參閱<live-example></live-example>。</p><p translation-origin=\"off\">  To explore the sample app with French translations used in this guide, see the <live-example></live-example>.</p>\n\n</div>\n<h2 id=\"prerequisites\" translation-result=\"on\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prerequisites\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要準備翻譯你的應用，你應該對這些內容有一個基本的瞭解：</p><p translation-origin=\"off\">To prepare your app for translations, you should have a basic understanding of the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/glossary#template\" title=\"範本的定義\">範本</a></p><p translation-origin=\"off\"><a href=\"guide/glossary#template\" title=\"Definition of a template\">Templates</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/glossary#component\" title=\"元件的定義\">元件</a></p><p translation-origin=\"off\"><a href=\"guide/glossary#component\" title=\"Definition of a component\">Components</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">用來管理 Angular 開發週期的 <a href=\"guide/glossary#command-line-interface-cli\" title=\"CLI 的定義\">Angular CLI</a> 命令列工具</p><p translation-origin=\"off\"><a href=\"guide/glossary#command-line-interface-cli\" title=\"Definition of CLI\">Angular CLI</a> command-line tool for managing the Angular development cycle</p>\n\n</li>\n<li>\n<p translation-result=\"on\">翻譯檔案中要用到的<a href=\"https://www.w3.org/XML/\" title=\"W3C：可擴充標記語言（XML）\">可擴充標記語言（XML）</a></p><p translation-origin=\"off\"><a href=\"https://www.w3.org/XML/\" title=\"W3C: Extensible Markup Language (XML)\">Extensible Markup Language (XML)</a> used for translation files</p>\n\n</li>\n</ul>\n<h2 id=\"steps-to-localize-your-app\" translation-result=\"on\">應用本地化的步驟<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#steps-to-localize-your-app\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"steps-to-localize-your-app\">Steps to localize your app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#steps-to-localize-your-app\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要本地化你的應用，請執行以下常規步驟：</p><p translation-origin=\"off\">To localize your app, follow these general steps:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#setting-up-cli\">新增 localize 套件</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#setting-up-cli\">Add the localize package</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#setting-up-locale\">按 ID 參考本地環境</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#setting-up-locale\">Refer to locales by ID</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#i18n-pipes\">根據本地環境格式化資料</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#i18n-pipes\">Format data based on locale</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#Template-translations\">準備翻譯範本</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#Template-translations\">Prepare templates for translations</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#ng-xi18n\">使用翻譯檔案</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#ng-xi18n\">Work with translation files</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#merge\">把翻譯合併到應用中</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#merge\">Merge translations into the app</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#deploy-locales\">部署多個本地環境</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#deploy-locales\">Deploy multiple locales</a>.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">按照這些步驟進行操作時，可以<a href=\"guide/i18n#app-pre-translation\">瀏覽已翻譯的範例應用</a> 。</p><p translation-result=\"on\">以下是特殊情況下可能用到的一些可選實踐：</p><p translation-origin=\"off\">While following these steps, you can <a href=\"guide/i18n#app-pre-translation\">explore the translated example app</a>.</p>\n\n<p translation-origin=\"off\">The following are optional practices that may be required in special cases:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">如果你需要設定 <a href=\"https://angular.cn/api/core/LOCALE_ID\" title=\"LOCALE_ID 的 API 參考\">LOCALE_ID</a> 令牌，請<a href=\"guide/i18n#set-source-manually\">手動設定源本地環境</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#set-source-manually\">Set the source locale manually</a> if you need to set the <a href=\"api/core/LOCALE_ID\" title=\"API reference for LOCALE_ID\">LOCALE_ID</a> token.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#import-locale\">為其他本地化資料匯入本地化資料的全域變體</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#import-locale\">Import global variants of the locale data</a> for extra locale data.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果你要對翻譯的匹配方式有更多的控制權，可以<a href=\"guide/i18n#custom-id\">使用自訂 ID 來管理</a>。</p><p translation-origin=\"off\"><a href=\"guide/i18n#custom-id\">Manage marked text with custom IDs</a> if you require more control over matching translations.</p>\n\n</li>\n</ul>\n<a id=\"setting-up-cli\"></a>\n<a id=\"add-localize\"></a>\n<h2 id=\"add-the-localize-package\" translation-result=\"on\">新增 localize 套件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#add-the-localize-package\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"add-the-localize-package\">Add the localize package<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#add-the-localize-package\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要利用 Angular 的本地化特性，可以用 Angular CLI 把 <code>@angular/localize</code> 包新增到你的專案中：</p><p translation-origin=\"off\">To take advantage of Angular's localization features, use the Angular CLI to add the <code>@angular/localize</code> package to your project:</p>\n\n<code-example language=\"sh\">\n  ng add @angular/localize\n</code-example>\n<p translation-result=\"on\">這個命令會更新你的專案的 <code>package.json</code> 和 <code>polyfills.ts</code> 檔案，以匯入 <code>@angular/localize</code> 套件。</p><p translation-origin=\"off\">This command updates your project's <code>package.json</code> and <code>polyfills.ts</code> files to import the <code>@angular/localize</code> package.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">關於 <code>package.json</code> 和 polyfill 套件的更多資訊，請參閱<a href=\"https://angular.io/guide/npm-packages\">工作區的 npm 依賴項</a> 。</p><p translation-origin=\"off\">For more information about <code>package.json</code> and polyfill packages, see <a href=\"guide/npm-packages\">Workspace npm dependencies</a>.</p>\n\n</div>\n<p translation-result=\"on\">如果沒有安裝 <code>@angular/localize</code>，那麼當你試圖建構本地化版本的應用時，Angular CLI 就可能會產生錯誤。</p><p translation-origin=\"off\">If <code>@angular/localize</code> is not installed, the Angular CLI may generate an error when you try to build a localized version of your app.</p>\n\n<a id=\"setting-up-locale\"></a>\n<a id=\"setting-up-the-locale-of-your-app\"></a>\n<h2 id=\"refer-to-locales-by-id\" translation-result=\"on\">按 ID 參考本地環境<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#refer-to-locales-by-id\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"refer-to-locales-by-id\">Refer to locales by ID<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#refer-to-locales-by-id\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用 Unicode <em>本地環境識別符號</em>（ID）參考本地環境，該<em>識別符號</em>用於指定語言、國家/地區以及其他變體或細分的可選程式碼。</p><p translation-origin=\"off\">Refer to a locale using the Unicode <em>locale identifier</em> (ID), which specifies the language, country, and an optional code for further variants or subdivisions.</p>\n\n<div class=\"callout is-helpful\">\n<header ng-should-translate=\"\" translation-result=\"on\">Unicode 本地環境識別符號</header><header ng-should-translate=\"\" translation-origin=\"off\">Unicode locale identifiers</header>\n\n<ul>\n<li>\n<p translation-result=\"on\">要獲取語言程式碼列表，請參閱 <a href=\"https://www.loc.gov/standards/iso639-2/\" title=\"ISO 639-2 註冊機構\">ISO 639-2</a> 。</p><p translation-origin=\"off\">For a list of language codes, see <a href=\"https://www.loc.gov/standards/iso639-2/\" title=\"ISO 639-2 Registration Authority\">ISO 639-2</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">  ID 要符合 Unicode 通用本地化資料儲存庫（Common Locale Data Repository CLDR）。關於 Unicode 本地環境識別符號的更多資訊，請參閱 <a href=\"http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers\" title=\"CLDR  -  Unicode 公共本地化資料儲存庫\">CLDR 核心規範</a> 。</p><p translation-origin=\"off\">IDs conform to the Unicode Common Locale Data Repository (CLDR).\nFor more information about Unicode locale identifiers, see the <a href=\"http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers\" title=\"CLDR - Unicode Common Locale Data Repository\">CLDR core specification</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">CLDR 和 Angular 的識別符號都基於 <a href=\"http://www.rfc-editor.org/rfc/bcp/bcp47.txt\" title=\"用於識別語言的 BCP47 標籤\">BCP47</a> 。</p><p translation-origin=\"off\">CLDR and Angular base their identifiers on <a href=\"https://tools.ietf.org/html/bcp47\" title=\"BCP47 Tags for Identifying Languages\">BCP47 tags</a>.</p>\n\n</li>\n</ul>\n</div>\n<p translation-result=\"on\">該 ID 由一個語言識別符號組成，比如 <code>en</code> 表示英文， <code>fr</code> 表示法語，後跟短劃線（<code>-</code>）和本地環境擴充，比如 <code>US</code> 代表美國，<code>CA</code> 代表加拿大。比如，<code>en-US</code> 是指美國英語區，<code>fr-CA</code> 是指加拿大法語區。Angular 使用這種 ID 來查詢對應的本地化資料。</p><p translation-origin=\"off\">The ID consists of a language identifier, such as <code>en</code> for English or <code>fr</code> for French, followed by a dash (<code>-</code>) and a locale extension, such as <code>US</code> for the United States or <code>CA</code> for Canada.\nFor example, <code>en-US</code> refers to English in the United States, and <code>fr-CA</code> refers to French in Canada.\nAngular uses this ID to find the correct corresponding locale data.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">許多國家/地區（比如法國和加拿大）都使用相同的語言（法語，標識為 <code>fr</code>），但在語法、標點符號、貨幣格式、十進位制數字格式和日期格式方面都有所不同。在本地化你的應用時，可以使用更具體的本地環境 ID，比如加拿大法語區（ <code>fr-CA</code> ）。</p><p translation-origin=\"off\">Many countries, such as France and Canada, use the same language (French, identified as <code>fr</code>) but differ in grammar, punctuation, and formats for currency, decimal numbers, and dates.\nUse a more specific locale ID, such as French for Canada (<code>fr-CA</code>), when localizing your app.</p>\n\n</div>\n<p translation-result=\"on\">Angular 預設使用 <code>en-US</code>（美國英語）作為應用的源本地環境。</p><p translation-result=\"on\"><a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\" title=\"Angular 儲存庫中的常用語言環節\">Angular 的程式碼儲存庫中</a>包含常見的本地環境。你可以透過在應用的<a href=\"guide/workspace-config\" title=\"Angular 工作區配置\">工作區配置</a>檔案 <code>angular.json</code> 中的 <code>sourceLocale</code> 欄位中設定源本地環境來為此建構更改應用的源本地環境。建構過程（在本指南的<a href=\"guide/i18n#merge\">把翻譯合併到應用程式</a>中描述）會使用應用中的 <code>angular.json</code> 檔案自動設定 <a href=\"api/core/LOCALE_ID\" title=\"LOCALE_ID 的 API 參考\"><code>LOCALE_ID</code></a> 令牌並載入本地化資料。</p><p translation-origin=\"off\">Angular by default uses <code>en-US</code> (English in the United States) as your app's source locale.</p>\n\n<p translation-origin=\"off\">The <a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\" title=\"Common locales in the Angular repository\">Angular repository</a> includes common locales.\nYou can change your app's source locale for the build by setting the source locale in the <code>sourceLocale</code> field of your app's <a href=\"guide/workspace-config\" title=\"Angular workspace configuration\">workspace configuration</a> file (<code>angular.json</code>).\nThe build process (described in <a href=\"guide/i18n#merge\">Merge translations into the app</a> in this guide) uses your app's <code>angular.json</code> file to automatically set the <a href=\"api/core/LOCALE_ID\" title=\"API reference for LOCALE_ID\"><code>LOCALE_ID</code></a> token and load the locale data.</p>\n\n<a id=\"i18n-pipes\"></a>\n<h2 id=\"format-data-based-on-locale\" translation-result=\"on\">根據本地環境格式化資料<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#format-data-based-on-locale\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"format-data-based-on-locale\">Format data based on locale<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#format-data-based-on-locale\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular 提供了下列內建資料轉換<a href=\"guide/glossary#pipe\" title=\"管道的定義\">管道</a> ，它們根據本地化的規則使用 <a href=\"api/core/LOCALE_ID\" title=\"LOCALE_ID 的 API 參考\"><code>LOCALE_ID</code></a> 令牌格式化資料：</p><p translation-origin=\"off\">Angular provides the following built-in data transformation <a href=\"guide/glossary#pipe\" title=\"Definition of a pipe\">pipes</a> that use the <a href=\"api/core/LOCALE_ID\" title=\"API reference for LOCALE_ID\"><code>LOCALE_ID</code></a> token to format data according to the locale's rules:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/DatePipe\"><code>DatePipe</code></a>：格式化日期值。</p><p translation-origin=\"off\"><a href=\"api/common/DatePipe\"><code>DatePipe</code></a>: Formats a date value.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/CurrencyPipe\"><code>CurrencyPipe</code></a>：把數字轉換成貨幣字串。</p><p translation-origin=\"off\"><a href=\"api/common/CurrencyPipe\"><code>CurrencyPipe</code></a>: Transforms a number to a currency string.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"/api/common/DecimalPipe\"><code>DecimalPipe</code></a>：把數字轉換成十進位制數的字串。</p><p translation-origin=\"off\"><a href=\"/api/common/DecimalPipe\"><code>DecimalPipe</code></a>: Transforms a number into a decimal number string.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/common/PercentPipe\"><code>PercentPipe</code></a>：把數字轉換成百分比字串。</p><p translation-origin=\"off\"><a href=\"api/common/PercentPipe\"><code>PercentPipe</code></a>: Transforms a number to a percentage string.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">比如，<code>{{today | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>}}</code> 使用 <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code> 以 <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 中指定的本地化格式顯示當前日期。</p><p translation-result=\"on\">要覆蓋 <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 的值， 請新增 <code>locale</code> 引數。比如，要強制該貨幣使用 <code>en-US</code> 而不管你為 <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 設定的是哪種本地環境，請使用如下格式：<code>{{amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> : 'en-US'}}</code>。</p><p translation-origin=\"off\">For example, <code>{{today | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>}}</code> uses <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code> to display the current date in the format for the locale in <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code>.</p>\n\n<p translation-origin=\"off\">To override the value of <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code>, add the <code>locale</code> parameter.\nFor example, to force the currency to use <code>en-US</code> no matter which language-locale you set for <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code>, use this form: <code>{{amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> : 'en-US'}}</code>.</p>\n\n<a id=\"Template-translations\"></a>\n<h2 id=\"prepare-templates-for-translations\" translation-result=\"on\">準備翻譯範本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#prepare-templates-for-translations\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prepare-templates-for-translations\">Prepare templates for translations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#prepare-templates-for-translations\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要翻譯你的應用範本，就要用 Angular 的 <code>i18n</code> 屬性標記出文本、屬性和其他元素為翻譯人員或翻譯服務準備出文本。請遵循以下常規步驟：</p><p translation-origin=\"off\">To translate your app's templates, you need to prepare the text for a translator or translation service by marking text, attributes, and other elements with the Angular <code>i18n</code> attribute.\nFollow these general steps:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#i18n-attribute\">標記要翻譯的文字</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#i18n-attribute\">Mark text for translations</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#help-translator\">新增有用的描述和含義</a>，以便為翻譯人員提供額外的資訊或背景資訊。</p><p translation-origin=\"off\"><a href=\"guide/i18n#help-translator\">Add helpful descriptions and meanings</a> to help the translator with additional information or context.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#no-element\">翻譯不顯示的文字</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#no-element\">Translate text not for display</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#translate-attributes\">標記要翻譯的元素屬性</a> ，比如圖像的 <code>title</code> 屬性。</p><p translation-origin=\"off\"><a href=\"guide/i18n#translate-attributes\">Mark element attributes for translations</a>, such as an image's <code>title</code> attribute.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#plurals-alternates\">標記複數形式和替換形式以便翻譯</a>，以符合不同語言的複數規則和語法結構。</p><p translation-origin=\"off\"><a href=\"guide/i18n#plurals-alternates\">Mark plurals and alternates for translation</a> in order to comply with the pluralization rules and grammatical constructions of different languages.</p>\n\n</li>\n</ol>\n<a id=\"i18n-attribute\"></a>\n<h3 id=\"mark-text-for-translations\" translation-result=\"on\">標記要翻譯的文字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-text-for-translations\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"mark-text-for-translations\">Mark text for translations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-text-for-translations\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">使用 <code>i18n</code> 屬性在元件範本中標記靜態文字訊息以進行翻譯。把它放到每個帶有要翻譯的靜態文字的元素標籤上。</p><p translation-result=\"on\">比如，下面的 <code>&lt;h1&gt;</code> 標籤會顯示一個簡單的英文問候語 “Hello i18n！”。</p><p translation-origin=\"off\">Mark the static text messages in your component templates for translation using the <code>i18n</code> attribute.\nPlace it on every element tag with fixed text to be translated.</p>\n\n<p translation-origin=\"off\">For example, the following <code>&lt;h1&gt;</code> tag displays a simple English language greeting, \"Hello i18n!\"</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"greeting\" header=\"src/app/app.component.html\">\n&lt;h1&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p translation-result=\"on\">要把這個問候語標記為要翻譯的，請把 <code>i18n</code> 屬性新增到 <code>&lt;h1&gt;</code> 標籤上。</p><p translation-origin=\"off\">To mark the greeting for translation, add the <code>i18n</code> attribute to the <code>&lt;h1&gt;</code> tag.</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute\" header=\"src/app/app.component.html\">\n&lt;h1 i18n&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\"><code>i18n</code> 是一個自訂屬性，Angular 的工具和編譯器都認識它。編譯完成後，編譯器會刪除它。它並不是 Angular 中的指令。</p><p translation-origin=\"off\"><code>i18n</code> is a custom attribute, recognized by Angular tools and compilers.\nAfter translation, the compiler removes it. It is not an Angular directive.</p>\n\n</div>\n<a id=\"help-translator\"></a>\n<h3 id=\"add-helpful-descriptions-and-meanings\" translation-result=\"on\">新增有用的描述和含義<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#add-helpful-descriptions-and-meanings\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"add-helpful-descriptions-and-meanings\">Add helpful descriptions and meanings<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#add-helpful-descriptions-and-meanings\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要準確翻譯文字資訊，翻譯人員可能需要額外的資訊或上下文。把此文字資訊的<em>描述</em>新增為 <code>i18n</code> 屬性的值，如下例所示：</p><p translation-origin=\"off\">To translate a text message accurately, the translator may need additional information or context.\nAdd a <em>description</em> of the text message as the value of the <code>i18n</code> attribute, as shown in the following example:</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-desc\" header=\"src/app/app.component.html\">\n&lt;h1 i18n=\"An introduction header for this sample\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p translation-result=\"on\">翻譯人員可能還需要知道該特定應用上下文中，這段文字的意義或意圖，以便像其它具有相同含義的文字一樣翻譯它。用帶<em>含義</em>的 <code>i18n</code> 屬性值開頭，並用 <code>|</code> 字元把它和<em>描述</em>分隔開。</p><p translation-result=\"on\">比如，你可以新增這樣的含義：<code>&lt;h1&gt;</code> 標籤是一個站點標頭，它在用作標題時和從另一段文字中參考時都要翻譯成一樣的：</p><p translation-origin=\"off\">The translator may also need to know the meaning or intent of the text message within this particular app context, in order to translate it the same way as other text with the same meaning.\nStart the <code>i18n</code> attribute value with the <em>meaning</em> and\nseparate it from the <em>description</em> with the <code>|</code> character: <code>&lt;meaning&gt;|&lt;description&gt;</code>.</p>\n\n<p translation-origin=\"off\">For example, you can add the meaning that this <code>&lt;h1&gt;</code> tag is a site header that needs to be translated the same way not only when used as a header, but also when referred to from another section of text:</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-meaning\" header=\"src/app/app.component.html\">\n&lt;h1 i18n=\"site header|An introduction header for this sample\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p translation-result=\"on\">其結果是，任何標有 <code>site header</code> 的文字，都會翻譯成完全相同的結果。</p><p translation-origin=\"off\">As a result, any text marked with <code>site header</code> as the <em>meaning</em> is translated exactly the same way.</p>\n\n<a id=\"transaction-unit-ids\"></a>\n<div class=\"callout is-helpful\">\n<header ng-should-translate=\"\" translation-result=\"on\">含義（meaning）如何控制文字的提取和合並</header><header ng-should-translate=\"\" translation-origin=\"off\">How meanings control text extraction and merging</header>\n\n<p translation-result=\"on\">Angular 提取工具（在本指南的<a href=\"guide/i18n#ng-xi18n\">“使用翻譯檔案”</a>中講解）會為範本中的每個 <code>i18n</code> 屬性產生一個翻譯單元條目。它會根據其<em>含義</em>和<em>描述</em>為每個翻譯單元分配一個唯一的 ID。</p><p translation-result=\"on\">要用不同的 ID 提取具有不同<em>含義</em>的文字元素。比如，如果單詞 “right” 出現在一個地方時表示正確（比如：\"You are right\"），而在另一個地方的含義是方向（比如：\"Turn right\"），那麼這個詞的翻譯就會有所不同，並且會作為不同的翻譯條目合併回應用。</p><p translation-result=\"on\">如果相同的文字元素具有不同的<em>描述</em>但<em>含義</em>相同，那麼它們只會被提取一次，只有一個 ID。只要出現了相同的文字元素，就會把這個翻譯條目合併回應用。</p><p translation-origin=\"off\">The Angular extraction tool (described in <a href=\"guide/i18n#ng-xi18n\">Work with translation files</a> in this guide) generates a translation unit entry for each <code>i18n</code>\nattribute in a template.\nIt assigns each translation unit a unique ID based on the <em>meaning</em> and <em>description</em>.</p>\n\n<p translation-origin=\"off\">The same text elements with different <em>meanings</em> are extracted with separate IDs.\nFor example, if the word \"right\" appears with the meaning <code>correct</code> (as in \"You are right\") in one place, and with the meaning <code>direction</code> (as in \"Turn right\") in another place, the word is translated differently and merged back into the app as different translation entries.</p>\n\n<p translation-origin=\"off\">If the same text elements have different <em>descriptions</em> but the same <em>meaning</em>, they are extracted only once, with only one ID. That one translation entry is merged back into the app wherever the same text elements appear.</p>\n\n</div>\n<a id=\"no-element\"></a>\n<h3 id=\"translate-text-not-for-display\" translation-result=\"on\">翻譯不顯示的文字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-text-not-for-display\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"translate-text-not-for-display\">Translate text not for display<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-text-not-for-display\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">雖然也可以使用 <code>&lt;span&gt;</code> 標籤來翻譯未顯示的文字，但這樣你就會建立一個新的 DOM 元素。要避免這種情況，請把它放在 <code>&lt;ng-container&gt;</code> 元素中，該元素會被轉換成一個不顯示的 HTML 註釋，如下例所示：</p><p translation-origin=\"off\">While you can translate non-displayed text using a <code>&lt;span&gt;</code> tag, you are creating a new DOM element. To avoid doing so, wrap the text in an <code>&lt;ng-container&gt;</code> element, which is transformed into a non-displayed HTML comment as shown in this example:</p>\n\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-ng-container\">\n&lt;ng-container i18n&gt;I don't output any element&lt;/ng-container&gt;\n\n</code-example>\n<a id=\"translate-attributes\"></a>\n<h3 id=\"mark-element-attributes-for-translations\" translation-result=\"on\">標記要翻譯的元素屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-element-attributes-for-translations\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"mark-element-attributes-for-translations\">Mark element attributes for translations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-element-attributes-for-translations\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code>title</code> 等 HTML 屬性包含要與範本中的其它顯示文字一起翻譯的文字。下面的程式碼展示了一個帶 <code>title</code> 屬性的圖片：</p><p translation-origin=\"off\">HTML attributes such as <code>title</code> include text that should be translated along with the rest of the displayed text in the template.\nThe following example shows an image with a <code>title</code> attribute:</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-title\" header=\"src/app/app.component.html\">\n&lt;img [src]=\"logo\" title=\"Angular logo\"&gt;\n\n</code-example>\n<p translation-result=\"on\">為了標記出要翻譯的屬性，就要為它新增一個 <code>i18n-</code><em>屬性名</em> 屬性。下面的例子展示瞭如何透過新增 <code>i18n-title</code> 在 <code>img</code> 標籤上標記出 <code>title</code> 屬性：</p><p translation-origin=\"off\">To mark an attribute for translation, add <code>i18n-</code><em>attribute</em> in which <em>attribute</em> is the attribute to translate.\nThe following example shows how to mark the\n<code>title</code> attribute on the <code>img</code> tag by adding <code>i18n-title</code>:</p>\n\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-title-translate\" header=\"src/app/app.component.html\">\n&lt;img [src]=\"logo\" i18n-title title=\"Angular logo\" /&gt;\n\n</code-example>\n<p translation-result=\"on\">你可以對任意元素的任何屬性新增 <code>i18n-</code><em>屬性名</em> 屬性。你也可以用 <code>i18n-</code><em>屬性名</em><code>=\"&lt;meaning&gt;|&lt;description&gt;@@&lt;id&gt;\"</code> 語法來為它指定含義、描述和自訂 ID。</p><p translation-origin=\"off\">You can use <code>i18n-</code><em>attribute</em> with any attribute of any element.\nYou also can assign a meaning, description, and custom ID with the <code>i18n-</code><em>attribute</em><code>=\"&lt;meaning&gt;|&lt;description&gt;@@&lt;id&gt;\"</code> syntax.</p>\n\n<a id=\"plurals-alternates\"></a>\n<h3 id=\"mark-plurals-and-alternates-for-translation\" translation-result=\"on\">標記複數形式和替換形式以便翻譯<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-plurals-and-alternates-for-translation\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"mark-plurals-and-alternates-for-translation\">Mark plurals and alternates for translation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-plurals-and-alternates-for-translation\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">不同的語言有不同的複數規則和語法結構，這會讓翻譯變得困難。要簡化翻譯，可以使用帶有正則表示式的 Unicode 國際化元件（International Components for Unicode ICU）子句，比如 <code>plural</code> 標出要用的複數形式，用 <code>select</code> 標出候選的備用文字。</p><p translation-origin=\"off\">Different languages have different pluralization rules and grammatical constructions that can make translation difficult.\nTo simplify translation, use International Components for Unicode (ICU) clauses with regular expressions, such as <code>plural</code> to mark the uses of plural numbers, and <code>select</code> to mark alternate text choices.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">ICU 條款遵循 <a href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules\" title=\"多元化規則\">CLDR 複數規則</a>中指定的 <a href=\"http://userguide.icu-project.org/formatparse/messages\" title=\"ICU 訊息格式\">ICU 訊息格式</a> 。</p><p translation-origin=\"off\">The ICU clauses adhere to the <a href=\"http://userguide.icu-project.org/formatparse/messages\" title=\"ICU Message Format\">ICU Message Format</a> specified in the <a href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules\" title=\"Pluralization Rules\">CLDR pluralization rules</a>.</p>\n\n</div>\n<a id=\"plural-ICU\"></a>\n<h4 id=\"mark-plurals\" translation-result=\"on\">標出複數形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-plurals\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"mark-plurals\">Mark plurals<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-plurals\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">使用 <code>plural</code> 子句標出那些在逐字翻譯時可能用不到的表示式。</p><p translation-result=\"on\">比如，如果你想用英文顯示 “updated x minutes ago”，你可能需要顯示 “just now”、“one minute ago” 或 “ <em>x</em> minutes ago”（ <em>x</em>為實際數字）。在其他語言中這種基數規則可能不同。下面的程式碼示範瞭如何使用 <code>plural</code> 子句表達這三個選項：</p><p translation-origin=\"off\">Use the <code>plural</code> clause to mark expressions that may not be meaningful if translated word-for-word.</p>\n\n<p translation-origin=\"off\">For example, if you want to display \"updated x minutes ago\" in English, you may want to display \"just now\", \"one minute ago\", or \"<em>x</em> minutes ago\" (with <em>x</em> as the actual number).\nOther languages might express this cardinality differently.\nThe following example shows how to use a <code>plural</code> clause to express these three options:</p>\n\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-plural\" header=\"src/app/app.component.html\">\n&lt;span i18n&gt;Updated {minutes, plural, =0 {just now} =1 {one minute ago} other {{{minutes}} minutes ago}}&lt;/span&gt;\n\n</code-example>\n<p translation-result=\"on\">在上面的例子中：</p><p translation-origin=\"off\">In the above example:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">第一個引數 <code>minutes</code> ，被繫結到元件的屬性（ <code>minutes</code> ），它決定了分鐘數。</p><p translation-origin=\"off\">The first parameter, <code>minutes</code>, is bound to the component property (<code>minutes</code>), which determines the number of minutes.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">第二個引數把它標識為 <code>plural</code> 翻譯型別。</p><p translation-origin=\"off\">The second parameter identifies this as a <code>plural</code> translation type.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">第三個引數定義了複數分類模式以及與之匹配的值：</p><p translation-origin=\"off\">The third parameter defines a pattern of pluralization categories and their matching values:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">零分鐘時，使用 <code>=0 {just now}</code> 。</p><p translation-origin=\"off\">For zero minutes, use <code>=0 {just now}</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一分鐘後，使用 <code>=1 {one minute}</code> 。</p><p translation-origin=\"off\">For one minute, use <code>=1 {one minute}</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">  對於任何無法匹配的基數，使用 <code>other {{{minutes}} minutes ago}</code> 。你還可以使用表示式中帶有 <code>plural</code> 子句的 HTML 標記和<a href=\"guide/glossary#interpolation\" title=\"插值的定義\">插值</a> ，比如 <code>{{{minutes}}</code>。</p><p translation-origin=\"off\">For any unmatched cardinality, use <code>other {{{minutes}} minutes ago}</code>.\nYou can use HTML markup and <a href=\"guide/glossary#interpolation\" title=\"Definition of interpolation\">interpolations</a> such as <code>{{{minutes}}</code> with the <code>plural</code> clause in expressions.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在複數類別後面，把預設文字（英文）放在花括號（<code>{}</code>）中。</p><p translation-origin=\"off\">After the pluralization category, put the default text (English) within braces (<code>{}</code>).</p>\n\n</li>\n</ul>\n</li>\n</ul>\n<p translation-result=\"on\">複數類別包括（取決於語言）：</p><p translation-origin=\"off\">Pluralization categories include (depending on the language):</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>=0</code>（或任何其他數字）</p><p translation-origin=\"off\"><code>=0</code> (or any other number)</p>\n\n</li>\n<li>\n<p><code>zero</code></p>\n</li>\n<li>\n<p><code>one</code></p>\n</li>\n<li>\n<p><code>two</code></p>\n</li>\n<li>\n<p><code>few</code></p>\n</li>\n<li>\n<p><code>many</code></p>\n</li>\n<li>\n<p><code>other</code></p>\n</li>\n</ul>\n<div class=\"callout is-important\">\n<header ng-should-translate=\"\" translation-result=\"on\">本地環境可能不支援某些複數類別</header><header ng-should-translate=\"\" translation-origin=\"off\">Locales may not support some pluralization categories</header>\n\n<p translation-result=\"on\">很多本地環境都不支援某些複數類別。比如，預設本地環境（ <code>en-US</code> ）和其他本地環境（比如 <code>es</code> ）都有非常簡單的 <code>plural()</code> 函式，它們不支援這 <code>few</code> 類別。 <a href=\"https://github.com/angular/angular/blob/ecffc3557fe1bff9718c01277498e877ca44588d/packages/core/src/i18n/locale_en.ts#L15-L18\">en-US</a> 的 <code>plural()</code> 函式實比如下：</p><p translation-origin=\"off\">Many locales don't support some of the pluralization categories.\nFor example, the default locale (<code>en-US</code>) and other locales (such as <code>es</code>) have very simple <code>plural()</code> functions that don't support the <code>few</code> category.\nThe following shows the <a href=\"https://github.com/angular/angular/blob/ecffc3557fe1bff9718c01277498e877ca44588d/packages/core/src/i18n/locale_en.ts#L15-L18\">en-US</a> <code>plural()</code> function:</p>\n\n<code-example>\nfunction plural(n: number): number {\n  let i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n  if (i === 1 &amp;&amp; v === 0) return 1;\n  return 5;\n}\n</code-example>\n<p translation-result=\"on\">該函式只返回 1（<code>one</code>）或 5（<code>other</code>）。這個 <code>few</code> 類別永遠不會匹配。如果所有複數類別都不匹配，Angular 就會嘗試匹配 <code>other</code> 類別。<code>other</code> 用作缺失類別的標準後備。</p><p translation-result=\"on\">關於複數類別的詳細資訊，請參閱 “CLDR - Unicode 公共本地化資料儲存庫”中的<a href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Choosing-Plural-Category-Names\">選擇複數類別名稱</a> 。</p><p translation-origin=\"off\">The function will only ever return 1 (<code>one</code>) or 5 (<code>other</code>).\nThe <code>few</code> category will never match.\nIf none of the pluralization categories match, Angular will try to match <code>other</code>.\nUse <code>other</code> as the standard fallback for a missing category.</p>\n\n<p translation-origin=\"off\">For more information about pluralization categories, see <a href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Choosing-Plural-Category-Names\">Choosing plural category names</a> in the CLDR - Unicode Common Locale Data Repository.</p>\n\n</div>\n<a id=\"select-ICU\"></a>\n<a id=\"nesting-ICUS\"></a>\n<h3 id=\"mark-alternates-and-nested-expressions\" translation-result=\"on\">標記替代表達式和巢狀(Nesting)表示式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-alternates-and-nested-expressions\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"mark-alternates-and-nested-expressions\">Mark alternates and nested expressions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#mark-alternates-and-nested-expressions\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果需要根據變數的值來顯示備用文字，你需要翻譯所有的備用項。</p><p translation-result=\"on\"><code>select</code> 子句類似於 <code>plural</code> 子句，它會根據你定義的字串值標記出備用文字的可選值。比如，元件範本中的下列子句綁定了元件的 <code>gender</code> 屬性，該屬性輸出以下字串值之一：“male”、“female” 或 “other”。該子句將這些值對映成適當的翻譯：</p><p translation-origin=\"off\">If you need to display alternate text depending on the value of a variable, you\nneed to translate all of the alternates.</p>\n\n<p translation-origin=\"off\">The <code>select</code> clause, similar to the <code>plural</code> clause, marks choices for alternate text based on your defined string values.\nFor example, the following clause in the component template binds to the component's <code>gender</code> property, which outputs one of the following string values: \"male\", \"female\" or \"other\".\nThe clause maps those values to the appropriate translations:</p>\n\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-select\" header=\"src/app/app.component.html\">\n&lt;span i18n&gt;The author is {gender, select, male {male} female {female} other {other}}&lt;/span&gt;\n\n</code-example>\n<p translation-result=\"on\">你還可以把不同的子句巢狀(Nesting)在一起，比如下例中的 <code>plural</code> 和 <code>select</code> 子句：</p><p translation-origin=\"off\">You can also nest different clauses together, such as the <code>plural</code> and <code>select</code> clauses in the following example:</p>\n\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-nested\" header=\"src/app/app.component.html\">\n&lt;span i18n&gt;Updated: {minutes, plural,\n  =0 {just now}\n  =1 {one minute ago}\n  other {{{minutes}} minutes ago by {gender, select, male {male} female {female} other {other}}}}\n&lt;/span&gt;\n\n</code-example>\n<a id=\"ng-xi18n\"></a>\n<a id=\"ng-xi18n-options\"></a>\n<a id=\"translate\"></a>\n<h2 id=\"work-with-translation-files\" translation-result=\"on\">使用翻譯檔案<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#work-with-translation-files\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"work-with-translation-files\">Work with translation files<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#work-with-translation-files\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在準備好要翻譯的範本後，使用 Angular CLI 的 <code>xi18n</code> 命令把範本中標記過的文字提取到<em>源語言</em>檔案中。所謂標記過的文字包括標有 <code>i18n</code> 的文字和標有 <code>i18n-</code><em>屬性名</em> 的屬性，如前一節中所描述。請執行以下步驟：</p><p translation-origin=\"off\">After preparing a template for translation, use the Angular CLI <code>extract-i18n</code> command to extract the marked text in the template into a <em>source language</em> file.\nThe marked text includes text marked with <code>i18n</code> and attributes marked with <code>i18n-</code><em>attribute</em> as described in the previous section.\nFollow these steps:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">   <a href=\"guide/i18n#create-source\">提取源語言檔案</a> 。你可以選擇更改位置、格式和名稱。</p><p translation-origin=\"off\"><a href=\"guide/i18n#create-source\">Extract the source language file</a>.\nYou can optionally change the location, format, and name.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">透過複製源語言檔案，可以<a href=\"guide/i18n#localization-folder\">為每種語言建立一個翻譯檔案</a>。</p><p translation-origin=\"off\"><a href=\"guide/i18n#localization-folder\">Create a translation file for each language</a> by copying the source language file.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n#translate-text-nodes\">翻譯每個翻譯檔案</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#translate-text-nodes\">Translate each translation file</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">單獨<a href=\"guide/i18n#translate-plural-select\">翻譯複數形式和替代表達式</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#translate-plural-select\">Translate plurals and alternate expressions</a> separately.</p>\n\n</li>\n</ol>\n<a id=\"create-source\"></a>\n<h3 id=\"extract-the-source-language-file\" translation-result=\"on\">提取源語言檔案<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#extract-the-source-language-file\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"extract-the-source-language-file\">Extract the source language file<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#extract-the-source-language-file\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要提取源語言檔案，請開啟終端視窗，切換到應用專案的根目錄，執行以下 CLI 命令：</p><p translation-origin=\"off\">To extract the source language file, open a terminal window, change to the root directory of your app project, and run the following CLI command:</p>\n\n<code-example language=\"sh\">\n  ng extract-i18n\n</code-example>\n<p translation-result=\"on\"><code>xi18n</code> 命令使用 <a href=\"https://en.wikipedia.org/wiki/XLIFF\" title=\"關於 XLIFF 的維基百科頁面\">XML 本地化交換檔案格式（XLIFF 版本 1.2）</a>在專案的根目錄下建立一個名為 <code>messages.xlf</code> 的源語言檔案。</p><p translation-result=\"on\">使用下列 <code>xi18n</code> 命令可以改變源語言檔案的位置、格式和檔名：</p><p translation-origin=\"off\">The <code>extract-i18n</code> command creates a source language file named <code>messages.xlf</code> in your project's root directory using the <a href=\"https://en.wikipedia.org/wiki/XLIFF\" title=\"Wikipedia page about XLIFF\">XML Localization Interchange File Format (XLIFF, version 1.2)</a>.</p>\n\n<p translation-origin=\"off\">Use the following <code>extract-i18n</code> command options to change the source language file location, format, and file name:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>--output-path</code>：改變位置。</p><p translation-origin=\"off\"><code>--output-path</code>: Change the location.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>--format</code>：改變格式。</p><p translation-origin=\"off\"><code>--format</code>: Change the format.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>--outFile</code>：改變檔名。</p><p translation-origin=\"off\"><code>--outFile</code>: Change the file name.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">注意：<code>--i18n-locale</code> 選項已棄用。 Angular 9 會使用應用的<a href=\"guide/workspace-config\" title=\"Angular 工作區配置\">工作區配置</a>檔案（ <code>angular.json</code> ）中<a href=\"guide/workspace-config\" title=\"Angular 工作區配置\">配置</a>的源本地環境。</p><p translation-origin=\"off\">Note: The <code>--i18n-locale</code> option is deprecated.\nAngular 9 uses the source locale configured in your app's <a href=\"guide/workspace-config\" title=\"Angular workspace configuration\">workspace configuration</a> file (<code>angular.json</code>).</p>\n\n<h4 id=\"change-the-source-language-file-location\" translation-result=\"on\">修改源語言檔案的位置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#change-the-source-language-file-location\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"change-the-source-language-file-location\">Change the source language file location<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#change-the-source-language-file-location\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">要把檔案建立在 <code>src/locale</code> 目錄下，請把輸出路徑指定為一個選項，如下例所示：</p><p translation-origin=\"off\">To create a file in the <code>src/locale</code> directory, specify the output path as an option, as shown in the following example:</p>\n\n<code-example language=\"sh\">\n  ng extract-i18n --output-path src/locale\n</code-example>\n<a id=\"other-formats\"></a>\n<h4 id=\"change-the-source-language-file-format\" translation-result=\"on\">修改源語言檔案格式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#change-the-source-language-file-format\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"change-the-source-language-file-format\">Change the source language file format<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#change-the-source-language-file-format\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\"><code>xi18n</code> 命令可以用三種翻譯格式讀寫檔案：</p><p translation-origin=\"off\">The <code>extract-i18n</code> command can read and write files in three translation formats:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">XLIFF 1.2（預設）</p><p translation-origin=\"off\">XLIFF 1.2 (default)</p>\n\n</li>\n<li>\n<p>XLIFF 2</p>\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"http://cldr.unicode.org/development/development-process/design-proposals/xmb\">XML 訊息套件（XMB）</a></p><p translation-origin=\"off\"><a href=\"http://cldr.unicode.org/development/development-process/design-proposals/xmb\">XML Message Bundle (XMB)</a></p>\n\n</li>\n</ul>\n<p translation-result=\"on\">使用 <code>--format</code> 命令選項顯式指定轉換格式，如下例所示：</p><p translation-origin=\"off\">Specify the translation format explicitly with the <code>--format</code> command option, as shown in the following examples:</p>\n\n<code-example language=\"sh\">\nng extract-i18n  --format=xlf\nng extract-i18n  --format=xlf2\nng extract-i18n  --format=xmb\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">  XLIFF 檔案使用副檔名 <code>.xlf</code>。 XMB 格式產生 <code>.xmb</code> 源語言檔案，但使用 <code>.xtb</code>（XML Translation Bundle：XTB）翻譯檔案。</p><p translation-origin=\"off\">  XLIFF files use the extension <code>.xlf</code>.\nThe XMB format generates <code>.xmb</code> source language files but uses<code>.xtb</code> (XML Translation Bundle: XTB) translation files.</p>\n\n</div>\n<h4 id=\"change-the-source-language-file-name\" translation-result=\"on\">修改源語言檔名<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#change-the-source-language-file-name\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"change-the-source-language-file-name\">Change the source language file name<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#change-the-source-language-file-name\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">要更改提取工具產生的源語言檔案的名稱，請使用 <code>--outFile</code> 命令選項：</p><p translation-origin=\"off\">To change the name of the source language file generated by the extraction tool, use\nthe <code>--outFile</code> command option:</p>\n\n<code-example language=\"sh\">\n  ng extract-i18n --out-file source.xlf\n</code-example>\n<a id=\"localization-folder\"></a>\n<h3 id=\"create-a-translation-file-for-each-language\" translation-result=\"on\">為每種語言建立一個翻譯檔案<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#create-a-translation-file-for-each-language\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"create-a-translation-file-for-each-language\">Create a translation file for each language<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#create-a-translation-file-for-each-language\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code>ng xi18n</code> 命令（不帶選項時）會在專案的 <code>src</code> 資料夾下產生一個名為 <code>messages.xlf</code> 的源語言檔案。透過複製源語言檔案為每種語言建立一個<em>翻譯</em>檔案。為了避免混淆這麼多翻譯檔案，你應該把這些語言的翻譯檔案整理到 <code>src/</code> 下的一個專用 <code>locale</code> 資料夾中。這些檔案使用與相關的本地環境匹配的副檔名，比如 <code>messages.fr.xlf</code> 。</p><p translation-result=\"on\">比如，要建立法語翻譯檔案，請按照下列步驟操作：</p><p translation-origin=\"off\">The <code>ng extract-i18n</code> command (with no options) generates a source language file named <code>messages.xlf</code> in the project <code>src</code> folder.\nCreate <em>translation</em> files for each language by copying the source language file.\nTo avoid confusion with multiple translations, you should organize the language translation files by locale in a dedicated <code>locale</code> folder under <code>src/</code>.\nUse a filename extension that matches the associated locale, such as <code>messages.fr.xlf</code>.</p>\n\n<p translation-origin=\"off\">For example, to create a French translation file, follow these steps:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">複製一下 <code>messages.xlf</code> 源語言檔案。</p><p translation-origin=\"off\">Make a copy of the <code>messages.xlf</code> source language file.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">把這份副本放在 <code>src/locale</code> 資料夾中。</p><p translation-origin=\"off\">Put the copy in the <code>src/locale</code> folder.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">   把該副本重新命名為 <code>messages.fr.xlf</code> 以便進行法語（ <code>fr</code> ）翻譯。把這個翻譯檔案發給翻譯人員。</p><p translation-origin=\"off\">Rename the copy to <code>messages.fr.xlf</code> for the French language (<code>fr</code>) translation.\nSend this translation file to the translator.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">針對要新增到應用中的每種語言，重複上述步驟。</p><p translation-origin=\"off\">Repeat the above steps for each language you want to add to your app.</p>\n\n<a id=\"translate-text-nodes\"></a>\n<h3 id=\"translate-each-translation-file\" translation-result=\"on\">翻譯各個翻譯檔案<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-each-translation-file\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"translate-each-translation-file\">Translate each translation file<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-each-translation-file\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">除非你能流利的說那種語言並且有時間編輯這些翻譯檔案，否則很可能要把每個翻譯檔案都發給翻譯人員，翻譯人員會使用 XLIFF 檔案編輯器來建立和編輯翻譯。</p><p translation-result=\"on\">要示範這個過程，請參閱<live-example></live-example>中的 <code>messages.fr.xlf</code> 檔案，它包含法語翻譯，無需特殊的 XLIFF 編輯器或法語知識，即可編輯。請執行以下步驟：</p><p translation-origin=\"off\">Unless you are fluent in the language and have the time to edit translations, you would likely send each translation file to a translator, who would then use an XLIFF file editor to create and edit the translation.</p>\n\n<p translation-origin=\"off\">To demonstrate this process, see the <code>messages.fr.xlf</code> file in the <live-example></live-example>, which includes a French translation you can edit without a special XLIFF editor or knowledge of French.\nFollow these steps:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">開啟 <code>messages.fr.xlf</code> 並找到第一個 <code>&lt;trans-unit&gt;</code> 元素。這是一個<em>翻譯單元</em> ，也叫做<em>文字節點</em>，代表對之前標記過 <code>i18n</code> 屬性的 <code>&lt;h1&gt;</code> 標籤的翻譯：</p><p translation-origin=\"off\">Open <code>messages.fr.xlf</code> and find the first <code>&lt;trans-unit&gt;</code> element. This is a <em>translation unit</em>, also known as a <em>text node</em>, representing the translation of the <code>&lt;h1&gt;</code> greeting tag that was previously marked with the <code>i18n</code> attribute:</p>\n\n</li>\n</ol>\n<blockquote>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-hello-before\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n  &lt;source&gt;Hello i18n!&lt;/source&gt;\n  &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n  &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n</blockquote>\n<blockquote>\n<p translation-result=\"on\"><code>id=\"introductionHeader\"\"</code> 是一個<a href=\"guide/i18n#custom-id\" title=\"用自訂 ID 管理帶標記的文字\">自訂 ID</a> ，但在源 HTML 中沒有 <code>@@</code> 字首。</p><p translation-origin=\"off\">The <code>id=\"introductionHeader\"\"</code> is a <a href=\"guide/i18n#custom-id\" title=\"Manage marked text with custom IDs\">custom ID</a>, but without the <code>@@</code> prefix required in the source HTML.</p>\n\n</blockquote>\n<ol start=\"2\">\n<li>\n<p translation-result=\"on\">在文字節點中複製 <code>&lt;source&gt;...&lt;/source&gt;</code> 元素，把它重新命名為 <code>target</code> 元素，然後用法語文字替換它的內容：</p><p translation-origin=\"off\">Duplicate the <code>&lt;source&gt;...&lt;/source&gt;</code> element in the text node, rename it <code>target</code>, and then replace its content with the French text:</p>\n\n</li>\n</ol>\n<blockquote>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-hello\" header=\"src/locale/messages.fr.xlf (trans-unit, after translation)\">\n&lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n  &lt;source&gt;Hello i18n!&lt;/source&gt;\n  &lt;target&gt;Bonjour i18n !&lt;/target&gt;\n  &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n  &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n</blockquote>\n<blockquote>\n<p translation-result=\"on\">在更復雜的翻譯中，以前講過的<a href=\"guide/i18n#help-translator\" title=\"新增有用的描述和含義\">描述(description)和含義(meaning)</a>中提供的資訊和上下文可以幫助你選擇合適的單詞進行翻譯。</p><p translation-origin=\"off\">In a more complex translation, the information and context in the <a href=\"guide/i18n#help-translator\" title=\"Add helpful descriptions and meanings\">description and meaning elements</a> described previously would help you choose the right words for translation.</p>\n\n</blockquote>\n<ol start=\"3\">\n<li>\n<p translation-result=\"on\">翻譯其他文字節點的方式與下例所示相同：</p><p translation-origin=\"off\">Translate the other text nodes the same way as shown in the following example:</p>\n\n</li>\n</ol>\n<blockquote>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-other-nodes\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"ba0cc104d3d69bf669f97b8d96a4c5d8d9559aa3\" datatype=\"html\"&gt;\n  &lt;source&gt;I don&amp;apos;t output any element&lt;/source&gt;\n  &lt;target&gt;Je n'affiche aucun élément&lt;/target&gt;\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"701174153757adf13e7c24a248c8a873ac9f5193\" datatype=\"html\"&gt;\n  &lt;source&gt;Angular logo&lt;/source&gt;\n  &lt;target&gt;Logo d'Angular&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n</blockquote>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">  不要更改翻譯單元的 ID。每個 <code>id</code> 都是由 Angular 產生的，取決於範本文字的內容及其指定的含義。如果你改變了文字或含義，那麼 <code>id</code> 就會改變。關於管理文字更新和 ID 的更多資訊，請參閱上一節的<a href=\"guide/i18n#custom-id\" title=\"用自訂 ID 管理帶標記的文字\">自訂 ID</a> 。</p><p translation-origin=\"off\">  Don't change the IDs for translation units.\nEach <code>id</code> is generated by Angular and depends on the content of the template text and its assigned meaning.\nIf you change either the text or the meaning, then the <code>id</code> changes.\nFor more about managing text updates and IDs, see the previous section on <a href=\"guide/i18n#custom-id\" title=\"Manage marked text with custom IDs\">custom IDs</a>.</p>\n\n</div>\n<a id=\"translate-plural-select\"></a>\n<h3 id=\"translate-plurals-and-alternate-expressions\" translation-result=\"on\">翻譯複數和替代表達式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-plurals-and-alternate-expressions\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"translate-plurals-and-alternate-expressions\">Translate plurals and alternate expressions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-plurals-and-alternate-expressions\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><a href=\"guide/i18n#plurals-alternates\" title=\"標記複數形式和替換形式以進行翻譯\"><code>plural</code> 和 <code>select</code></a>的<a href=\"guide/i18n#plurals-alternates\" title=\"標記複數形式和替換形式以進行翻譯\"><code>plural</code> ICU 表示式</a>作為附加資訊被提取出來，因此你必須單獨翻譯它們。</p><p translation-origin=\"off\">The <a href=\"guide/i18n#plurals-alternates\" title=\"Mark plurals and alternates for translation\"><code>plural</code> and <code>select</code> ICU expressions</a> are extracted as additional messages, so you must translate them separately.</p>\n\n<a id=\"translate-plural\"></a>\n<a id=\"translate-plural\"></a>\n<h4 id=\"translate-plurals\" translation-result=\"on\">翻譯複數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-plurals\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"translate-plurals\">Translate plurals<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-plurals\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">要翻譯 <code>plural</code> ，請把它的 ICU 格式匹配值翻譯成下面的例子：</p><p translation-origin=\"off\">To translate a <code>plural</code>, translate its ICU format match values as shown in the following example:</p>\n\n<ul>\n<li>\n<p><code>just now</code></p>\n<p><code>just now</code></p>\n</li>\n<li>\n<p><code>one minute ago</code></p>\n<p><code>one minute ago</code></p>\n</li>\n<li>\n<p><code>&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago</code></p>\n<p><code>&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago</code></p>\n</li>\n</ul>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-plural\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"5a134dee893586d02bffc9611056b9cadf9abfad\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago} }&lt;/source&gt;\n  &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y a une minute} other {il y a &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p translation-result=\"on\">你可以根據需要為每種語言新增或移除多個 case。</p><p translation-origin=\"off\">You can add or remove plural cases as needed for each language.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">對於語言複數規則，參閱<a href=\"http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\" title=\"CLDR 圖表用於檢視 Common Locale Data Repository 資料\">CLDR 複數規則</a> 。</p><p translation-origin=\"off\">For language plural rules, see\n<a href=\"http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\" title=\"CLDR Charts to view the Common Locale Data Repository data\">CLDR plural rules</a>.</p>\n\n</div>\n<a id=\"translate-select\"></a>\n<a id=\"translate-select\"></a>\n<h4 id=\"translate-alternate-expressions\" translation-result=\"on\">翻譯替代表達式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-alternate-expressions\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"translate-alternate-expressions\">Translate alternate expressions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-alternate-expressions\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">Angular 還提供了另一種 <code>select</code> ICU（Unicode 國際化元件）表示式作為單獨的翻譯單元。下圖顯示了元件範本中的一個 <code>select</code> ICU 表示式：</p><p translation-origin=\"off\">Angular also extracts alternate <code>select</code> ICU expressions as separate translation units.\nThe following shows a <code>select</code> ICU expression in the component template:</p>\n\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-select\" header=\"src/app/app.component.html\">\n&lt;span i18n&gt;The author is {gender, select, male {male} female {female} other {other}}&lt;/span&gt;\n\n</code-example>\n<p translation-result=\"on\">在這個例子中，Angular 把此表示式提取成了兩個翻譯單元。第一個單元包含 <code>select</code> 子句外的文字，並使用了一個 <code>select</code> 佔位符（ <code>&lt;x id=\"ICU\"&gt;</code> ）：</p><p translation-origin=\"off\">In this example, Angular extracts the expression into two translation units. The first contains the text outside of the <code>select</code> clause, and uses a placeholder for <code>select</code> (<code>&lt;x id=\"ICU\"&gt;</code>):</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-select-1\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"f99f34ac9bd4606345071bd813858dec29f3b7d1\" datatype=\"html\"&gt;\n  &lt;source&gt;The author is &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;L'auteur est &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">在翻譯文字時，你可以根據需要移動這個佔位符，但不能刪除它。如果你刪除了佔位符，這個 ICU 表示式就不會出現在翻譯後的應用中。</p><p translation-origin=\"off\">When translating the text, you can move the placeholder if necessary, but don't remove it.\nIf you remove the placeholder, the ICU expression will not appear in your translated app.</p>\n\n</div>\n<p translation-result=\"on\">第二個翻譯單元包含 <code>select</code> 子句：</p><p translation-origin=\"off\">The second translation unit contains the <code>select</code> clause:</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-select-2\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"eff74b75ab7364b6fa888f1cbfae901aaaf02295\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_SELECT, select, male {male} female {female} other {other} }&lt;/source&gt;\n  &lt;target&gt;{VAR_SELECT, select, male {un homme} female {une femme} other {autre} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p translation-result=\"on\">下面的例子展示了翻譯過的翻譯單元：</p><p translation-origin=\"off\">The following example shows both translation units after translating:</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-select\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"f99f34ac9bd4606345071bd813858dec29f3b7d1\" datatype=\"html\"&gt;\n  &lt;source&gt;The author is &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;L'auteur est &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"eff74b75ab7364b6fa888f1cbfae901aaaf02295\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_SELECT, select, male {male} female {female} other {other} }&lt;/source&gt;\n  &lt;target&gt;{VAR_SELECT, select, male {un homme} female {une femme} other {autre} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<a id=\"translate-nested\"></a>\n<h4 id=\"translate-nested-expressions\" translation-result=\"on\">翻譯巢狀(Nesting)表示式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-nested-expressions\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"translate-nested-expressions\">Translate nested expressions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#translate-nested-expressions\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">Angular 對巢狀(Nesting)表示式的處理方式和替代表達式一樣，會把它提取成兩個翻譯單元。第一個包含巢狀(Nesting)表示式外部的文字：</p><p translation-origin=\"off\">Angular treats a nested expression in the same manner as an alternate expression, extracting it into two translation units. The first contains the text outside of the nested expression:</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-nested-1\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"972cb0cf3e442f7b1c00d7dab168ac08d6bdf20c\" datatype=\"html\"&gt;\n  &lt;source&gt;Updated: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;Mis à jour: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p translation-result=\"on\">第二個翻譯單元包含完整的巢狀(Nesting)表示式：</p><p translation-origin=\"off\">The second translation unit contains the complete nested expression:</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-nested-2\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"7151c2e67748b726f0864fc443861d45df21d706\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago by {VAR_SELECT, select, male {male} female {female} other {other} }} }&lt;/source&gt;\n  &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y a une minute} other {il y a &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes par {VAR_SELECT, select, male {un homme} female {une femme} other {autre} }} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p translation-result=\"on\">下面的例子展示了翻譯後的翻譯單元：</p><p translation-origin=\"off\">The following example shows both translation units after translating:</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-nested\" header=\"src/locale/messages.fr.xlf (trans-unit)\">\n&lt;trans-unit id=\"972cb0cf3e442f7b1c00d7dab168ac08d6bdf20c\" datatype=\"html\"&gt;\n  &lt;source&gt;Updated: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;Mis à jour: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"7151c2e67748b726f0864fc443861d45df21d706\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago by {VAR_SELECT, select, male {male} female {female} other {other} }} }&lt;/source&gt;\n  &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y a une minute} other {il y a &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes par {VAR_SELECT, select, male {un homme} female {une femme} other {autre} }} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<a id=\"merge\"></a>\n<a id=\"merge-aot\"></a>\n<h2 id=\"merge-translations-into-the-app\" translation-result=\"on\">把翻譯合併到應用中<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#merge-translations-into-the-app\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"merge-translations-into-the-app\">Merge translations into the app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#merge-translations-into-the-app\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要把已完成的譯文合併到應用中，請使用 <a href=\"guide/glossary#command-line-interface-cli\" title=\"CLI 的定義\">Angular CLI</a> 為每個本地環境建構應用的可分發副本。建構過程中會用翻譯文字替換原始文字，併為應用的每個可分發副本設定 <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 令牌。它還會載入並註冊本地化資料。</p><p translation-result=\"on\">合併之後，你可以使用伺服器端的語言檢測功能或使用不同的子目錄來為應用的每個可分發副本架設服務，就像下一章中<a href=\"guide/i18n#deploy-locales\">部署多個本地環境</a>部分描述的那樣。</p><p translation-result=\"on\">此建構過程會用<a href=\"guide/glossary#ahead-of-time-aot-compilation\">預先（AOT）編譯</a>產生一個小巧、快速、可立即執行的應用。在 Angular 9 的 Ivy 中，AOT 預設用於開發版本和生產版本，並且需要 AOT 對元件範本進行本地化。</p><p translation-origin=\"off\">To merge the completed translations into the app, use the <a href=\"guide/glossary#command-line-interface-cli\" title=\"Definition of CLI\">Angular CLI</a> to build a copy of the app's distributable files for each locale.\nThe build process replaces the original text with translated text, and sets the <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> token for each distributable copy of the app.\nIt also loads and registers the locale data.</p>\n\n<p translation-origin=\"off\">After merging, you can serve each distributable copy of the app using server-side language detection or different subdirectories, as described in the next section about <a href=\"guide/i18n#deploy-locales\">deploying multiple locales</a>.</p>\n\n<p translation-origin=\"off\">The build process uses <a href=\"guide/glossary#ahead-of-time-aot-compilation\">ahead-of-time (AOT) compilation</a> to produce a small, fast,\nready-to-run app. With Ivy in Angular version 9, AOT is used by default for both\ndevelopment and production builds, and AOT is required to localize component templates.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">關於建構過程的詳細解說，請參閱<a href=\"guide/build\" title=\"建構和提供 Angular 應用\">建構和提供 Angular 應用</a>。這個建構過程可用於 <code>.xlf</code> 格式的翻譯檔案或 Angular 能理解的其它格式，比如 <code>.xtb</code> 。</p><p translation-origin=\"off\">For a detailed explanation the build process, see <a href=\"guide/build\" title=\"Building and serving Angular apps\">Building and serving Angular apps</a>.\nThis build process works for translation files in the <code>.xlf</code> format or in another format that Angular understands, such as <code>.xtb</code>.</p>\n\n</div>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">在使用 JIT 模式時，Ivy 不支援合併 i18n 的翻譯。如果你<a href=\"guide/ivy#opting-out-of-ivy-in-version-9\">禁用了 Ivy</a> 並正在使用 JIT 模式，請參閱<a href=\"https://v8.angular.io/guide/i18n#merge-with-the-jit-compiler\" title=\"與 JIT 編譯器合併\">合併 JIT 編譯器</a> 。</p><p translation-origin=\"off\">Ivy does not support merging i18n translations when using JIT mode.\nIf you <a href=\"guide/ivy#opting-out-of-ivy-in-version-9\">disable Ivy</a> and are using JIT mode, see <a href=\"https://v8.angular.io/guide/i18n#merge-with-the-jit-compiler\" title=\"Merge with the JIT compiler\">merging with the JIT compiler</a>.</p>\n\n</div>\n<p translation-result=\"on\">要為每個本地環境建構應用的一個可分發副本，請在專案工作區配置檔案 <a href=\"guide/workspace-config\" title=\"Angular 工作區配置\"><code>angular.json</code></a> 中的<a href=\"guide/i18n#localize-config\">建構配置</a>中<a href=\"guide/i18n#localize-config\">定義本地環境</a>。這個方法透過放棄為每個本地環境執行完整建構的需求，縮短了建構過程。</p><p translation-result=\"on\">然後，你可以使用 <code>angular.json</code> 中的 <code>\"localize\"</code> 選項<a href=\"guide/i18n#localize-generate\">為每個本地環境產生一個應用版本</a> 。你也可以使用 Angular CLI <a href=\"/cli/build\" title=\"ng build 的 CLI 參考\"><code>build</code></a>命令及其 <code>--localize</code> 選項來<a href=\"guide/i18n#localize-build-command\">進行命令列建構</a>。</p><p translation-origin=\"off\">To build a separate distributable copy of the app for each locale, <a href=\"guide/i18n#localize-config\">define the locales in the build configuration</a> in your project's workspace configuration file <a href=\"guide/workspace-config\" title=\"Angular workspace configuration\"><code>angular.json</code></a>.\nThis method shortens the build process by removing the requirement to perform a full app build for each locale.</p>\n\n<p translation-origin=\"off\">You can then <a href=\"guide/i18n#localize-generate\">generate app versions for each locale</a> using the <code>\"localize\"</code> option in <code>angular.json</code>. You can also <a href=\"guide/i18n#localize-build-command\">build from the command line</a> using the Angular CLI <a href=\"/cli/build\" title=\"CLI reference for ng build\"><code>build</code></a> command with the <code>--localize</code> option.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">你也可以選擇<a href=\"guide/i18n#localize-build-one-locale\">只針對一種本地環境來用特定的建構選項</a>配置自訂本地環境。</p><p translation-origin=\"off\">You can optionally <a href=\"guide/i18n#localize-build-one-locale\">apply specific build options for just one locale</a> for a custom locale configuration.</p>\n\n</div>\n<a id=\"localize-config\"></a>\n<h3 id=\"define-locales-in-the-build-configuration\" translation-result=\"on\">在建構配置中定義本地環境<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#define-locales-in-the-build-configuration\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"define-locales-in-the-build-configuration\">Define locales in the build configuration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#define-locales-in-the-build-configuration\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在應用的建構配置（ <a href=\"guide/workspace-config\" title=\"Angular 工作區配置\"><code>angular.json</code></a> ）中使用 <code>i18n</code> 專案選項來定義專案的本地環境。它下面的子選項用於標識源語言，並告訴編譯器要在哪裡找到該專案支援的各種翻譯：</p><p translation-origin=\"off\">Use the <code>i18n</code> project option in your app's build configuration file (<a href=\"guide/workspace-config\" title=\"Angular workspace configuration\"><code>angular.json</code></a>) to define locales for a project.\nThe following sub-options identify the source language and tell the compiler where to find supported translations for the project:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>sourceLocale</code>：你在應用原始碼中使用的本地環境（預設為 <code>en-US</code> ）</p><p translation-origin=\"off\"><code>sourceLocale</code>: The locale you use within the app source code (<code>en-US</code> by default)</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>locales</code>：本地環境識別符號到翻譯檔案的對映表</p><p translation-origin=\"off\"><code>locales</code>: A map of locale identifiers to translation files</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">比如，下面的 <code>angular.json</code> 檔案片段把源本地環境設定為 <code>en-US</code> 並提供了到 <code>fr</code>（法語）本地環境翻譯檔案的路徑：</p><p translation-origin=\"off\">For example, the following excerpt of an <code>angular.json</code> file sets the source locale to <code>en-US</code> and provides the path to the <code>fr</code> (French) locale translation file:</p>\n\n<code-example language=\"json\" header=\"angular.json\">\n...\n\"projects\": {\n  \"angular.io-example\": {\n    ...\n    \"i18n\": {\n      \"sourceLocale\": \"en-US\",\n      \"locales\": {\n        \"fr\": \"src/locale/messages.fr.xlf\"\n      }\n    },\n    \"architect\": {\n    ...\n    }\n}\n</code-example>\n<a id=\"localize-generate\"></a>\n<h3 id=\"generate-app-versions-for-each-locale\" translation-result=\"on\">為每種本地環境產生一個應用版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#generate-app-versions-for-each-locale\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"generate-app-versions-for-each-locale\">Generate app versions for each locale<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#generate-app-versions-for-each-locale\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要在建構配置中使用你的本地環境定義，請使用 <code>angular.json</code> 的 <code>\"localize\"</code> 選項告訴 CLI 要為此建構配置產生哪些本地環境：</p><p translation-origin=\"off\">To use your locale definition in the build configuration, use the <code>\"localize\"</code> option in <code>angular.json</code> to tell the CLI which locales to generate for the build configuration:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">對於以前在建構配置中定義的<em>所有</em>本地環境，<em>都要</em>把 <code>\"localize\"</code> 設定為 <code>true</code>。</p><p translation-origin=\"off\">Set <code>\"localize\"</code> to <code>true</code> for <em>all</em> the locales previously defined in the build configuration.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">將 <code>\"localize\"</code> 設定為預定義的本地環境識別符號子集的陣列，來要求只建構那些本地環境版本。</p><p translation-origin=\"off\">Set <code>\"localize\"</code> to an array of a subset of the previously-defined locale identifiers to build only those locale versions.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">將 <code>\"localize\"</code> 設定為 <code>false</code> 表示禁用本地化，不產生任何特定於本地環境的版本。</p><p translation-origin=\"off\">Set <code>\"localize\"</code> to <code>false</code> to disable localization and not generate any locale-specific versions.</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">注意：本地化元件範本需要進行<a href=\"guide/glossary#ahead-of-time-aot-compilation\">預先（AOT）編譯</a>。如果更改了此設定，請將 <code>\"aot\"</code> 設定為 <code>true</code>，以便使用 AOT。</p><p translation-origin=\"off\">Note: <a href=\"guide/glossary#ahead-of-time-aot-compilation\">Ahead-of-time (AOT) compilation</a> is required to localize component templates.\nIf you changed this setting, set <code>\"aot\"</code> to <code>true</code> in order to use AOT.</p>\n\n</div>\n<p translation-result=\"on\">下面的例子展示了在 <code>angular.json</code> 中把 <code>\"localize\"</code> 選項設為 <code>true</code>，以便在建構配置中定義所有的本地環境：</p><p translation-origin=\"off\">The following example shows the <code>\"localize\"</code> option set to <code>true</code> in <code>angular.json</code> so that all locales defined in the build configuration are built:</p>\n\n<code-example language=\"json\" header=\"angular.json\">\n\"build\": {\n  \"builder\": \"@angular-devkit/build-angular:browser\",\n  \"options\": {\n    \"localize\": true,\n    \"aot\": true,\n    ...\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">由於 i18n 的部署複雜性以及最小化重建時間的需要，開發伺服器一次只支援一個本地環境的本地化。如果定義了多個本地環境，那麼當使用 <code>ng serve</code> 時，把 <code>\"localize\"</code> 選項設定為 <code>true</code> 就會導致錯誤。如果你想針對特定的本地環境（比如 <code>fr</code> ）進行開發，只要把這個選項設定為特定的本地環境（比如 <code>\"localize\": [\"fr\"]</code>）就可以了。</p><p translation-origin=\"off\">Due to the deployment complexities of i18n and the need to minimize rebuild time, the development server only supports localizing a single locale at a time.\nSetting the <code>\"localize\"</code> option to <code>true</code> will cause an error when using <code>ng serve</code> if more than one locale is defined.\nSetting the option to a specific locale, such as <code>\"localize\": [\"fr\"]</code>, can work if you want to develop against a specific locale (such as <code>fr</code>).</p>\n\n</div>\n<p translation-result=\"on\">CLI 會載入並註冊本地化資料，把產生的每個版本都放在一個特定本地環境的目錄下，以保證它與其它本地版本分開，並把這些目錄放在所配置的 <code>outputPath</code> 中。對於應用的每個變體， <code>html</code> 元素的 <code>lang</code> 屬性都會設定為這個本地環境。 CLI 還會透過在所配置的 <code>baseHref</code> 上新增本地環境，來為每個版本的應用調整 HTML 的 base HREF。</p><p translation-result=\"on\">你可以把 <code>\"localize\"</code> 屬性設定為所有配置都能有效繼承（或可覆蓋）的共享配置。</p><p translation-origin=\"off\">The CLI loads and registers the locale data, places each generated version in a locale-specific directory to keep it separate from other locale versions, and puts the directories within the configured <code>outputPath</code> for the project.\nFor each application variant the <code>lang</code> attribute of the <code>html</code> element is set to the locale.\nThe CLI also adjusts the HTML base HREF for each version of the app by adding the locale to the configured <code>baseHref</code>.</p>\n\n<p translation-origin=\"off\">You can set the <code>\"localize\"</code> property as a shared configuration that all the configurations effectively inherit (or can override).</p>\n\n<a id=\"localize-build-command\"></a>\n<h3 id=\"build-from-the-command-line\" translation-result=\"on\">從命令列建構<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#build-from-the-command-line\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"build-from-the-command-line\">Build from the command line<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#build-from-the-command-line\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">你還可以將 <code>--localize</code> 選項與 <a href=\"/cli/build\" title=\"ng build 的 CLI 參考手冊\"><code>ng build</code></a> 命令和現有的 <code>production</code> 配置一起使用。 CLI 會建構在建構配置中定義的所有本地環境，類似於把 <code>\"localize\"</code> 選項設定為 <code>true</code> ，如上一節所述。</p><p translation-origin=\"off\">You can also use the <code>--localize</code> option with the <a href=\"/cli/build\" title=\"CLI reference for ng build\"><code>ng build</code></a> command and your existing <code>production</code> configuration.\nThe CLI builds all locales defined in the build configuration, which is similar to setting the <code>\"localize\"</code> option to <code>true</code> as described in the previous section.</p>\n\n<code-example language=\"sh\">\n  ng build --localize\n</code-example>\n<a id=\"localize-build-one-locale\"></a>\n<h3 id=\"apply-specific-build-options-for-just-one-locale\" translation-result=\"on\">只針對一種本地環境應用特定的建構選項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#apply-specific-build-options-for-just-one-locale\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"apply-specific-build-options-for-just-one-locale\">Apply specific build options for just one locale<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#apply-specific-build-options-for-just-one-locale\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要想只為一個本地環境應用特定的建構選項，你可以透過指定一個本地環境來建立一個特定於本地環境的自訂配置，如下例所示：</p><p translation-origin=\"off\">To apply specific build options to only one locale, you can create a custom locale-specific configuration by specifying a single locale as shown in the following example:</p>\n\n<code-example language=\"json\" header=\"angular.json\">\n\"build\": {\n  ...\n  \"configurations\": {\n    ...\n    \"fr\": {\n      \"localize\": [\"fr\"],\n      \"main\": \"src/main.fr.ts\",\n      ...\n    }\n  }\n},\n\"serve\": {\n  ...\n  \"configurations\": {\n    ...\n    \"fr\": {\n      \"browserTarget\": \"*project-name*:build:fr\"\n    }\n  }\n}\n</code-example>\n<p translation-result=\"on\">然後，你可以將此配置檔案傳給 <code>ng serve</code> 或 <code>ng build</code> 命令。下面展示瞭如何在本指南的例子中使用該語言檔案啟動開發伺服器：</p><p translation-origin=\"off\">You can then pass this configuration to the <code>ng serve</code> or <code>ng build</code> commands.\nThe following shows how to serve the French language file created in the example for this guide:</p>\n\n<code-example language=\"sh\">\n  ng serve --configuration=fr\n</code-example>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">你可以使用 CLI 開發伺服器（ <code>ng serve</code> ），但只能使用一個本地環境。</p><p translation-origin=\"off\">You can use the CLI development server (<code>ng serve</code>), but only with a single locale.</p>\n\n</div>\n<p translation-result=\"on\">對於生產環境建構，你可以透過配置組合來執行這兩種配置：</p><p translation-origin=\"off\">For production builds, you can use configuration composition to execute both configurations:</p>\n\n<code-example language=\"sh\">\n  ng build --configuration=production,fr\n</code-example>\n<code-example language=\"json\" header=\"angular.json\">\n...\n\"architect\": {\n  \"build\": {\n    \"builder\": \"@angular-devkit/build-angular:browser\",\n    \"options\": { ... },\n    \"configurations\": {\n      \"fr\": {\n        \"localize\": [\"fr\"],\n      }\n    }\n  },\n  ...\n  \"serve\": {\n    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n    \"options\": {\n      \"browserTarget\": \"my-project:build\"\n    },\n    \"configurations\": {\n      \"production\": {\n        \"browserTarget\": \"my-project:build:production\"\n      },\n      \"fr\": {\n        \"browserTarget\": \"my-project:build:fr\"\n      }\n    }\n  }\n}\n</code-example>\n<a id=\"missing-translation\"></a>\n<h3 id=\"report-missing-translations\" translation-result=\"on\">報告遺漏的翻譯<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#report-missing-translations\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"report-missing-translations\">Report missing translations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#report-missing-translations\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果缺少某個翻譯，那麼編譯就會成功，但會產生一條警告，比如 <code>Missing translation for message \"foo\"</code>。你可以配置 Angular 編譯器所產生的警告級別：</p><p translation-origin=\"off\">When a translation is missing, the build succeeds but generates a warning such as\n<code>Missing translation for message \"foo\"</code>. You can configure the level of warning that is generated by the Angular compiler:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>error</code>：丟擲一個錯誤。如果你正在使用 AOT 編譯，那麼建構就會失敗。如果你正在使用 JIT 編譯，該應用將無法載入。</p><p translation-origin=\"off\"><code>error</code>: Throw an error. If you are using AOT compilation, the build will fail.\nIf you are using JIT compilation, the app will fail to load.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>warning</code>（預設值）：在控制檯或 shell 中顯示 <code>Missing translation</code> 警告。</p><p translation-origin=\"off\"><code>warning</code> (default): Show a <code>Missing translation</code> warning in the console or shell.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>ignore</code>：什麼都不做</p><p translation-origin=\"off\"><code>ignore</code>: Do nothing.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">在 Angular CLI 配置檔案（ <code>angular.json</code> ）中 <code>build</code> 下的 <code>options</code> 部分指定警告級別。下面的程式碼展示瞭如何把警告級別設定為 <code>error</code> ：</p><p translation-origin=\"off\">Specify the warning level in the <code>options</code> section for the <code>build</code> target of your Angular CLI configuration file (<code>angular.json</code>). The following example shows how to set the warning level to <code>error</code>:</p>\n\n<code-example language=\"json\" header=\"angular.json\">\n\"options\": {\n  ...\n  \"i18nMissingTranslation\": \"error\"\n}\n</code-example>\n<a id=\"deploy-locales\"></a>\n<h2 id=\"deploy-multiple-locales\" translation-result=\"on\">部署多個本地環境<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#deploy-multiple-locales\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"deploy-multiple-locales\">Deploy multiple locales<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#deploy-multiple-locales\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">如果 <code>myapp</code> 是那個包含應用分發檔案的目錄，那麼你通常可以在每個本地化目錄中為不同的本地環境提供不同的版本，比如 <code>myapp/fr</code>（法語版）和 <code>myapp.com/es</code>（西班牙語版）。</p><p translation-result=\"on\">帶有 <code>href</code> 屬性的 HTML <code>base</code> 標籤為相對連結指定了基址 URI 或 URL。如果你把 <code>angular.json</code> 中的 <code>\"localize\"</code> 選項設定為 <code>true</code> 或者設定了一個本地環境 ID 的陣列，那麼 CLI 就會透過把該本地環境 ID 新增到已配置的 <code>\"baseHref\"</code> 中來為每個應用版本修正 <code>base href</code>。你可以在工作區的配置檔案（<code>angular.json</code> ）中為每個本地環境指定 <code>\"baseHref\"</code>，比如下面的例子中，這個 <code>\"baseHref\"</code> 被設定為空字串：</p><p translation-origin=\"off\">If <code>myapp</code> is the directory containing your app's distributable files, you would typically make available different versions for different locales in locale directories such as <code>myapp/fr</code> for the French version and <code>myapp.com/es</code> for the Spanish version.</p>\n\n<p translation-origin=\"off\">The HTML <code>base</code> tag with the <code>href</code> attribute specifies the base URI, or URL, for relative links. If you set the <code>\"localize\"</code> option in <code>angular.json</code> to <code>true</code> or to an array of locale IDs, the CLI adjusts the base <code>href</code> for each version of the app by adding the locale to the configured <code>\"baseHref\"</code>. You can specify the <code>\"baseHref\"</code> for each locale in your workspace configuration file (<code>angular.json</code>), as shown in the following example, which sets <code>\"baseHref\"</code> to an empty string:</p>\n\n<code-example language=\"json\" header=\"angular.json\">\n...\n\"projects\": {\n  \"angular.io-example\": {\n    ...\n    \"i18n\": {\n      \"sourceLocale\": \"en-US\",\n      \"locales\": {\n        \"fr\": {\n          \"translation\": \"src/locale/messages.fr.xlf\",\n          \"baseHref\": \"\"\n        }\n      }\n    },\n    \"architect\": {\n    ...\n    }\n}\n</code-example>\n<p translation-result=\"on\">你也可以在編譯時使用 CLI 的 <code>--baseHref</code> 選項與 <a href=\"cli/build\" title=\"ng build 的 CLI 參考\"><code>ng build</code></a> 宣告 <code>base href</code>。</p><p translation-origin=\"off\">You can also use the CLI <code>--baseHref</code> option with <a href=\"cli/build\" title=\"CLI reference for ng build\"><code>ng build</code></a> to declare the base <code>href</code> at compile time.</p>\n\n<h3 id=\"configuring-servers\" translation-result=\"on\">配置伺服器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#configuring-servers\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"configuring-servers\">Configuring servers<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#configuring-servers\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">多語言的典型部署方式是為不同子目錄中的每種語言提供服務。使用 HTTP 標頭 <code>Accept-Language</code> 將使用者重新導向到瀏覽器中定義的首選語言。如果使用者尚未定義首選語言或首選語言不可用，伺服器將回退到預設語言。使用者也可以導航到其它子目錄來更改語言，這通常使用應用中的選單實現。</p><p translation-result=\"on\">要了解如何把應用部署到遠端伺服器的更多資訊，請參閱<a href=\"guide/deployment\" title=\"Deployment guide\">部署</a>。</p><p translation-origin=\"off\">Typical deployment of multiple languages serve each language from a different subdirectory.\nUsers are redirected to the preferred language defined in the browser using the\n<code>Accept-Language</code> HTTP header. If the user has not defined a preferred language,\nor if the preferred language is not available, then the server falls back to the default language.\nUsers can change the language by navigating to other subdirectories, which often occurs using a\nmenu implemented in the application.</p>\n\n<p translation-origin=\"off\">For more information on how to deploy apps to a remote server, see <a href=\"guide/deployment\" title=\"Deployment guide\">Deployment</a>.</p>\n\n<h4 id=\"nginx\">Nginx<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#nginx\"><i class=\"material-icons\">link</i></a></h4>\n<p translation-result=\"on\">下面是 Nginx 的配置範例。</p><p translation-origin=\"off\">The following is an example of an Nginx configuration.</p>\n\n<code-example>\n<a href=\"api/common/http\" class=\"code-anchor\">http</a> {\n\n    # Browser preferred language detection (does NOT require AcceptLanguageModule)\n    map $http_accept_language $accept_language {\n        ~*^de de;\n        ~*^fr fr;\n        ~*^en en;\n    }\n    # ...\n}\n\nserver {\n    listen 80;\n    server_name localhost;\n    root /www/data;\n\n    # Fallback to default language if no preference defined by <a href=\"api/animations/browser\" class=\"code-anchor\">browser</a>\n    if ($accept_language ~ \"^$\") {\n        set $accept_language \"fr\";\n    }\n\n    # Redirect \"/\" to Angular app in <a href=\"api/animations/browser\" class=\"code-anchor\">browser</a>'s preferred language\n    rewrite ^/$ /$accept_language permanent;\n\n    # Everything under the Angular app is always redirected to Angular in the correct language\n    location ~ ^/(fr|de|en) {\n        try_files $uri /$1/index.html?$args;\n    }\n    # ...\n}\n</code-example>\n<h4 id=\"apache\">Apache<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#apache\"><i class=\"material-icons\">link</i></a></h4>\n<p translation-result=\"on\">下面是 Apache 的配置範例。</p><p translation-origin=\"off\">The following is an example of an Apache configuration.</p>\n\n<code-example>\n&lt;VirtualHost *:80&gt;\n    ServerName localhost\n    DocumentRoot /www/data\n    &lt;Directory \"/www/data\"&gt;\n        RewriteEngine on\n        RewriteBase /\n        RewriteRule ^../index\\.html$ - [L]\n\n        RewriteCond %{REQUEST_FILENAME} !-f\n        RewriteCond %{REQUEST_FILENAME} !-d\n        RewriteRule (..) $1/index.html [L]\n\n        RewriteCond %{HTTP:Accept-Language} ^de [NC]\n        RewriteRule ^$ /de/ [R]\n\n        RewriteCond %{HTTP:Accept-Language} ^en [NC]\n        RewriteRule ^$ /en/ [R]\n\n        RewriteCond %{HTTP:Accept-Language} !^en [NC]\n        RewriteCond %{HTTP:Accept-Language} !^de [NC]\n        RewriteRule ^$ /fr/ [R]\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code-example>\n<a id=\"app-pre-translation\"></a>\n<h2 id=\"explore-the-translated-example-app\" translation-result=\"on\">瀏覽已翻譯的範例應用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#explore-the-translated-example-app\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"explore-the-translated-example-app\">Explore the translated example app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#explore-the-translated-example-app\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">下面顯示了該應用及其翻譯檔案的範例：</p><p translation-origin=\"off\">The following tabs show the example app and its translation files:</p>\n\n<code-tabs>\n  <code-pane header=\"src/app/app.component.html\" path=\"i18n/src/app/app.component.html\">\n&lt;h1 i18n=\"User welcome|An introduction header for this sample@@introductionHeader\"&gt;\n  Hello i18n!\n&lt;/h1&gt;\n\n&lt;ng-container i18n&gt;I don't output any element&lt;/ng-container&gt;\n\n&lt;br /&gt;\n\n&lt;img [src]=\"logo\" i18n-title title=\"Angular logo\" /&gt;\n&lt;br&gt;\n&lt;button (click)=\"inc(1)\"&gt;+&lt;/button&gt; &lt;button (click)=\"inc(-1)\"&gt;-&lt;/button&gt;\n&lt;span i18n&gt;Updated {minutes, plural, =0 {just now} =1 {one minute ago} other {{{minutes}} minutes ago}}&lt;/span&gt;\n({{minutes}})\n&lt;br&gt;&lt;br&gt;\n&lt;button (click)=\"male()\"&gt;&amp;#9794;&lt;/button&gt; &lt;button (click)=\"female()\"&gt;&amp;#9792;&lt;/button&gt; &lt;button (click)=\"other()\"&gt;&amp;#9895;&lt;/button&gt;\n&lt;span i18n&gt;The author is {gender, select, male {male} female {female} other {other}}&lt;/span&gt;\n&lt;br&gt;&lt;br&gt;\n&lt;span i18n&gt;Updated: {minutes, plural,\n  =0 {just now}\n  =1 {one minute ago}\n  other {{{minutes}} minutes ago by {gender, select, male {male} female {female} other {other}}}}\n&lt;/span&gt;\n\n\n</code-pane>\n  <code-pane header=\"src/app/app.component.ts\" path=\"i18n/src/app/app.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  minutes = 0;\n  gender = 'female';\n  fly = true;\n  logo = 'https://angular.io/assets/images/logos/angular/angular.png';\n  inc(i: number) {\n    this.minutes = Math.min(5, Math.max(0, this.minutes + i));\n  }\n  male() { this.gender = 'male'; }\n  female() { this.gender = 'female'; }\n  other() { this.gender = 'other'; }\n}\n\n\n\n</code-pane>\n  <code-pane header=\"src/app/app.module.ts\" path=\"i18n/src/app/app.module.ts\">\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> ],\n  declarations: [ AppComponent ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-pane>\n  <code-pane header=\"src/main.ts\" path=\"i18n/doc-files/main.1.ts\">\nimport { <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>();\n}\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule);\n\n\n</code-pane>\n  <code-pane header=\"src/locale/messages.fr.xlf\" path=\"i18n/doc-files/messages.fr.xlf.html\">\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\"&gt;\n  &lt;file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\"&gt;\n    &lt;body&gt;\n      &lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n        &lt;source&gt;Hello i18n!&lt;/source&gt;\n        &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n        &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n        &lt;source&gt;Hello i18n!&lt;/source&gt;\n        &lt;target&gt;Bonjour i18n !&lt;/target&gt;\n        &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n        &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"ba0cc104d3d69bf669f97b8d96a4c5d8d9559aa3\" datatype=\"html\"&gt;\n        &lt;source&gt;I don&amp;apos;t output any element&lt;/source&gt;\n        &lt;target&gt;Je n'affiche aucun élément&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"701174153757adf13e7c24a248c8a873ac9f5193\" datatype=\"html\"&gt;\n        &lt;source&gt;Angular logo&lt;/source&gt;\n        &lt;target&gt;Logo d'Angular&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"5a134dee893586d02bffc9611056b9cadf9abfad\" datatype=\"html\"&gt;\n        &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago} }&lt;/source&gt;\n        &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y a une minute} other {il y a &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes} }&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"f99f34ac9bd4606345071bd813858dec29f3b7d1\" datatype=\"html\"&gt;\n        &lt;source&gt;The author is &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/source&gt;\n        &lt;target&gt;L'auteur est &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"eff74b75ab7364b6fa888f1cbfae901aaaf02295\" datatype=\"html\"&gt;\n        &lt;source&gt;{VAR_SELECT, select, male {male} female {female} other {other} }&lt;/source&gt;\n        &lt;target&gt;{VAR_SELECT, select, male {un homme} female {une femme} other {autre} }&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"972cb0cf3e442f7b1c00d7dab168ac08d6bdf20c\" datatype=\"html\"&gt;\n        &lt;source&gt;Updated: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/source&gt;\n        &lt;target&gt;Mis à jour: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"7151c2e67748b726f0864fc443861d45df21d706\" datatype=\"html\"&gt;\n        &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago by {VAR_SELECT, select, male {male} female {female} other {other} }} }&lt;/source&gt;\n        &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y a une minute} other {il y a &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes par {VAR_SELECT, select, male {un homme} female {une femme} other {autre} }} }&lt;/target&gt;\n      &lt;/trans-unit&gt;\n    &lt;/body&gt;\n  &lt;/file&gt;\n&lt;/xliff&gt;\n\n\n\n</code-pane>\n</code-tabs>\n<h2 id=\"optional-practices\" translation-result=\"on\">可選實踐<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#optional-practices\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"optional-practices\">Optional practices<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#optional-practices\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">以下是特殊情況下可能會用到的一些可選實踐：</p><p translation-origin=\"off\">The following are optional practices that may be required in special cases:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">透過設定 <a href=\"https://angular.cn/api/core/LOCALE_ID\" title=\"LOCALE_ID 的 API 參考\">LOCALE_ID</a> 令牌來<a href=\"guide/i18n#set-source-manually\">手動設定源本地環境</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#set-source-manually\">Set the source locale manually</a> by setting the <a href=\"api/core/LOCALE_ID\" title=\"API reference for LOCALE_ID\">LOCALE_ID</a> token.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">為其他本地化資料<a href=\"guide/i18n#import-locale\">匯入本地化資料的全域變種</a> 。</p><p translation-origin=\"off\"><a href=\"guide/i18n#import-locale\">Import global variants of the locale data</a> for extra locale data.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果你想翻譯內容的匹配工作有更多的控制權，可以<a href=\"guide/i18n#custom-id\">使用自訂 ID 來管理</a>。</p><p translation-origin=\"off\"><a href=\"guide/i18n#custom-id\">Manage marked text with custom IDs</a> if you require more control over matching translations.</p>\n\n</li>\n</ul>\n<a id=\"set-source-manually\"></a>\n<h3 id=\"set-the-source-locale-manually\" translation-result=\"on\">手動設定源本地環境<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#set-the-source-locale-manually\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"set-the-source-locale-manually\">Set the source locale manually<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#set-the-source-locale-manually\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">Angular 已經包含了 <code>en-US</code> 本地化資料。在使用 <a href=\"cli/build\" title=\"ng build description\"><code>ng build</code></a> 的 <code>--localize</code> 選項時，Angular CLI 會自動包含本地化資料並設定 <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 的值。</p><p translation-result=\"on\">若要手動將應用的源本地環境設定為自動包含的值以外的本地環境，請執行以下步驟：</p><p translation-origin=\"off\">Angular already contains locale data for <code>en-US</code>.\nThe Angular CLI automatically includes the locale data and sets the <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> value when you use the <code>--localize</code> option with <a href=\"cli/build\" title=\"ng build description\"><code>ng build</code></a>.</p>\n\n<p translation-origin=\"off\">To manually set an app's source locale to one other than the automatic value, follow these steps:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\" title=\"Angular 儲存庫中的常用語言環節\">Angular 的程式碼儲存庫中</a>查詢此本地環境組合的 ID。</p><p translation-origin=\"off\">Look up the ID for the language-locale combination in <a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\" title=\"Common locales in the Angular repository\">the Angular repository</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">   設定 <a href=\"api/core/LOCALE_ID\" title=\"LOCALE_ID 的 API 參考\"><code>LOCALE_ID</code></a> 令牌。下面的例子中把 <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 的值設定為 <code>fr</code>（法語）：</p><p translation-origin=\"off\">Set the <a href=\"api/core/LOCALE_ID\" title=\"API reference for LOCALE_ID\"><code>LOCALE_ID</code></a> token.\nThe following example sets the value of <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> to <code>fr</code> (French):</p>\n\n</li>\n</ol>\n<code-example path=\"i18n/doc-files/app.module.ts\" header=\"src/app/app.module.ts\">\nimport { <a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a>, <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\n\nimport { AppComponent } from '../src/app/app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> ],\n  declarations: [ AppComponent ],\n  providers: [ { provide: <a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a>, useValue: 'fr' } ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-example>\n<a id=\"import-locale\"></a>\n<h3 id=\"import-global-variants-of-the-locale-data\" translation-result=\"on\">匯入本地化資料的全域變體<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#import-global-variants-of-the-locale-data\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"import-global-variants-of-the-locale-data\">Import global variants of the locale data<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#import-global-variants-of-the-locale-data\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果使用帶有 <code>--localize</code> 選項的 CLI 命令 <a href=\"cli/build\" title=\"ng build description\"><code>ng build</code></a> 配置本地環境，Angular 就會自動包含本地化資料。</p><p translation-result=\"on\"><a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\" title=\"Angular 儲存庫中的常用語言環節\">Angular 的程式碼儲存庫</a> 中的一些檔案（ <code>@angular/common/locales</code> ）包含了你需要的大部分本地化資料，但是一些進階的格式化選項需要提供額外的本地化資料。本地化資料的全域變體可以在 <a href=\"https://github.com/angular/angular/tree/master/packages/common/locales/global\" title=\"Angular 儲存庫中的全域本地環境變體\"><code>@angular/common/locales/global</code></a> 下找到。下面的例子匯入了法語（ <code>fr</code> ）的全域變體：</p><p translation-origin=\"off\">Angular will automatically include locale data if you configure the locale using the <code>--localize</code> option with <a href=\"cli/build\" title=\"ng build description\"><code>ng build</code></a> CLI command.</p>\n\n<p translation-origin=\"off\">The <a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\" title=\"Common locales in the Angular repository\">Angular repository</a> files (<code>@angular/common/locales</code>) contain most of the locale data that you need, but some advanced formatting options require additional locale data.\nGlobal variants of the locale data are available in <a href=\"https://github.com/angular/angular/tree/master/packages/common/locales/global\" title=\"Global locale variants in the Angular repository\"><code>@angular/common/locales/global</code></a>.\nThe following example imports the global variants for French (<code>fr</code>):</p>\n\n<code-example language=\"javascript\" header=\"app.module.ts\">\nimport '@angular/common/locales/<a href=\"api/core/global\" class=\"code-anchor\">global</a>/fr';\n</code-example>\n<a id=\"custom-id\"></a>\n<h3 id=\"manage-marked-text-with-custom-ids\" translation-result=\"on\">用自訂 ID 管理標記過的文字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#manage-marked-text-with-custom-ids\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"manage-marked-text-with-custom-ids\">Manage marked text with custom IDs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#manage-marked-text-with-custom-ids\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">Angular 的提取器會為範本中的每個 <code>i18n</code> 屬性產生一個帶翻譯單元條目的檔案。如前所述（在<a href=\"guide/i18n#transaction-unit-ids\">控制文字的提取和合並方式</a>中），Angular 會為每個翻譯單元分配一個唯一的 ID，如下所示：</p><p translation-origin=\"off\">The Angular extractor generates a file with a translation unit entry for each <code>i18n</code>\nattribute in a template.\nAs described previously (in <a href=\"guide/i18n#transaction-unit-ids\">How meanings control text extraction and merging</a>), Angular assigns each translation unit a unique ID such as the following:</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" header=\"messages.fr.xlf.html\" region=\"generated-id\">\n&lt;trans-unit id=\"ba0cc104d3d69bf669f97b8d96a4c5d8d9559aa3\" datatype=\"html\"&gt;\n\n</code-example>\n<p translation-result=\"on\">當你修改要翻譯的文字時，提取器會為那個翻譯單元產生一個新的 ID。在大多數情況下，對文字的更改也確實需要更改翻譯。因此，使用新 ID 會使文字更改與翻譯保持同步。</p><p translation-result=\"on\">但是，某些翻譯系統需要 ID 滿足特定的格式或語法。為滿足這一需求，你可以用<em>自訂</em> ID 來標記文字。雖然大多數開發人員不需要使用自訂 ID，但有些開發人員可能希望使用具有獨特語法的 ID 傳遞額外的元資料（比如應用中的函式庫、元件或應用範圍）。</p><p translation-result=\"on\">使用字首 <code>@@</code> 可以在 <code>i18n</code> 屬性中指定自訂 ID。下面的例子定義了自訂 ID <code>introductionHeader</code> ：</p><p translation-origin=\"off\">When you change the translatable text, the extractor generates a new ID for that translation unit.\nIn most cases a text change would also require a change to the translation.\nTherefore, using a new ID keeps the text change in sync with translations.</p>\n\n<p translation-origin=\"off\">However, some translation systems require a specific form or syntax for the ID.\nTo address this requirement, you can mark text with <em>custom</em> IDs.\nWhile most developers don't need to use custom IDs, some may want to use IDs that have a unique syntax to convey additional metadata (such as the library, component, or area of the app in which the text appears).</p>\n\n<p translation-origin=\"off\">Specify a custom ID in the <code>i18n</code> attribute by using the prefix <code>@@</code>.\nThe following example defines the custom ID <code>introductionHeader</code>:</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-solo-id\" header=\"app/app.component.html\">\n&lt;h1 i18n=\"@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p translation-result=\"on\">當你指定一個自訂 ID 時，提取器會產生一個帶有自訂 ID 的翻譯單元：</p><p translation-origin=\"off\">When you specify a custom ID, the extractor generates a translation unit with the custom ID:</p>\n\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" header=\"messages.fr.xlf.html\" region=\"custom-id\">\n&lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n\n</code-example>\n<p translation-result=\"on\">如果改變了文字，提取器就<em>不會</em>修改 ID。因此，你無需採取額外步驟來更新翻譯。使用自訂 ID 的一個缺點是，如果你修改了文字，你的翻譯可能會與新修改過的源文字不同步。</p><p translation-origin=\"off\">If you change the text, the extractor does <em>not</em> change the ID.\nAs a result, you don't have to take the extra step of updating the translation.\nThe drawback of using custom IDs is that if you change the text, your translation may be out-of-sync with the newly changed source text.</p>\n\n<h4 id=\"use-a-custom-id-with-a-description\" translation-result=\"on\">使用帶描述的自訂 ID<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#use-a-custom-id-with-a-description\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"use-a-custom-id-with-a-description\">Use a custom ID with a description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#use-a-custom-id-with-a-description\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">使用自訂 ID 結合描述和含義可以進一步幫助翻譯。下面的例子中就包含一個描述，其後緊跟著自訂 <code>id</code> ：</p><p translation-origin=\"off\">Use a custom ID in combination with a description and a meaning to further help the translator.\nThe following example includes a description, followed by the custom <code>id</code>:</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-id\" header=\"app/app.component.html\">\n&lt;h1 i18n=\"An introduction header for this sample@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p translation-result=\"on\">下面的例子添加了一個含義：</p><p translation-origin=\"off\">The following example adds a meaning:</p>\n\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-meaning-and-id\" header=\"app/app.component.html\">\n&lt;h1 i18n=\"site header|An introduction header for this sample@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<h4 id=\"define-unique-custom-ids\" translation-result=\"on\">定義唯一的自訂 ID<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#define-unique-custom-ids\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"define-unique-custom-ids\">Define unique custom IDs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n#define-unique-custom-ids\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">一定要確保定義的自訂 ID 是唯一的。如果對兩個不同的文字元素使用了相同的 ID，那麼提取工具只會提取出第一個，而 Angular 會使用它的翻譯代替兩個原始文字元素。</p><p translation-result=\"on\">比如，在下面的程式碼中，為兩個不同的文字元素定義了相同的自訂 ID <code>myId</code>：</p><p translation-origin=\"off\">Be sure to define custom IDs that are unique.\nIf you use the same ID for two different text elements, the extraction tool extracts only the first one, and Angular uses its translation in place of both original text elements.</p>\n\n<p translation-origin=\"off\">For example, in the following code the same custom ID <code>myId</code> is defined for two different text elements:</p>\n\n<code-example language=\"html\">\n  &lt;h3 i18n=\"@@myId\"&gt;Hello&lt;/h3&gt;\n  &lt;!-- ... --&gt;\n  &lt;p i18n=\"@@myId\"&gt;Good bye&lt;/p&gt;\n</code-example>\n<p translation-result=\"on\">下面是它翻譯成的法語：</p><p translation-origin=\"off\">The following shows the translation to French:</p>\n\n<code-example language=\"xml\">\n  &lt;trans-unit id=\"myId\" datatype=\"html\"&gt;\n    &lt;source&gt;Hello&lt;/source&gt;\n    &lt;target state=\"new\"&gt;Bonjour&lt;/target&gt;\n  &lt;/trans-unit&gt;\n</code-example>\n<p translation-result=\"on\">這兩個元素現在都使用了相同的翻譯（ <code>Bonjour</code> ），這是因為它們是使用相同的自訂 ID 定義的：</p><p translation-origin=\"off\">Both elements now use the same translation (<code>Bonjour</code>) because they were defined with the same custom ID:</p>\n\n<code-example language=\"html\">\n  &lt;h3&gt;Bonjour&lt;/h3&gt;\n  &lt;!-- ... --&gt;\n  &lt;p&gt;Bonjour&lt;/p&gt;\n</code-example>\n\n  <div class=\"reviewed\">最後複查時間： 2020/4/10</div>\n</div>\n\n\n<!-- links to this doc:\n - api/common\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/FormStyle\n - api/common/FormatWidth\n - api/common/NumberFormatStyle\n - api/common/NumberSymbol\n - api/common/Plural\n - api/common/formatCurrency\n - api/common/formatNumber\n - api/common/formatPercent\n - api/common/getCurrencySymbol\n - api/common/getLocaleCurrencyName\n - api/common/getLocaleCurrencySymbol\n - api/common/getLocaleDateFormat\n - api/common/getLocaleDateTimeFormat\n - api/common/getLocaleDayNames\n - api/common/getLocaleDayPeriods\n - api/common/getLocaleDirection\n - api/common/getLocaleEraNames\n - api/common/getLocaleExtraDayPeriodRules\n - api/common/getLocaleExtraDayPeriods\n - api/common/getLocaleFirstDayOfWeek\n - api/common/getLocaleId\n - api/common/getLocaleMonthNames\n - api/common/getLocaleNumberFormat\n - api/common/getLocaleNumberSymbol\n - api/common/getLocaleTimeFormat\n - api/common/getLocaleWeekEndRange\n - api/common/getNumberOfCurrencyDigits\n - api/common/registerLocaleData\n - api/core/DEFAULT_CURRENCY_CODE\n - api/core/LOCALE_ID\n - api/core/MissingTranslationStrategy\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - api/localize/init/$localize\n - guide/angular-compiler-options\n - guide/architecture-next-steps\n - guide/ivy\n - guide/workspace-config\n-->\n<!-- links from this doc:\n - /api/common/DecimalPipe\n - /cli/build\n - api/animations/browser\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/PercentPipe\n - api/common/http\n - api/core/Component\n - api/core/LOCALE_ID\n - api/core/NgModule\n - api/core/enableProdMode\n - api/core/global\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - cli\n - cli/build\n - guide/build\n - guide/deployment\n - guide/glossary#ahead-of-time-aot-compilation\n - guide/glossary#command-line-interface-cli\n - guide/glossary#component\n - guide/glossary#interpolation\n - guide/glossary#pipe\n - guide/glossary#template\n - guide/i18n#Template-translations\n - guide/i18n#add-helpful-descriptions-and-meanings\n - guide/i18n#add-the-localize-package\n - guide/i18n#apache\n - guide/i18n#app-pre-translation\n - guide/i18n#apply-specific-build-options-for-just-one-locale\n - guide/i18n#build-from-the-command-line\n - guide/i18n#change-the-source-language-file-format\n - guide/i18n#change-the-source-language-file-location\n - guide/i18n#change-the-source-language-file-name\n - guide/i18n#configuring-servers\n - guide/i18n#create-a-translation-file-for-each-language\n - guide/i18n#create-source\n - guide/i18n#custom-id\n - guide/i18n#define-locales-in-the-build-configuration\n - guide/i18n#define-unique-custom-ids\n - guide/i18n#deploy-locales\n - guide/i18n#deploy-multiple-locales\n - guide/i18n#explore-the-translated-example-app\n - guide/i18n#extract-the-source-language-file\n - guide/i18n#format-data-based-on-locale\n - guide/i18n#generate-app-versions-for-each-locale\n - guide/i18n#help-translator\n - guide/i18n#i18n-attribute\n - guide/i18n#i18n-pipes\n - guide/i18n#import-global-variants-of-the-locale-data\n - guide/i18n#import-locale\n - guide/i18n#localization-folder\n - guide/i18n#localize-build-command\n - guide/i18n#localize-build-one-locale\n - guide/i18n#localize-config\n - guide/i18n#localize-generate\n - guide/i18n#localizing-your-app\n - guide/i18n#manage-marked-text-with-custom-ids\n - guide/i18n#mark-alternates-and-nested-expressions\n - guide/i18n#mark-element-attributes-for-translations\n - guide/i18n#mark-plurals\n - guide/i18n#mark-plurals-and-alternates-for-translation\n - guide/i18n#mark-text-for-translations\n - guide/i18n#merge\n - guide/i18n#merge-translations-into-the-app\n - guide/i18n#ng-xi18n\n - guide/i18n#nginx\n - guide/i18n#no-element\n - guide/i18n#optional-practices\n - guide/i18n#plurals-alternates\n - guide/i18n#prepare-templates-for-translations\n - guide/i18n#prerequisites\n - guide/i18n#refer-to-locales-by-id\n - guide/i18n#report-missing-translations\n - guide/i18n#set-source-manually\n - guide/i18n#set-the-source-locale-manually\n - guide/i18n#setting-up-cli\n - guide/i18n#setting-up-locale\n - guide/i18n#steps-to-localize-your-app\n - guide/i18n#transaction-unit-ids\n - guide/i18n#translate-alternate-expressions\n - guide/i18n#translate-attributes\n - guide/i18n#translate-each-translation-file\n - guide/i18n#translate-nested-expressions\n - guide/i18n#translate-plural-select\n - guide/i18n#translate-plurals\n - guide/i18n#translate-plurals-and-alternate-expressions\n - guide/i18n#translate-text-nodes\n - guide/i18n#translate-text-not-for-display\n - guide/i18n#use-a-custom-id-with-a-description\n - guide/i18n#work-with-translation-files\n - guide/ivy#opting-out-of-ivy-in-version-9\n - guide/npm-packages\n - guide/workspace-config\n - http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers\n - http://cldr.unicode.org/development/development-process/design-proposals/xmb\n - http://cldr.unicode.org/index/cldr-spec/plural-rules\n - http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Choosing-Plural-Category-Names\n - http://userguide.icu-project.org/formatparse/messages\n - http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n - http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\n - https://angular.cn/api/core/LOCALE_ID\n - https://angular.io/guide/npm-packages\n - https://en.wikipedia.org/wiki/XLIFF\n - https://github.com/angular/angular-cn/edit/aio/aio/content/guide/i18n.md?message=docs%3A%20請簡述你的修改...\n - https://github.com/angular/angular/blob/ecffc3557fe1bff9718c01277498e877ca44588d/packages/core/src/i18n/locale_en.ts#L15-L18\n - https://github.com/angular/angular/tree/master/packages/common/locales\n - https://github.com/angular/angular/tree/master/packages/common/locales/global\n - https://marketfinder.thinkwithgoogle.com/intl/en_us/guide/how-to-approach-i18n/#overview\n - https://tools.ietf.org/html/bcp47\n - https://v8.angular.io/guide/i18n#merge-with-the-jit-compiler\n - https://www.loc.gov/standards/iso639-2/\n - https://www.w3.org/XML/\n-->"}