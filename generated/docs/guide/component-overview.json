{"id":"guide/component-overview","title":"Angular components overview","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/component-overview.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"angular-components-overview\" translation-result=\"on\">Angular 元件概述<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#angular-components-overview\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Angular components overview<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#angular-components-overview\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">元件是 Angular 應用的主要構成要素。每個元件包括如下部分：</p><p translation-origin=\"off\">Components are the main building block for Angular applications.\nEach component consists of:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">一個 HTML 範本，用於宣告頁面要渲染的內容</p><p translation-origin=\"off\">An HTML template that declares what renders on the page</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一個用於定義行為的 TypeScript 類</p><p translation-origin=\"off\">A TypeScript class that defines behavior</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一個 CSS 選擇器，用於定義元件在範本中的使用方式</p><p translation-origin=\"off\">A CSS selector that defines how the component is used in a template</p>\n\n</li>\n<li>\n<p translation-result=\"on\">（可選）要應用在範本上的 CSS 樣式</p><p translation-origin=\"off\">Optionally, CSS styles applied to the template</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">本主題描述如何建立和配置 Angular 元件。</p><p translation-origin=\"off\">This topic describes how to create and configure an Angular component.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">要檢視或下載本主題中使用的範例程式碼，參閱 <live-example></live-example>。</p><p translation-origin=\"off\">To view or download the example code used in this topic, see the <live-example></live-example>.</p>\n\n</div>\n<h2 id=\"prerequisites\" translation-result=\"on\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要建立一個元件，請先驗證你是否滿足以下前提條件：</p><p translation-origin=\"off\">To create a component, verify that you have met the following prerequisites:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\"><a href=\"guide/setup-local#install-the-angular-cli\">安裝 Angular CLI</a>。</p><p translation-origin=\"off\"><a href=\"guide/setup-local#install-the-angular-cli\">Install the Angular CLI.</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/setup-local#create-a-workspace-and-initial-application\">建立一個帶有初始專案的 Angular 工作區</a>。如果還沒有專案，你可以用 <code>ng new &lt;project-name&gt;</code> 建立一個，其中 <code>&lt;project-name&gt;</code> 是你的 Angular 應用的名字。</p><p translation-origin=\"off\"><a href=\"guide/setup-local#create-a-workspace-and-initial-application\">Create an Angular workspace</a> with initial application.\nIf you don't have a project, create one using <code>ng new &lt;project-name&gt;</code>, where <code>&lt;project-name&gt;</code> is the name of your Angular application.</p>\n\n</li>\n</ol>\n<h2 id=\"creating-a-component\" translation-result=\"on\">建立一個元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Creating a component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular CLI 是用來建立元件的最簡途徑。你也可以手動建立一個元件。</p><p translation-origin=\"off\">The best way to create a component is with the Angular CLI.\nYou can also create a component manually.</p>\n\n<h3 id=\"creating-a-component-using-the-angular-cli\" translation-result=\"on\">使用 Angular CLI 建立元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-using-the-angular-cli\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Creating a component using the Angular CLI<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-using-the-angular-cli\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">使用 Angular CLI 建立一個元件：</p><p translation-origin=\"off\">To create a component using the Angular CLI:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在終端視窗中，導航到要放置你應用的目錄。</p><p translation-origin=\"off\">From a terminal window, navigate to the directory containing your application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">執行 <code>ng generate component &lt;component-name&gt;</code> 命令，其中 <code>&lt;component-name&gt;</code> 是新元件的名字。</p><p translation-origin=\"off\">Run the <code>ng generate component &lt;component-name&gt;</code> command, where <code>&lt;component-name&gt;</code> is the name of your new component.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">預設情況下，該命令會建立以下內容：</p><p translation-origin=\"off\">By default, this command creates the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">一個以該元件命名的資料夾</p><p translation-origin=\"off\">A directory named after the component</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一個元件檔案 <code>&lt;component-name&gt;.component.ts</code></p><p translation-origin=\"off\">A component file, <code>&lt;component-name&gt;.component.ts</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">一個範本檔案 <code>&lt;component-name&gt;.component.html</code></p><p translation-origin=\"off\">A template file, <code>&lt;component-name&gt;.component.html</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">一個 CSS 檔案，<code>&lt;component-name&gt;.component.css</code></p><p translation-origin=\"off\">A CSS file, <code>&lt;component-name&gt;.component.css</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">測試檔案 <code>&lt;component-name&gt;.component.spec.ts</code></p><p translation-origin=\"off\">A testing specification file, <code>&lt;component-name&gt;.component.spec.ts</code></p>\n\n</li>\n</ul>\n<p translation-result=\"on\">其中 <code>&lt;component-name&gt;</code> 是元件的名稱。</p><p translation-origin=\"off\">Where <code>&lt;component-name&gt;</code> is the name of your component.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">你可以更改 <code>ng generate component</code> 建立新元件的方式。欲知詳情，參閱 Angular CLI 文件中的 <a href=\"cli/generate#component-command\">ng generate component</a>。</p><p translation-origin=\"off\">You can change how <code>ng generate component</code> creates new components.\nFor more information, see <a href=\"cli/generate#component-command\">ng generate component</a> in the Angular CLI documentation.</p>\n\n</div>\n<h3 id=\"creating-a-component-manually\" translation-result=\"on\">手動建立元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Creating a component manually<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">雖然 Angular CLI 是建立 Angular 元件的最佳途徑，但你也可以手動建立一個元件。本節將介紹如何在現有的 Angular 專案中建立核心元件檔案。</p><p translation-origin=\"off\">Although the Angular CLI is the best way to create an Angular component, you can also create a component manually.\nThis section describes how to create the core component file within an existing Angular project.</p>\n\n<p translation-result=\"on\">要手動建立一個新元件：</p><p translation-origin=\"off\">To create a new component manually:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">導航到你的 Angular 專案目錄。</p><p translation-origin=\"off\">Navigate to your Angular project directory.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">建立一個新檔案 <code>&lt;component-name&gt;.component.ts</code>。</p><p translation-origin=\"off\">Create a new file, <code>&lt;component-name&gt;.component.ts</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在檔案的頂部，新增下面的 import 陳述式。</p><p translation-origin=\"off\">At the top of the file, add the following import statement.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"import\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>import</code> 陳述式之後，新增一個 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器。</p><p translation-origin=\"off\">After the <code>import</code> statement, add a <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator-skeleton\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n})\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">為元件選擇一個 CSS 選擇器。</p><p translation-origin=\"off\">Choose a CSS selector for the component.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<p translation-result=\"on\">關於選擇選擇器的更多資訊，參閱<a href=\"guide/component-overview#specifying-a-components-css-selector\">指定元件的選擇器</a>。</p><p translation-origin=\"off\">For more information on choosing a selector, see <a href=\"guide/component-overview#specifying-a-components-css-selector\">Specifying a component's selector</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">定義元件用以顯示資訊的 HTML 範本。在大多數情況下，這個範本是一個單獨的 HTML 檔案。</p><p translation-origin=\"off\">Define the HTML template that the component uses to display information.\nIn most cases, this template is a separate HTML file.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p translation-result=\"on\">關於定義元件範本的更多資訊，參閱<a href=\"guide/component-overview#defining-a-components-template\">定義元件的範本</a>。</p><p translation-origin=\"off\">For more information on defining a component's template, see <a href=\"guide/component-overview#defining-a-components-template\">Defining a component's template</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">為元件的範本選擇樣式。在大多數情況下，你可以在單獨的檔案中定義元件範本的樣式。</p><p translation-origin=\"off\">Select the styles for the component's template.\nIn most cases, you define the styles for your component's template in a separate file.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">新增一個包含該元件程式碼 <code>class</code> 陳述式。</p><p translation-origin=\"off\">Add a <code>class</code> statement that includes the code for the component.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"class\">\nexport class ComponentOverviewComponent {\n\n}\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"specifying-a-components-css-selector\" translation-result=\"on\">指定元件的 CSS 選擇器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#specifying-a-components-css-selector\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Specifying a component's CSS selector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#specifying-a-components-css-selector\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">每個元件都需要一個 CSS <em>選擇器</em>。選擇器會告訴 Angular：當在範本 HTML 中找到相應的標籤時，就把該元件例項化在那裡。比如，考慮一個元件 <code>hello-world.component.ts</code>，它的選擇器定義為 <code>app-hello-world</code>。當 <code>&lt;app-hello-world&gt;</code> 出現在範本中時，這個選擇器就會讓 Angular 例項化該元件。</p><p translation-origin=\"off\">Every component requires a CSS <em>selector</em>. A selector instructs Angular to instantiate this component wherever it finds the corresponding tag in template HTML.\nFor example, consider a component <code>hello-world.component.ts</code> that defines its selector as <code>app-hello-world</code>.\nThis selector instructs Angular to instantiate this component any time the tag <code>&lt;app-hello-world&gt;</code> appears in a template.</p>\n\n<p translation-result=\"on\">在 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中新增一個 <code>selector</code> 陳述式來指定元件的選擇器。</p><p translation-origin=\"off\">Specify a component's selector by adding a <code>selector</code> statement to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<h2 id=\"defining-a-components-template\" translation-result=\"on\">定義一個元件的範本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#defining-a-components-template\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Defining a component's template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#defining-a-components-template\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">範本是一段 HTML，它告訴 Angular 如何在應用中渲染元件。可以透過以下兩種方式之一為元件定義範本：參考外部檔案，或直接寫在元件內部。</p><p translation-origin=\"off\">A template is a block of HTML that tells Angular how to render the component in your application.\nDefine a template for your component in one of two ways: by referencing an external file, or directly within the component.</p>\n\n<p translation-result=\"on\">要把範本定義為外部檔案，就要把 <code>templateUrl</code> 新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中。</p><p translation-origin=\"off\">To define a template as an external file, add a <code>templateUrl</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p translation-result=\"on\">要在元件中定義範本，就要把一個 <code>template</code> 屬性新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 中，該屬性的內容是要使用的 HTML。</p><p translation-origin=\"off\">To define a template within the component, add a <code>template</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator that contains the HTML you want to use.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.1.ts\" region=\"template\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n})\n\n</code-example>\n<p translation-result=\"on\">如果你想讓範本跨越多行，可以使用反引號（<code>`</code>）。比如：</p><p translation-origin=\"off\">If you want your template to span multiple lines, use backticks (<code>`</code>).\nFor example:</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.2.ts\" region=\"templatebacktick\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: `\n    &lt;h1&gt;Hello World!&lt;/h1&gt;\n    &lt;p&gt;This template definition spans <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> lines.&lt;/p&gt;\n  `\n})\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">Angular 元件需要一個用 <code>template</code> 或 <code>templateUrl</code> 定義的範本。但你不能在元件中同時擁有這兩個陳述式。</p><p translation-origin=\"off\">An Angular component requires a template defined using <code>template</code> or <code>templateUrl</code>.\nYou cannot have both statements in a component.</p>\n\n</div>\n<h2 id=\"declaring-a-components-styles\" translation-result=\"on\">宣告元件的樣式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#declaring-a-components-styles\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Declaring a component's styles<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#declaring-a-components-styles\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">有兩種方式可以為元件的範本宣告樣式：參考一個外部檔案，或直接寫在元件內部。</p><p translation-origin=\"off\">Declare component styles used for its template in one of two ways:\nBy referencing an external file, or directly within the component.</p>\n\n<p translation-result=\"on\">要在單獨的檔案中宣告元件的樣式，就要把 <code>styleUrls</code> 屬性新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中。</p><p translation-origin=\"off\">To declare the styles for a component in a separate file, add a <code>styleUrls</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n<p translation-result=\"on\">要想在元件內部宣告樣式，就要把 <code>styles</code> 屬性新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>，該屬性的內容是你要用的樣式。</p><p translation-origin=\"off\">To declare the styles within the component, add a <code>styles</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator that contains the styles you want to use.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.3.ts\" region=\"styles\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n  styles: ['h1 { font-weight: normal; }']\n})\n\n</code-example>\n<p translation-result=\"on\"><code>styles</code> 屬性接受一個包含 CSS 規則的字串陣列。</p><p translation-origin=\"off\">The <code>styles</code> property takes an array of strings that contain the CSS rule declarations.</p>\n\n<h2 id=\"next-steps\" translation-result=\"on\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#next-steps\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Next steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\">關於元件的體系結構概述，參閱<a href=\"guide/architecture-components\">元件和範本簡介</a></p><p translation-origin=\"off\">For an architectural overview of components, see <a href=\"guide/architecture-components\">Introduction to components and templates</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">關於建立元件時可以使用的其他選項，參閱“API 參考手冊”中的<a href=\"api/core/Component\">“元件”</a></p><p translation-origin=\"off\">For additional options to use when creating a component, see <a href=\"api/core/Component\">Component</a> in the API Reference</p>\n\n</li>\n<li>\n<p translation-result=\"on\">要了解關於為元件指定樣式的更多資訊，參閱<a href=\"guide/component-styles\">元件樣式</a></p><p translation-origin=\"off\">For more information on styling components, see <a href=\"guide/component-styles\">Component styles</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\">關於範本的詳細資訊，參閱<a href=\"guide/template-syntax\">範本語法</a></p><p translation-origin=\"off\">For more information on templates, see <a href=\"guide/template-syntax\">Template syntax</a></p>\n\n</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - errors/NG0300\n - guide/built-in-directives\n - guide/content-projection\n - guide/understanding-angular-overview\n - guide/what-is-angular\n - start/start-deployment\n - tutorial/first-app/first-app-lesson-02\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/forms/SelectMultipleControlValueAccessor\n - cli/generate#component-command\n - guide/architecture-components\n - guide/component-overview#angular-components-overview\n - guide/component-overview#angular-元件概述\n - guide/component-overview#creating-a-component\n - guide/component-overview#creating-a-component-manually\n - guide/component-overview#creating-a-component-using-the-angular-cli\n - guide/component-overview#declaring-a-components-styles\n - guide/component-overview#defining-a-components-template\n - guide/component-overview#next-steps\n - guide/component-overview#prerequisites\n - guide/component-overview#specifying-a-components-css-selector\n - guide/component-overview#下一步\n - guide/component-overview#使用-angular-cli-建立元件\n - guide/component-overview#建立一個元件\n - guide/component-overview#前提條件\n - guide/component-overview#宣告元件的樣式\n - guide/component-overview#定義一個元件的範本\n - guide/component-overview#手動建立元件\n - guide/component-overview#指定元件的-css-選擇器\n - guide/component-styles\n - guide/setup-local#create-a-workspace-and-initial-application\n - guide/setup-local#install-the-angular-cli\n - guide/template-syntax\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/component-overview.md?message=docs%3A%20請簡述你的修改...\n-->"}