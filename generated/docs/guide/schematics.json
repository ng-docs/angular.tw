{"id":"guide/schematics","title":"Generating code using schematics","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/schematics.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"generating-code-using-schematics\" translation-result=\"on\">原理圖（Schematic）<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#generating-code-using-schematics\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Generating code using schematics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#generating-code-using-schematics\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">原理圖是一個基於範本的支援複雜邏輯的程式碼產生器器。它是一組透過產生程式碼或修改程式碼來轉換軟體專案的指令。原理圖會打包成<a href=\"guide/glossary#collection\">集合（collection）</a>並用 npm 安裝。</p><p translation-origin=\"off\">A schematic is a template-based code generator that supports complex logic.\nIt is a set of instructions for transforming a software project by generating or modifying code.\nSchematics are packaged into <a href=\"guide/glossary#collection\">collections</a> and installed with npm.</p>\n\n<p translation-result=\"on\">原理圖的集合可以作為一個強大的工具，以建立、修改和維護任何軟體專案，特別是當要自訂 Angular 專案以滿足你自己組織的特定需求時。比如，你可以藉助原理圖來用預定義的範本或佈局產生常用的 UI 模式或特定的元件。也可以用原理圖來強制執行架構規則和約定，讓你的專案保持一致性和互操作性。</p><p translation-origin=\"off\">The schematic collection can be a powerful tool for creating, modifying, and maintaining any software project, but is particularly useful for customizing Angular projects to suit the particular needs of your own organization.\nYou might use schematics, for example, to generate commonly-used UI patterns or specific components, using predefined templates or layouts.\nUse schematics to enforce architectural rules and conventions, making your projects consistent and interoperative.</p>\n\n<h2 id=\"schematics-for-the-angular-cli\" translation-result=\"on\">Angular CLI 中的原理圖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#schematics-for-the-angular-cli\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Schematics for the Angular CLI<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#schematics-for-the-angular-cli\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">原理圖是 Angular 生態系統的一部分。<a href=\"guide/glossary#cli\">Angular CLI</a> 使用原理圖對 Web 應用專案進行轉換。你可以修改這些原理圖，並定義新的原理圖，比如更新程式碼以修復依賴中的重大變更，或者把新的配置項或框架新增到現有的專案中。</p><p translation-origin=\"off\">Schematics are part of the Angular ecosystem.\nThe <a href=\"guide/glossary#cli\">Angular CLI</a>  uses schematics to apply transforms to a web-app project.\nYou can modify these schematics, and define new ones to do things like update your code to fix breaking changes in a dependency, for example, or to add a new configuration option or framework to an existing project.</p>\n\n<p translation-result=\"on\"><code>@schematics/angular</code> 集合中的原理圖是 <code>ng generate</code> 和 <code>ng add</code> 命令的預設原理圖。此包裡包含一些有名字的原理圖，可用於配置 <code>ng generate</code> 子命令的選項，比如 <code>ng generate component</code> 和 <code>ng generate service</code>。<code>ng generate</code> 的子命令是相應原理圖的簡寫。可以用長格式來指定並產生特定的原理圖或原理圖集合：</p><p translation-origin=\"off\">Schematics that are included in the <code>@schematics/angular</code> collection are run by default by the commands <code>ng generate</code> and <code>ng add</code>.\nThe package contains named schematics that configure the options that are available to the CLI for <code>ng generate</code> sub-commands, such as <code>ng generate component</code> and <code>ng generate service</code>.\nThe sub-commands for <code>ng generate</code> are shorthand for the corresponding schematic.\nTo specify and generate a particular schematic, or a collection of schematics, using the long form:</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng generate my-schematic-collection:my-schematic-name\n\n</code-example>\n<p translation-result=\"on\">或者</p><p translation-origin=\"off\">or</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng generate my-schematic-name --collection collection-name\n\n</code-example>\n<h3 id=\"configuring-cli-schematics\" translation-result=\"on\">配置 CLI 的原理圖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#configuring-cli-schematics\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Configuring CLI schematics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#configuring-cli-schematics\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">與原理圖相關聯的 JSON 模式會告訴 Angular CLI 命令和子命令都有哪些選項以及預設值。這些預設值可以透過在命令列中為該選項提供不同的值來進行覆蓋。要了解如何更改程式碼產生器選項的預設值，請參閱“ <a href=\"guide/workspace-config\">工作區配置</a> ”。</p><p translation-origin=\"off\">A JSON schema associated with a schematic tells the Angular CLI what options are available to commands and sub-commands, and determines the defaults.\nThese defaults can be overridden by providing a different value for an option on the command line.\nSee <a href=\"guide/workspace-config\">Workspace Configuration</a> for information about how to change the generation option defaults for your workspace.</p>\n\n<p translation-result=\"on\">CLI 中那些用來產生專案及其部件的預設原理圖，其 JSON 模式收集在 <a href=\"https://github.com/angular/angular-cli/tree/main/packages/schematics/angular\"><code>@schematics/angular</code></a> 套件中。該模式描述了 CLI 中每個可用的 <code>ng generate</code> 子命令選項，如 <code>--help</code> 輸出中所示。</p><p translation-origin=\"off\">The JSON schemas for the default schematics used by the CLI to generate projects and parts of projects are collected in the package <a href=\"https://github.com/angular/angular-cli/tree/main/packages/schematics/angular\"><code>@schematics/angular</code></a>.\nThe schema describes the options available to the CLI for each of the <code>ng generate</code> sub-commands, as shown in the <code>--help</code> output.</p>\n\n<h2 id=\"developing-schematics-for-libraries\" translation-result=\"on\">編寫庫的原理圖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#developing-schematics-for-libraries\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Developing schematics for libraries<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#developing-schematics-for-libraries\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">作為一名庫開發人員，你可以建立自己的自訂原理圖集合，以便把你的函式庫與 Angular CLI 整合在一起。</p><p translation-origin=\"off\">As a library developer, you can create your own collections of custom schematics to integrate your library with the Angular CLI.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><em>新增（Add）原理圖</em>允許開發人員使用 <code>ng add</code> 在 Angular 工作區中安裝你的函式庫</p><p translation-origin=\"off\">An <em>add schematic</em> lets developers install your library in an Angular workspace using <code>ng add</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><em>產生（Generation）原理圖</em>可以告訴 <code>ng generate</code> 子命令如何修改專案、新增配置和指令碼，以及為庫中定義的工件提供腳手架</p><p translation-origin=\"off\"><em>Generation schematics</em> can tell the <code>ng generate</code> sub-commands how to modify projects, add configurations and scripts, and scaffold artifacts that are defined in your library</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><em>更新（Update）原理圖</em>可以告訴 <code>ng update</code> 命令，如何更新庫的依賴，並在釋出新版本時調整其中的重大變更</p><p translation-origin=\"off\">An <em>update schematic</em> can tell the <code>ng update</code> command how to update your library's dependencies and adjust for breaking changes when you release a new version</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">要了解它們的更多細節以及如何建立它們，請參閱：</p><p translation-origin=\"off\">For more details of what these look like and how to create them, see:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/schematics-authoring\">創作原理圖</a></p><p translation-origin=\"off\"><a href=\"guide/schematics-authoring\">Authoring Schematics</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/schematics-for-libraries\">庫的原理圖</a></p><p translation-origin=\"off\"><a href=\"guide/schematics-for-libraries\">Schematics for Libraries</a></p>\n\n</li>\n</ul>\n<h3 id=\"add-schematics\" translation-result=\"on\">新增（Add）原理圖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#add-schematics\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Add schematics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#add-schematics\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">庫中通常都會提供一個新增原理圖，以便透過 <code>ng add</code> 把這個庫新增到現有專案中。<code>add</code> 命令會執行包管理器來下載新的依賴，並呼叫一個原理圖形式的安裝指令碼。</p><p translation-origin=\"off\">An <em>add schematic</em> is typically supplied with a library, so that the library can be added to an existing project with <code>ng add</code>.\nThe <code>add</code> command uses your package manager to download new dependencies, and invokes an installation script that is implemented as a schematic.</p>\n\n<p translation-result=\"on\">比如，<a href=\"https://material.angular.cn/guide/schematics\"><code>@angular/material</code></a> 原理圖會要求 <code>add</code> 命令安裝並設定 Angular Material 及其主題，並註冊可透過 <code>ng generate</code> 建立的新啟動器元件。可以把它作為自己的 \"新增原理圖\" 的範例。</p><p translation-origin=\"off\">For example, the <a href=\"https://material.angular.io/guide/schematics\"><code>@angular/material</code></a> schematic tells the <code>add</code> command to install and set up Angular Material and theming, and register new starter components that can be created with <code>ng generate</code>.\nLook at this one as an example and model for your own add schematic.</p>\n\n<p translation-result=\"on\">合作伙伴和第三方庫也可以透過新增原理圖來支援 Angular CLI。比如，<code>@ng-bootstrap/schematics</code> 會把 <a href=\"https://ng-bootstrap.github.io\">ng-bootstrap</a> 新增到應用中，<code>@clr/angular</code> 會安裝並設定 <a href=\"https://clarity.design/documentation/get-started\">VMWare 的 Clarity</a>。</p><p translation-origin=\"off\">Partner and third party libraries also support the Angular CLI with add schematics.\nFor example, <code>@ng-bootstrap/schematics</code> adds <a href=\"https://ng-bootstrap.github.io\">ng-bootstrap</a>  to an app, and  <code>@clr/angular</code> installs and sets up <a href=\"https://clarity.design/documentation/get-started\">Clarity from VMWare</a>.</p>\n\n<p translation-result=\"on\">\"新增原理圖\" 還可以透過更改配置、新增額外依賴（比如Polyfill指令碼），或者新增程式包特有的初始化程式碼來修改專案。比如，<code>@angular/pwa</code> 原理圖會透過新增一個應用清單（manifest）和 Service Worker。</p><p translation-origin=\"off\">An <em>add schematic</em> can also update a project with configuration changes, add additional dependencies (such as polyfills), or scaffold package-specific initialization code.\nFor example, the <code>@angular/pwa</code> schematic turns your application into a PWA by adding an application manifest and service worker.</p>\n\n<h3 id=\"generation-schematics\" translation-result=\"on\">產生（Generation）原理圖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#generation-schematics\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Generation schematics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#generation-schematics\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">產生器原理圖是 <code>ng generate</code> 的操作指令。那些已經有文件的子命令會使用預設的 Angular 產生器原理圖，但你可以在子命令中指定另一個原理圖來產生你的函式庫中定義的那些工件。</p><p translation-origin=\"off\">Generation schematics are instructions for the <code>ng generate</code> command.\nThe documented sub-commands use the default Angular generation schematics, but you can specify a different schematic (in place of a sub-command) to generate an artifact defined in your library.</p>\n\n<p translation-result=\"on\">比如，Angular Material 為它定義的一些 UI 元件提供了產生器原理圖。下面的命令會使用其中一個原理圖來渲染一個 Angular Material 的 <code>&lt;mat-table&gt;</code> 元件，它預先配置了一個用於排序和分頁的資料源。</p><p translation-origin=\"off\">Angular Material, for example, supplies generation schematics for the UI components that it defines.\nThe following command uses one of these schematics to render an Angular Material <code>&lt;mat-table&gt;</code> that is pre-configured with a datasource for sorting and pagination.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng generate @angular/material:table &lt;component-name&gt;\n\n</code-example>\n<h3 id=\"update-schematics\" translation-result=\"on\">更新原理圖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#update-schematics\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Update schematics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/schematics#update-schematics\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code>ng update</code> 命令可以用來更新工作區的函式庫依賴。如果你沒有提供任何選項或使用了 help 選項，該命令會檢查你的工作區並建議要更新哪些庫。</p><p translation-origin=\"off\"> The <code>ng update</code> command can be used to update your workspace's library dependencies.\nIf you supply no options or use the help option, the command examines your workspace and suggests libraries to update.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng update\nWe analyzed your package.json, there are some packages to update:\n\n    Name                                      Version                     Command to update\n    ‐-------------------------------------------------------------------------------\n    @angular/cdk                       7.2.2 -&gt; 7.3.1           ng update @angular/cdk\n    @angular/cli                       7.2.3 -&gt; 7.3.0           ng update @angular/cli\n    @angular/core                      7.2.2 -&gt; 7.2.3           ng update @angular/core\n    @angular/material                  7.2.2 -&gt; 7.3.1           ng update @angular/material\n    rxjs                                      6.3.3 -&gt; 6.4.0           ng update rxjs\n\n    There might be additional packages that are outdated.\n    Run \"ng update --all\" to try to update all at the same time.\n\n</code-example>\n<p translation-result=\"on\">如果你給這個命令指定一組要更新的函式庫（或 <code>--all</code> 標誌），它就會更新這些庫、這些庫的對等依賴，以及對等依賴的對等依賴。</p><p translation-origin=\"off\">If you pass the command a set of libraries to update (or the <code>--all</code> flag), it updates those libraries, their peer dependencies, and the peer dependencies that depend on them.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">如果存在不一致（比如，如果在某個簡單的 <a href=\"https://semver.io\">semver</a> 範圍內無法匹配對等依賴），那麼該命令會產生一個錯誤，並且不會更改工作區中的任何內容。</p><p translation-origin=\"off\">If there are inconsistencies (for example, if peer dependencies cannot be matched by a simple <a href=\"https://semver.io\">semver</a> range), the command generates an error and does not change anything in the workspace.</p>\n\n<p translation-result=\"on\">我們建議你不要強制更新所有的依賴項，而應該首先嚐試更新特定的依賴項。</p><p translation-origin=\"off\">We recommend that you do not force an update of all dependencies by default.\nTry updating specific dependencies first.</p>\n\n<p translation-result=\"on\">關於 <code>ng update</code> 命令工作原理的更多資訊，請參閱“<a href=\"https://github.com/angular/angular-cli/blob/main/docs/specifications/update.md\">更新命令”</a>。</p><p translation-origin=\"off\">For more about how the <code>ng update</code> command works, see <a href=\"https://github.com/angular/angular-cli/blob/main/docs/specifications/update.md\">Update Command</a>.</p>\n\n</div>\n<p translation-result=\"on\">如果你建立的新版本的函式庫引入了潛在的重大更改，你可以提供一個<em>更新原理圖</em>，讓 <code>ng update</code> 命令能夠自動解決所更新專案中的任何重大修改。</p><p translation-origin=\"off\">If you create a new version of your library that introduces potential breaking changes, you can provide an <em>update schematic</em> to enable the <code>ng update</code> command to automatically resolve any such changes in the project being updated.</p>\n\n<p translation-result=\"on\">比如，假設你要更新 Angular Material 庫。</p><p translation-origin=\"off\">For example, suppose you want to update the Angular Material library.</p>\n\n<code-example format=\"shell\" language=\"shell\">\nng update @angular/material\n</code-example>\n<p translation-result=\"on\">該命令會在你的工作區的 <code>package.json</code> 中更新 <code>@angular/material</code> 及其依賴項 <code>@angular/cdk</code>。如果任何一個套件中包含了涵蓋從現有版本到新版本的遷移規則的更新原理圖，那麼該命令就會在你的工作區中執行這個原理圖。</p><p translation-origin=\"off\">This command updates both <code>@angular/material</code> and its dependency <code>@angular/cdk</code> in your workspace's <code>package.json</code>.\nIf either package contains an update schematic that covers migration from the existing version to a new version, the command runs that schematic on your workspace.</p>\n\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/architecture-next-steps\n - guide/creating-libraries\n - guide/glossary\n - guide/standalone-migration\n - guide/what-is-angular\n - scaling\n-->\n<!-- links from this doc:\n - guide/glossary#cli\n - guide/glossary#collection\n - guide/schematics#add-schematics\n - guide/schematics#angular-cli-中的原理圖\n - guide/schematics#configuring-cli-schematics\n - guide/schematics#developing-schematics-for-libraries\n - guide/schematics#generating-code-using-schematics\n - guide/schematics#generation-schematics\n - guide/schematics#schematics-for-the-angular-cli\n - guide/schematics#update-schematics\n - guide/schematics#原理圖schematic\n - guide/schematics#更新原理圖\n - guide/schematics#新增add原理圖\n - guide/schematics#產生generation原理圖\n - guide/schematics#編寫庫的原理圖\n - guide/schematics#配置-cli-的原理圖\n - guide/schematics-authoring\n - guide/schematics-for-libraries\n - guide/workspace-config\n - https://clarity.design/documentation/get-started\n - https://github.com/angular/angular-cli/blob/main/docs/specifications/update.md\n - https://github.com/angular/angular-cli/tree/main/packages/schematics/angular\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/schematics.md?message=docs%3A%20請簡述你的修改...\n - https://material.angular.cn/guide/schematics\n - https://material.angular.io/guide/schematics\n - https://ng-bootstrap.github.io\n - https://semver.io\n-->"}