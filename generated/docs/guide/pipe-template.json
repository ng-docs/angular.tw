{"id":"guide/pipe-template","title":"Using a pipe in a template","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipe-template.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"using-a-pipe-in-a-template\" translation-result=\"on\">在範本中使用管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipe-template#using-a-pipe-in-a-template\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Using a pipe in a template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipe-template#using-a-pipe-in-a-template\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">要應用管道，請在範本表示式中使用管道運算子（<code>|</code>），如以下程式碼範例所示，以及管道<em>名稱</em>，對於內建<a href=\"api/common/DatePipe\"><code>DatePipe</code></a>來說是 <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code>。</p><p translation-origin=\"off\">To apply a pipe, use the pipe operator (<code>|</code>) within a template expression as shown in the following code example, along with the <em>name</em> of the pipe, which is <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code> for the built-in <a href=\"api/common/DatePipe\"><code>DatePipe</code></a>.</p>\n\n<p translation-result=\"on\">範例中的選項卡顯示以下內容：</p><p translation-origin=\"off\">The tabs in the example show the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>app.component.html</code> 在另一個單獨的範本中使用 <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code> 來顯示生日。</p><p translation-origin=\"off\"><code>app.component.html</code> uses <code><a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a></code> in a separate template to display a birthday.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>hero-birthday1.component.ts</code> 使用相同的管道作為元件內嵌範本的一部分，同時該元件也會設定生日值。</p><p translation-origin=\"off\"><code>hero-birthday1.component.ts</code> uses the same pipe as part of an in-line template in a component that also sets the birthday value.</p>\n\n</li>\n</ul>\n<code-tabs>\n    <code-pane header=\"src/app/app.component.html\" region=\"hero-birthday-template\" path=\"pipes/src/app/app.component.html\">\n&lt;p&gt;The hero's birthday is {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a> }}&lt;/p&gt;\n\n</code-pane>\n    <code-pane header=\"src/app/hero-birthday1.component.ts\" path=\"pipes/src/app/hero-birthday1.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-hero-birthday',\n  template: \"&lt;p&gt;The hero's birthday is {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a> }}&lt;/p&gt;\"\n})\nexport class HeroBirthdayComponent {\n  birthday = new Date(1988, 3, 15); // April 15, 1988 -- since month parameter is zero-based\n}\n\n\n</code-pane>\n</code-tabs>\n<p translation-result=\"on\">該元件的 <code>birthday</code> 值透過管道運運算元（|）流向 <a href=\"api/common/DatePipe\"><code>date</code></a> 函式。</p><p translation-origin=\"off\">The component's <code>birthday</code> value flows through the pipe operator, <code>|</code> to the <a href=\"api/common/DatePipe\"><code>date</code></a> function.</p>\n\n\n  <div class=\"reviewed\">最後複查時間：4/7/2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common/DatePipe\n - api/core/Component\n - guide/pipe-template#using-a-pipe-in-a-template\n - guide/pipe-template#在範本中使用管道\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/pipe-template.md?message=docs%3A%20請簡述你的修改...\n-->"}