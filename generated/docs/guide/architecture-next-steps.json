{"id":"guide/architecture-next-steps","title":"Next steps: tools and techniques","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/architecture-next-steps.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"next-steps-tools-and-techniques\" translation-result=\"on\">後續步驟：工具與技巧<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#next-steps-tools-and-techniques\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Next steps: tools and techniques<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#next-steps-tools-and-techniques\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">在瞭解了基本的 Angular 建構塊之後，你可以進一步瞭解可以幫助你開發和交付 Angular 應用的特性和工具。</p><p translation-origin=\"off\">After you understand the basic Angular building blocks, you can learn more\nabout the features and tools that can help you develop and deliver Angular applications.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">參考“<a href=\"tutorial\">英雄之旅”</a>課程，瞭解如何將這些基本建構塊放在一起，來建立設計精良的應用。</p><p translation-origin=\"off\">Work through the <a href=\"tutorial\">Tour of Heroes</a> tutorial to get a feel for how to fit the basic building blocks together to create a well-designed application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">檢視<a href=\"guide/glossary\">詞彙表</a>，瞭解 Angular 特有的術語和用法。</p><p translation-origin=\"off\">Check out the <a href=\"guide/glossary\">Glossary</a> to understand Angular-specific terms and usage.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">根據你的開發階段和感興趣的領域，使用該文件更深入地學習某些關鍵特性。</p><p translation-origin=\"off\">Use the documentation to learn about key features in more depth, according to your stage of development and areas of interest.</p>\n\n</li>\n</ul>\n<h2 id=\"application-architecture\" translation-result=\"on\">應用架構<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#application-architecture\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Application architecture<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#application-architecture\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\">目錄中的<strong>主要概念</strong>部分包含一系列主題，用於解釋如何把<a href=\"guide/glossary#component\">元件</a>中的應用資料與頁面顯示<a href=\"guide/glossary#template\">範本</a>聯絡起來，以建立一個完整的互動式應用。</p><p translation-origin=\"off\">The <strong>Main Concepts</strong> section located in the table of contents contains several topics that explain how to connect the application data in your <a href=\"guide/glossary#component\">components</a> to your page-display <a href=\"guide/glossary#template\">templates</a>, to create a complete interactive application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/ngmodules\">NgModules</a>一章中提供了關於 Angular 應用模組化結構的深度資訊。</p><p translation-origin=\"off\">The <a href=\"guide/ngmodules\">NgModules</a> guide provides in-depth information on the modular structure of an Angular application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/router\">路由與導航</a>一章中提供了一些深度資訊，教你如何構造出一個允許使用者導航到單頁面應用中不同<a href=\"guide/glossary#view\">檢視</a> 的應用。</p><p translation-origin=\"off\">The <a href=\"guide/router\">Routing and navigation</a> guide provides in-depth information on how to construct applications that allow a user to navigate to different <a href=\"guide/glossary#view\">views</a> within your single-page application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/dependency-injection\">依賴注入</a>一章提供了一些深度資訊，教你如何讓每個元件類都可以獲取實現其功能所需的服務和物件。</p><p translation-origin=\"off\">The <a href=\"guide/dependency-injection\">Dependency injection</a> guide provides in-depth information on how to construct an application such that each component class can acquire the services and objects it needs to perform its function.</p>\n\n</li>\n</ul>\n<h2 id=\"responsive-programming\" translation-result=\"on\">響應式程式設計<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#responsive-programming\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Responsive programming<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#responsive-programming\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><strong>“元件和範本”</strong>一章提供了<a href=\"guide/template-syntax\">範本語法</a>的指南和詳細資訊，用於在檢視中隨時隨地顯示元件資料，並從使用者那裡收集輸入，以便做出響應。</p><p translation-origin=\"off\">The <a href=\"guide/template-syntax\">template syntax</a> and related topics contain details about how to display your component data when and where you want it within a view, and how to collect input from users that you can respond to.</p>\n\n<p translation-result=\"on\">其它頁面和章節則描述了 Angular 應用的一些基本程式設計技巧。</p><p translation-origin=\"off\">Additional pages and sections describe some basic programming techniques for Angular applications.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/lifecycle-hooks\">生命週期鉤子</a>：透過實現生命週期鉤子介面，可以竊聽元件生命週期中的一些關鍵時刻 —— 從建立到銷燬。</p><p translation-origin=\"off\"><a href=\"guide/lifecycle-hooks\">Lifecycle hooks</a>: Tap into key moments in the lifetime of a component, from its creation to its destruction, by implementing the lifecycle hook interfaces.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/observables\">可觀察物件（Observable）和事件處理</a>：如何在元件和服務中使用可觀察物件來發布和訂閱任意類別型的訊息，比如使用者互動事件和非同步操作結果。</p><p translation-origin=\"off\"><a href=\"guide/observables\">Observables and event processing</a>: How to use observables with components and services to publish and subscribe to messages of any type, such as user-interaction events and asynchronous operation results.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/elements\">Angular 自訂元素</a>：如何使用 Web Components 把元件打包成<em>自訂元素</em>，Web Components 是一種以框架無關的方式定義新 HTML 元素的 Web 標準。</p><p translation-origin=\"off\"><a href=\"guide/elements\">Angular elements</a>: How to package components as <em>custom elements</em> using Web Components, a web standard for defining new HTML elements in a framework-agnostic way.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/forms-overview\">表單</a>：透過基於 HTML 的輸入驗證，來支援複雜的資料輸入場景。</p><p translation-origin=\"off\"><a href=\"guide/forms-overview\">Forms</a>: Support complex data entry scenarios with HTML-based input validation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/animations\">動畫</a>：使用 Angular 的動畫函式庫，你可以讓元件支援動畫行為，而不用深入瞭解動畫技術或 CSS。</p><p translation-origin=\"off\"><a href=\"guide/animations\">Animations</a>: Use Angular's animation library to animate component behavior\nwithout deep knowledge of animation techniques or CSS.</p>\n\n</li>\n</ul>\n<h2 id=\"client-server-interaction\" translation-result=\"on\">“客戶端-伺服器”互動<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#client-server-interaction\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Client-server interaction<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#client-server-interaction\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular 為單頁面應用提供了一個框架，其中的大多數邏輯和資料都留在客戶端。大多數應用仍然需要使用 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 來存取伺服器，以存取和儲存資料。對於某些平臺和應用，你可能還希望使用 PWA（漸進式 Web 應用）模型來改善使用者體驗。</p><p translation-origin=\"off\">Angular provides a framework for single-page applications, where most of the logic and data resides on the client.\nMost applications still need to access a server using the <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> to access and save data.\nFor some platforms and applications, you might also want to use the PWA (Progressive Web App) model to improve the user experience.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/http\">HTTP</a>：與伺服器通訊，透過 HTTP 客戶端來獲取資料、儲存資料，並呼叫伺服器端的動作。</p><p translation-origin=\"off\"><a href=\"guide/http\">HTTP</a>: Communicate with a server to get data, save data, and invoke server-side actions with an HTTP client.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/universal\">伺服器端渲染</a>：Angular Universal 透過伺服器端渲染（SSR）在伺服器上產生靜態應用頁面。這允許你在伺服器上執行 Angular 應用，以提高效能，並在移動裝置和低功耗裝置上快速顯示首屏，同時也方便了網頁抓取工具。</p><p translation-origin=\"off\"><a href=\"guide/universal\">Server-side rendering</a>: Angular Universal generates static application pages on the server through server-side rendering (SSR). This allows you to run your Angular application on the server in order to improve performance and show the first page quickly on mobile and low-powered devices, and also facilitate web crawlers.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/service-worker-intro\">Service Worker 和 PWA</a>：使用 Service Worker 來減少對網路的依賴，並顯著改善使用者體驗。</p><p translation-origin=\"off\"><a href=\"guide/service-worker-intro\">Service workers and PWA</a>: Use a service worker to reduce dependency on the network and significantly improve the user experience.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/web-worker\">Web worker</a>：學習如何在後台執行緒中執行 CPU 密集型的計算。</p><p translation-origin=\"off\"><a href=\"guide/web-worker\">Web workers</a>: Learn how to run CPU-intensive computations in a background thread.</p>\n\n</li>\n</ul>\n<h2 id=\"support-for-the-development-cycle\" translation-result=\"on\">為開發週期提供支援<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#support-for-the-development-cycle\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Support for the development cycle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#support-for-the-development-cycle\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"cli\">CLI 命令參考手冊</a>：Angular CLI 是一個命令列工具，可用於建立專案、產生應用和庫程式碼，以及執行各種持續開發任務，如測試、打套件和部署。</p><p translation-origin=\"off\"><a href=\"cli\">CLI Command Reference</a>: The Angular CLI is a command-line tool that you use to create projects, generate application and library code, and perform a variety of ongoing development tasks such as testing, bundling, and deployment.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/aot-compiler\">編譯</a>：Angular 為開發環境提供了 JIT（即時）編譯方式，為生產環境提供了 AOT（預先）編譯方式。</p><p translation-origin=\"off\"><a href=\"guide/aot-compiler\">Compilation</a>: Angular provides just-in-time (JIT) compilation for the development environment, and ahead-of-time (AOT) compilation for the production environment.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/testing\">測試平台</a>：對應用的各個部件執行單元測試，讓它們好像在和 Angular 框架互動一樣。</p><p translation-origin=\"off\"><a href=\"guide/testing\">Testing platform</a>: Run unit tests on your application parts as they interact with the Angular framework.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/deployment\">部署</a>：學習如何把 Angular 應用部署到遠端伺服器上。</p><p translation-origin=\"off\"><a href=\"guide/deployment\">Deployment</a>: Learn techniques for deploying your Angular application to a remote server.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/security\">安全指南</a>：學習 Angular 對常見 Web 應用的弱點和工具（比如跨站指令碼攻擊）提供的內建防護措施。</p><p translation-origin=\"off\"><a href=\"guide/security\">Security guidelines</a>: Learn about Angular's built-in protections against common web-application vulnerabilities and attacks such as cross-site scripting attacks.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n-overview\" title=\"Angular Internationalization | Angular\">國際化</a>：藉助 Angular 的國際化（i18n）工具，可以讓你的應用支援多本地環境。</p><p translation-origin=\"off\"><a href=\"guide/i18n-overview\" title=\"Angular Internationalization | Angular\">Internationalization</a>: Make your application available in multiple languages with Angular's internationalization (i18n) tools.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/accessibility\">無障礙性</a>：讓所有使用者都能存取你的應用。</p><p translation-origin=\"off\"><a href=\"guide/accessibility\">Accessibility</a>: Make your application accessible to all users.</p>\n\n</li>\n</ul>\n<h2 id=\"file-structure-configuration-and-dependencies\" translation-result=\"on\">檔案結構、配置和依賴<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#file-structure-configuration-and-dependencies\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">File structure, configuration, and dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#file-structure-configuration-and-dependencies\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/file-structure\">工作區與檔案結構</a>：理解 Angular 工作區與專案資料夾的結構。</p><p translation-origin=\"off\"><a href=\"guide/file-structure\">Workspace and file structure</a>: Understand the structure of Angular workspace and project folders.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/build\">建構與執行</a>：學習為專案定義不同的建構和代理伺服器設定的配置方式，比如開發、預生產和生產。</p><p translation-origin=\"off\"><a href=\"guide/build\">Building and serving</a>: Learn to define different build and proxy server configurations for your project, such as development, staging, and production.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/npm-packages\">npm 套件</a>：Angular 框架、Angular CLI 和 Angular 應用中用到的元件都是用 <a href=\"https://docs.npmjs.com\">npm</a> 打套件的，並透過 npm 註冊伺服器進行釋出。Angular CLI 會建立一個預設的 <code>package.json</code> 檔案，它會指定一組初始的套件，它們可以一起使用，共同支援很多常見的應用場景。</p><p translation-origin=\"off\"><a href=\"guide/npm-packages\">npm packages</a>: The Angular Framework, Angular CLI, and components used by Angular applications are packaged as <a href=\"https://docs.npmjs.com\">npm</a> packages and distributed using the npm registry. The Angular CLI creates a default <code>package.json</code> file, which specifies a starter set of packages that work well together and jointly support many common application scenarios.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/typescript-configuration\">TypeScript 配置</a>：TypeScript 是 Angular 應用開發的主要語言。</p><p translation-origin=\"off\"><a href=\"guide/typescript-configuration\">TypeScript configuration</a>: TypeScript is the primary language for Angular application development.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/browser-support\">瀏覽器支援</a>：讓你的應用能和各種瀏覽器相容。</p><p translation-origin=\"off\"><a href=\"guide/browser-support\">Browser support</a>: Make your applications compatible across a wide range of browsers.</p>\n\n</li>\n</ul>\n<h2 id=\"extending-angular\" translation-result=\"on\">擴充 Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#extending-angular\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Extending Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#extending-angular\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/libraries\">Angular 函式庫</a>：學習如何使用和建立可複用的函式庫。</p><p translation-origin=\"off\"><a href=\"guide/libraries\">Angular libraries</a>: Learn about using and creating re-usable libraries.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">學習<a href=\"guide/schematics\">原理圖</a>：學習如何自訂和擴充 CLI 的產生（<code>generate</code>）能力。</p><p translation-origin=\"off\"><a href=\"guide/schematics\">Schematics</a>: Learn about customizing and extending the CLI's generation capabilities.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/cli-builder\">CLI 建構器</a>：學習如何自訂和擴充 CLI 的能力，讓它使用工具來執行復雜任務，比如建構和測試應用。</p><p translation-origin=\"off\"><a href=\"guide/cli-builder\">CLI builders</a>: Learn about customizing and extending the CLI's ability to apply tools to perform complex tasks, such as building and testing applications.</p>\n\n</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/architecture\n-->\n<!-- links from this doc:\n - api/common/http/HttpClient\n - cli\n - guide/accessibility\n - guide/animations\n - guide/aot-compiler\n - guide/architecture-next-steps#application-architecture\n - guide/architecture-next-steps#client-server-interaction\n - guide/architecture-next-steps#extending-angular\n - guide/architecture-next-steps#file-structure-configuration-and-dependencies\n - guide/architecture-next-steps#next-steps-tools-and-techniques\n - guide/architecture-next-steps#responsive-programming\n - guide/architecture-next-steps#support-for-the-development-cycle\n - guide/architecture-next-steps#為開發週期提供支援\n - guide/architecture-next-steps#後續步驟工具與技巧\n - guide/architecture-next-steps#響應式程式設計\n - guide/architecture-next-steps#客戶端-伺服器互動\n - guide/architecture-next-steps#應用架構\n - guide/architecture-next-steps#擴充-angular\n - guide/architecture-next-steps#檔案結構配置和依賴\n - guide/browser-support\n - guide/build\n - guide/cli-builder\n - guide/dependency-injection\n - guide/deployment\n - guide/elements\n - guide/file-structure\n - guide/forms-overview\n - guide/glossary\n - guide/glossary#component\n - guide/glossary#template\n - guide/glossary#view\n - guide/http\n - guide/i18n-overview\n - guide/libraries\n - guide/lifecycle-hooks\n - guide/ngmodules\n - guide/npm-packages\n - guide/observables\n - guide/router\n - guide/schematics\n - guide/security\n - guide/service-worker-intro\n - guide/template-syntax\n - guide/testing\n - guide/typescript-configuration\n - guide/universal\n - guide/web-worker\n - tutorial\n - https://docs.npmjs.com\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/architecture-next-steps.md?message=docs%3A%20請簡述你的修改...\n-->"}