{"id":"guide/routing-with-urlmatcher","title":"Tutorial: Creating custom route matches","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/routing-with-urlmatcher.md?message=docs%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"tutorial-creating-custom-route-matches\" translation-result=\"on\">課程：建立自訂路由匹配器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#tutorial-creating-custom-route-matches\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Tutorial: Creating custom route matches<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#tutorial-creating-custom-route-matches\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">Angular Router 支援強大的匹配策略，你可以使用它來幫助使用者在應用中導航。該匹配策略支援靜態路由、帶引數的可變路由、萬用字元路由等。此外，還可以為更復雜的 URL 建構你自己的自訂模式匹配。</p><p translation-origin=\"off\">The Angular Router supports a powerful matching strategy that you can use to help users navigate your application.\nThis matching strategy supports static routes, variable routes with parameters, wildcard routes, and so on.\nAlso, build your own custom pattern matching for situations in which the URLs are more complicated.</p>\n\n<p translation-result=\"on\">在本課程中，你將使用 Angular 的 <code><a href=\"api/router/UrlMatcher\" class=\"code-anchor\">UrlMatcher</a></code> 來建構自訂路由匹配器。此匹配器在 URL 中查詢 Twitter ID。</p><p translation-origin=\"off\">In this tutorial, you'll build a custom route matcher using Angular's <code><a href=\"api/router/UrlMatcher\" class=\"code-anchor\">UrlMatcher</a></code>.\nThis matcher looks for a Twitter handle in the URL.</p>\n\n<p translation-result=\"on\">有關本課程最終版本的工作範例，請參閱<live-example></live-example>。</p><p translation-origin=\"off\">For a working example of the final version of this tutorial, see the <live-example></live-example>.</p>\n\n<h2 id=\"objectives\" translation-result=\"on\">目標<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#objectives\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Objectives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#objectives\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">實現 Angular 的 <code><a href=\"api/router/UrlMatcher\" class=\"code-anchor\">UrlMatcher</a></code> 以建立自訂路由匹配器。</p><p translation-origin=\"off\">Implement Angular's <code><a href=\"api/router/UrlMatcher\" class=\"code-anchor\">UrlMatcher</a></code> to create a custom route matcher.</p>\n\n<h2 id=\"prerequisites\" translation-result=\"on\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要完成本課程，你應該對以下概念有基本的瞭解：</p><p translation-origin=\"off\">To complete this tutorial, you should have a basic understanding of the following concepts:</p>\n\n<ul>\n<li>\n<p>JavaScript</p>\n</li>\n<li>\n<p>HTML</p>\n</li>\n<li>\n<p>CSS</p>\n</li>\n<li>\n<p><a href=\"cli\">Angular CLI</a></p>\n</li>\n</ul>\n<p translation-result=\"on\">如果你不熟悉 Angular 路由器的工作原理，請閱讀<a href=\"guide/router-tutorial\">在單頁應用程式中使用 Angular 路由</a>。</p><p translation-origin=\"off\">If you are unfamiliar with how Angular's router works, review <a href=\"guide/router-tutorial\">Using Angular routes in a single-page application</a>.</p>\n\n<h2 id=\"create-a-sample-application\" translation-result=\"on\">建立一個範例應用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#create-a-sample-application\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Create a sample application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#create-a-sample-application\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用 Angular CLI，建立一個新應用程式 <em>angular-custom-route-match</em>。除了預設的 Angular 應用程式框架之外，還將建立一個 <em>profile</em> 元件。</p><p translation-origin=\"off\">Using the Angular CLI, create a new application, <em>angular-custom-route-match</em>.\nIn addition to the default Angular application framework, you will also create a <em>profile</em> component.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">建立一個新的 Angular 專案 <em>angular-custom-route-match</em>。</p><p translation-origin=\"off\">Create a new Angular project, <em>angular-custom-route-match</em>.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng new angular-custom-route-match\n\n</code-example>\n<p translation-result=\"on\">當提示 <code>Would you like to add Angular routing?</code> 時，選擇 <code>Y</code>。</p><p translation-origin=\"off\">When prompted with <code>Would you like to add Angular routing?</code>, select <code>Y</code>.</p>\n\n<p translation-result=\"on\">當系統提示 <code>Which stylesheet format would you like to use?</code> 時，選擇 <code>CSS</code>。</p><p translation-origin=\"off\">When prompted with <code>Which stylesheet format would you like to use?</code>, select <code>CSS</code>.</p>\n\n<p translation-result=\"on\">片刻之後，一個新專案 <code>angular-custom-route-match</code> 就準備好了。</p><p translation-origin=\"off\">After a few moments, a new project, <code>angular-custom-route-match</code>, is ready.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">開啟終端視窗，進到 <code>angular-custom-route-match</code> 目錄。</p><p translation-origin=\"off\">From your terminal, navigate to the <code>angular-custom-route-match</code> directory.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">建立一個元件 <em>profile</em>。</p><p translation-origin=\"off\">Create a component, <em>profile</em>.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component profile\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在你的程式碼編輯器中，找到檔案 <code>profile.component.html</code> 並將其佔位內容替換為以下 HTML。</p><p translation-origin=\"off\">In your code editor, locate the file, <code>profile.component.html</code> and replace the placeholder content with the following HTML.</p>\n\n<code-example header=\"src/app/profile/profile.component.html\" path=\"routing-with-urlmatcher/src/app/profile/profile.component.html\">\n&lt;p&gt;\nHello {{ username$ | async }}!\n&lt;/p&gt;\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在你的程式碼編輯器中，找到檔案 <code>app.component.html</code> 並將其佔位內容替換為以下 HTML。</p><p translation-origin=\"off\">In your code editor, locate the file, <code>app.component.html</code> and replace the placeholder content with the following HTML.</p>\n\n<code-example header=\"src/app/app.component.html\" path=\"routing-with-urlmatcher/src/app/app.component.html\">\n&lt;h2&gt;Routing with Custom Matching&lt;/h2&gt;\n\nNavigate to &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/@Angular\"&gt;my profile&lt;/a&gt;\n\n&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"configure-your-routes-for-your-application\" translation-result=\"on\">為你的應用程式配置路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#configure-your-routes-for-your-application\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Configure your routes for your application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#configure-your-routes-for-your-application\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">應用程式框架就緒後，接下來就要向 <code>app.module.ts</code> 檔案中新增路由能力。首先，你要建立一個自訂 URL 匹配器，用於在 URL 中查詢 Twitter ID。此 ID 由其前導 <code>@</code> 符號標識出來。</p><p translation-origin=\"off\">With your application framework in place, you next need to add routing capabilities to the <code>app.module.ts</code> file.\nAs a part of this process, you will create a custom URL matcher that looks for a Twitter handle in the URL.\nThis handle is identified by a preceding <code>@</code> symbol.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在你的程式碼編輯器中，開啟 <code>app.module.ts</code> 檔案。</p><p translation-origin=\"off\">In your code editor, open your <code>app.module.ts</code> file.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">為 Angular 的 <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code> 和 <code><a href=\"api/router/UrlMatcher\" class=\"code-anchor\">UrlMatcher</a></code> 新增 <code>import</code> 陳述式。</p><p translation-origin=\"off\">Add an <code>import</code> statement for Angular's <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code> and <code><a href=\"api/router/UrlMatcher\" class=\"code-anchor\">UrlMatcher</a></code>.</p>\n\n<code-example header=\"src/app/app.module.ts\" path=\"routing-with-urlmatcher/src/app/app.module.ts\" region=\"import\">\nimport { <a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>, <a href=\"api/router/UrlSegment\" class=\"code-anchor\">UrlSegment</a> } from '@angular/router';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>imports</code> 陣列中，新增 <code>RouterModule.forRoot([])</code> 陳述式。</p><p translation-origin=\"off\">In the imports array, add a <code>RouterModule.forRoot([])</code> statement.</p>\n\n<code-example header=\"src/app/app.module.ts\" path=\"routing-with-urlmatcher/src/app/app.module.ts\" region=\"imports-array\">\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports:      [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n    <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>,\n    RouterModule.forRoot([\n/* . . . */\n    ])],\n  declarations: [ AppComponent, ProfileComponent ],\n  bootstrap:    [ AppComponent ]\n})\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">將如下程式碼新增到 <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> 陳述式中，以便使用自訂路由匹配器。</p><p translation-origin=\"off\">Define the custom route matcher by adding the following code to the <code><a href=\"api/router/RouterModule#forRoot\" class=\"code-anchor\">RouterModule.forRoot()</a></code> statement.</p>\n\n<code-example header=\"src/app/app.module.ts\" path=\"routing-with-urlmatcher/src/app/app.module.ts\" region=\"matcher\">\n{\n  matcher: (url) =&gt; {\n    if (url.length === 1 &amp;&amp; url[0].path.match(/^@[\\w]+$/gm)) {\n      return {\n        consumed: url,\n        posParams: {\n          username: new <a href=\"api/router/UrlSegment\" class=\"code-anchor\">UrlSegment</a>(url[0].path.slice(1), {})\n        }\n      };\n    }\n\n    return null;\n  },\n  component: ProfileComponent\n}\n\n</code-example>\n</li>\n</ol>\n<p translation-result=\"on\">這個自訂匹配器是一個執行以下任務的函式：</p><p translation-origin=\"off\">This custom matcher is a function that performs the following tasks:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">匹配器驗證陣列是否只包含一個區段。</p><p translation-origin=\"off\">The matcher verifies that the array contains only one segment</p>\n\n</li>\n<li>\n<p translation-result=\"on\">匹配器使用正則表示式來確保使用者名稱的格式是匹配的。</p><p translation-origin=\"off\">The matcher employs a regular expression to ensure that the format of the username is a match</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果匹配，則該函式返回整個 URL，將路由引數 <code>username</code> 定義為路徑的子字串。</p><p translation-origin=\"off\">If there is a match, the function returns the entire URL, defining a <code>username</code> route parameter as a substring of the path</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果不匹配，則該函式返回 <code>null</code> 並且路由器繼續查詢與 URL 匹配的其他路由。</p><p translation-origin=\"off\">If there isn't a match, the function returns null and the router continues to look for other routes that match the URL</p>\n\n</li>\n</ul>\n<div class=\"is-helpful\">\n<p translation-result=\"on\">自訂 URL 匹配器的行為與任何其他路由定義方式是一樣的。請像定義任何其他路由一樣定義子路由或延遲載入路由。</p><p translation-origin=\"off\">A custom URL matcher behaves like any other route definition.\nDefine child routes or lazy loaded routes as you would with any other route.</p>\n\n</div>\n<h2 id=\"subscribe-to-the-route-parameters\" translation-result=\"on\">訂閱路由引數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#subscribe-to-the-route-parameters\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Subscribe to the route parameters<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#subscribe-to-the-route-parameters\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">自訂匹配器就位後，你現在需要訂閱 <code>profile</code> 元件中的路由引數。</p><p translation-origin=\"off\">With the custom matcher in place, you now need to subscribe to the route parameters in the <code>profile</code> component.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在你的程式碼編輯器中，開啟 <code>profile.component.ts</code> 檔案。</p><p translation-origin=\"off\">In your code editor, open your <code>profile.component.ts</code> file.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">為 Angular 的 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 和 <code><a href=\"api/router/ParamMap\" class=\"code-anchor\">ParamMap</a></code> 新增 <code>import</code> 陳述式。</p><p translation-origin=\"off\">Add an <code>import</code> statement for Angular's <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> and <code><a href=\"api/router/ParamMap\" class=\"code-anchor\">ParamMap</a></code>.</p>\n\n<code-example header=\"src/app/profile/profile.component.ts\" path=\"routing-with-urlmatcher/src/app/profile/profile.component.ts\" region=\"activated-route-and-parammap\">\nimport { <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>, <a href=\"api/router/ParamMap\" class=\"code-anchor\">ParamMap</a> } from '@angular/router';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">為 RxJS 的 <code>map</code> 新增 <code>import</code> 陳述式。</p><p translation-origin=\"off\">Add an <code>import</code> statement for RxJS <code>map</code>.</p>\n\n<code-example header=\"src/app/profile/profile.component.ts\" path=\"routing-with-urlmatcher/src/app/profile/profile.component.ts\" region=\"rxjs-map\">\nimport { map } from 'rxjs/operators';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">訂閱 <code>username</code> 路由引數。</p><p translation-origin=\"off\">Subscribe to the <code>username</code> route parameter.</p>\n\n<code-example header=\"src/app/profile/profile.component.ts\" path=\"routing-with-urlmatcher/src/app/profile/profile.component.ts\" region=\"subscribe\">\nusername$ = this.route.paramMap\n  .pipe(\n    map((params: <a href=\"api/router/ParamMap\" class=\"code-anchor\">ParamMap</a>) =&gt; params.get('username'))\n  );\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">將 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 注入到元件的建構函式中。</p><p translation-origin=\"off\">Inject the <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> into the component's constructor.</p>\n\n<code-example header=\"src/app/profile/profile.component.ts\" path=\"routing-with-urlmatcher/src/app/profile/profile.component.ts\" region=\"activatedroute\">\nconstructor(private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>) { }\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"test-your-custom-url-matcher\" translation-result=\"on\">測試你的自訂 URL 匹配器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#test-your-custom-url-matcher\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Test your custom URL matcher<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#test-your-custom-url-matcher\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">程式碼就緒後，就可以測試自訂 URL 匹配器了。</p><p translation-origin=\"off\">With your code in place, you can now test your custom URL matcher.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在終端視窗中，執行 <code>ng serve</code> 命令。</p><p translation-origin=\"off\">From a terminal window, run the <code>ng serve</code> command.</p>\n\n<code-example format=\"shell\" language=\"shell\">\n\nng serve\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">開啟瀏覽器存取 <code>http://localhost:4200</code>。</p><p translation-origin=\"off\">Open a browser to <code>http://localhost:4200</code>.</p>\n\n<p translation-result=\"on\">你會看到一個網頁，其中包含一個句子，內容為 <code>Navigate to my profile</code>。</p><p translation-origin=\"off\">You should see a single web page, consisting of a sentence that reads <code>Navigate to my profile</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">單擊 <strong>my profile</strong> 超連結。</p><p translation-origin=\"off\">Click the <strong>my profile</strong> hyperlink.</p>\n\n<p translation-result=\"on\">一個新的句子 <code>Hello, Angular!</code> 出現在頁面上。</p><p translation-origin=\"off\">A new sentence, reading <code>Hello, Angular!</code> appears on the page.</p>\n\n</li>\n</ol>\n<h2 id=\"next-steps\" translation-result=\"on\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#next-steps\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Next steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/routing-with-urlmatcher#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">當你的應用程式中有動態 URL 時，使用 Angular Router 提供的模式匹配功能，可以為你提供很大的靈活性。要了解有關 Angular Router 的更多資訊，請參閱以下主題：</p><p translation-origin=\"off\">Pattern matching with the Angular Router provides you with a lot of flexibility when you have dynamic URLs in your application.\nTo learn more about the Angular Router, see the following topics:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/router\">應用內路由和導航</a></p><p translation-origin=\"off\"><a href=\"guide/router\">In-app Routing and Navigation</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"api/router\">路由器 API</a></p><p translation-origin=\"off\"><a href=\"api/router\">Router API</a></p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">此內容基於 <a href=\"https://twitter.com/brandontroberts\">Brandon Roberts</a> 的<a href=\"https://medium.com/@brandontroberts/custom-route-matching-with-the-angular-router-fbdd48665483\">為 Angular Router 使用自訂路由匹配</a>。</p><p translation-origin=\"off\">This content is based on <a href=\"https://medium.com/@brandontroberts/custom-route-matching-with-the-angular-router-fbdd48665483\">Custom Route Matching with the Angular Router</a>, by <a href=\"https://twitter.com/brandontroberts\">Brandon Roberts</a>.</p>\n\n</div>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/routing-overview\n-->\n<!-- links from this doc:\n - api/core/NgModule\n - api/forms/FormsModule\n - api/platform-browser/BrowserModule\n - api/router\n - api/router/ActivatedRoute\n - api/router/ParamMap\n - api/router/RouterLink\n - api/router/RouterModule\n - api/router/RouterModule#forRoot\n - api/router/RouterOutlet\n - api/router/UrlMatcher\n - api/router/UrlSegment\n - cli\n - guide/router\n - guide/router-tutorial\n - guide/routing-with-urlmatcher#configure-your-routes-for-your-application\n - guide/routing-with-urlmatcher#create-a-sample-application\n - guide/routing-with-urlmatcher#next-steps\n - guide/routing-with-urlmatcher#objectives\n - guide/routing-with-urlmatcher#prerequisites\n - guide/routing-with-urlmatcher#subscribe-to-the-route-parameters\n - guide/routing-with-urlmatcher#test-your-custom-url-matcher\n - guide/routing-with-urlmatcher#tutorial-creating-custom-route-matches\n - guide/routing-with-urlmatcher#下一步\n - guide/routing-with-urlmatcher#為你的應用程式配置路由\n - guide/routing-with-urlmatcher#建立一個範例應用\n - guide/routing-with-urlmatcher#前提條件\n - guide/routing-with-urlmatcher#課程建立自訂路由匹配器\n - guide/routing-with-urlmatcher#測試你的自訂-url-匹配器\n - guide/routing-with-urlmatcher#目標\n - guide/routing-with-urlmatcher#訂閱路由引數\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/routing-with-urlmatcher.md?message=docs%3A%20請簡述你的修改...\n - https://medium.com/@brandontroberts/custom-route-matching-with-the-angular-router-fbdd48665483\n - https://twitter.com/brandontroberts\n-->"}