{"id":"errors/NG0100","title":"NG0100: Expression has changed after it was checked\n\n表示式在檢查過之後又改變了","contents":"<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/errors/NG0100.md?message=docs(...)%3A%20請簡述你的修改...\" aria-label=\"提供編輯建議\" title=\"提供編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n<div class=\"content\">\n\n  <h1 id=\"ng0100-expression-has-changed-after-it-was-checked表示式在檢查過之後又改變了\">NG0100: Expression has changed after it was checked\n\n表示式在檢查過之後又改變了<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0100#ng0100-expression-has-changed-after-it-was-checked表示式在檢查過之後又改變了\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  <div class=\"video-container\">\n    <video controls=\"\">\n      <source src=\"assets/videos/NG0100.webm\" type=\"video/webm\">\n      <source src=\"assets/videos/NG0100.mp4\" type=\"video/mp4\">\n      <track src=\"assets/videos/NG0100.en.vtt\" label=\"English\" kind=\"subtitles\" srclang=\"en\">\n      <track src=\"assets/videos/NG0100.cn.vtt\" label=\"簡體中文\" kind=\"subtitles\" srclang=\"zh-CN\" default=\"\">\n      <track src=\"assets/videos/NG0100.tw.vtt\" label=\"正體中文\" kind=\"subtitles\" srclang=\"zh-TW\">\n    </video>\n  </div>\n  \n  \n\n  <div class=\"error-description\">\n    <h2 translation-result=\"on\" id=\"說明\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0100#說明\"><i class=\"material-icons\">link</i></a></h2>\n    <h2 translation-origin=\"off\" id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0100#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p translation-result=\"on\">當變更檢測完成後又更改了表示式值時，Angular 就會丟擲 <code>ExpressionChangedAfterItHasBeenCheckedError</code> 錯誤。Angular 只會在開發模式下丟擲此錯誤。</p><p translation-origin=\"off\">Angular throws an <code>ExpressionChangedAfterItHasBeenCheckedError</code> when an expression value has been changed after change detection has completed. Angular only throws this error in development mode.</p>\n\n<p translation-result=\"on\">在開發模式下，Angular 在每次變更檢測執行後都會執行一次附加檢查，以確保繫結沒有更改。這會在檢視處於不一致狀態時捕獲錯誤。比如，如果某個方法或 getter 每次被呼叫時都會返回一個不同的值，或者某個子元件更改了其父元件上的值，就可能會發生這種情況。如果發生這兩種情況，則表明變更檢測是不穩定的。Angular 會丟擲錯誤以確保資料始終正確地反映在檢視中，從而防止 UI 行為不穩定或可能的無限迴圈。</p><p translation-origin=\"off\">In development mode, Angular performs an additional check after each change detection run, to ensure the bindings haven't changed. This catches errors where the view is left in an inconsistent state. This can occur, for example, if a method or getter returns a different value each time it is called, or if a child component changes values on its parent. If either of these occurs, this is a sign that change detection is not stabilized. Angular throws the error to ensure data is always reflected correctly in the view, which prevents erratic UI behavior or a possible infinite loop.</p>\n\n<p translation-result=\"on\">當你添加了範本表示式或開始實現生命週期鉤子（比如 <code>ngAfterViewInit</code> 或 <code>ngOnChanges</code>）時，容易發生此錯誤。在處理載入狀態和非同步操作，或者子元件更改其父元件中的繫結時，這也很常見。</p><p translation-origin=\"off\">This error commonly occurs when you've added template expressions or have begun to implement lifecycle hooks like <code>ngAfterViewInit</code> or <code>ngOnChanges</code>. It is also common when dealing with loading status and asynchronous operations, or when a child component changes its parent bindings.</p>\n\n\n  </div>\n\n\n  \n  <br>\n\n  <div class=\"debugging\">\n    <h2 translation-result=\"on\" id=\"如何排除本錯誤\">如何排除本錯誤<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0100#如何排除本錯誤\"><i class=\"material-icons\">link</i></a></h2>\n    <h2 translation-origin=\"off\" id=\"debugging-the-error\">Debugging the error<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0100#debugging-the-error\"><i class=\"material-icons\">link</i></a></h2>\n    <p translation-result=\"on\"><a href=\"https://developer.mozilla.org/docs/Tools/Debugger/How_to/Use_a_source_map\">CLI 產生的原始碼對映</a>在除錯時非常有用。請向上瀏覽呼叫棧，直到找到錯誤中所顯示的、值已更改的範本表示式。</p><p translation-origin=\"off\">The <a href=\"https://developer.mozilla.org/docs/Tools/Debugger/How_to/Use_a_source_map\">source maps</a> generated by the CLI are very useful when debugging. Navigate up the call stack until you find a template expression where the value displayed in the error has changed.</p>\n\n<p translation-result=\"on\">執行變更檢測後，請確保範本中的繫結沒有更改。這通常意味著需要針對你的使用案例進行重構以使用正確的<a href=\"guide/lifecycle-hooks\">元件生命週期鉤子</a>。如果此問題存在於 <code>ngAfterViewInit</code> 中，建議的解決方案是使用建構函式或 <code>ngOnInit</code> 來設定初始值，或者使用 <code>ngAfterContentInit</code> 做其他值的繫結。</p><p translation-origin=\"off\">Ensure that there are no changes to the bindings in the template after change detection is run. This often means refactoring to use the correct <a href=\"guide/lifecycle-hooks\">component lifecycle hook</a> for your use case. If the issue exists within <code>ngAfterViewInit</code>, the recommended solution is to use a constructor or <code>ngOnInit</code> to set initial values, or use <code>ngAfterContentInit</code> for other value bindings.</p>\n\n<p translation-result=\"on\">如果要繫結到檢視中的方法，請確保呼叫不會更新範本中的任何其他繫結。</p><p translation-origin=\"off\">If you are binding to methods in the view, ensure that the invocation does not update any of the other bindings in the template.</p>\n\n<p translation-result=\"on\">在<a href=\"https://indepth.dev/posts/1001/everything-you-need-to-know-about-the-expressionchangedafterithasbeencheckederror-error\">“你需要了解的關於 “ExpressionChangedAfterItHasBeenCheckedError” 錯誤的一切”</a>中學習為什麼該解決方案更合適，以及在 <a href=\"https://blog.angular-university.io/angular-debugging\">“Angular 除錯：檢查後表示式已更改”的簡單說明（和修復）</a>中瞭解為什麼這樣做會有用。</p><p translation-origin=\"off\">Read more about which solution is right for you in <a href=\"https://indepth.dev/posts/1001/everything-you-need-to-know-about-the-expressionchangedafterithasbeencheckederror-error\">'Everything you need to know about the \"ExpressionChangedAfterItHasBeenCheckedError\" error'</a> and why this is useful at <a href=\"https://blog.angular-university.io/angular-debugging\">'Angular Debugging \"Expression has changed after it was checked\": Simple Explanation (and Fix)'</a>.</p>\n\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n  \n</div>\n\n<!-- links to this doc:\n - errors\n - guide/deployment\n-->\n<!-- links from this doc:\n - errors/NG0100#debugging-the-error\n - errors/NG0100#description\n - errors/NG0100#ng0100-expression-has-changed-after-it-was-checked表示式在檢查過之後又改變了\n - errors/NG0100#如何排除本錯誤\n - errors/NG0100#說明\n - guide/lifecycle-hooks\n - https://blog.angular-university.io/angular-debugging\n - https://developer.mozilla.org/docs/Tools/Debugger/How_to/Use_a_source_map\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/errors/NG0100.md?message=docs(...)%3A%20請簡述你的修改...\n - https://indepth.dev/posts/1001/everything-you-need-to-know-about-the-expressionchangedafterithasbeencheckederror-error\n-->"}