WEBVTT
Kind: subtitles
Language: zh-TW

00:00.640 --> 00:05.520
The pipe name could not be found.
你可能在範本中參考某個管道時遇到此錯誤

00:05.520 --> 00:10.880
它可能沒有匯入或正確命名

00:10.880 --> 00:16.880
就像元件和指令一樣，管道也必須在 ngModule 中宣告或匯入

00:16.880 --> 00:22.480
另外，當在範本中參考時，此名字必須與管道裝飾器中指定的名字相同

00:22.480 --> 00:27.440
這意味著每個管道都必須有一個名字，而且

00:27.440 --> 00:32.720
該名字在所屬的 ngModule 中必須是唯一的
讓我們看一個簡單的錯誤重現及其解決方案

00:32.720 --> 00:37.680
然後，我們會更詳細的研究管道，以便理解為何會發生本錯誤

00:37.680 --> 00:43.120
你可能注意到我們在使用 truncate 這個名字來參考此管道

00:43.120 --> 00:48.320
不過 VSCode 中的紅色下劃線告訴我們：Angular 無法找到具有這個名字的管道

00:48.320 --> 00:53.600
如果你沒有在 VSCode 中看到本錯誤，也會在終端視窗或瀏覽器控制檯中看到

00:53.600 --> 00:58.640
無論哪種情況，堆疊追蹤都會為你指出發生此問題的範本

00:58.640 --> 01:04.320
要想修復本錯誤，我們先要驗證此管道在 ngModule 中是可用的

01:04.320 --> 01:09.040
這個例子中，我們試圖在 AppModule 中使用此管道

01:09.040 --> 01:14.320
因為它是我們正在開發的專案中的自訂管道，所以它需要
像元件或指令一樣，宣告在此模組中

01:14.320 --> 01:19.840
另一些例子中，管道可能是由其它模組或第三方包匯出的

01:19.840 --> 01:24.720
那種情況下，你可能要匯入那個模組，而非把那個管道加入 declarations

01:24.720 --> 01:29.440
這裡，我們已經驗證過此管道在該 ngModule 中可用

01:29.440 --> 01:34.320
但是仍然有錯誤。接下來是檢查該管道本身的定義

01:34.320 --> 01:39.760
特別是 Pipe 裝飾器中的 name 選項

01:39.760 --> 01:44.560
注意，這裡的管道名是 'shorten'，而範本中參考的是 'truncate'

01:44.560 --> 01:49.280
只要糾正這個小失誤，就可以解決此問題了
既可以修正範本中參考的名字，也可以修改 Pipe 裝飾器中的 name

01:49.280 --> 01:54.560
修復了此問題，我們還要指出一個最佳實踐

01:54.560 --> 01:58.480
以防再發生當初那樣的錯誤

01:58.480 --> 02:02.000
當你在 Angular 中建立一個管道時
它會遵循一個約定：管道的名字和定義它的檔名相匹配

02:02.000 --> 02:06.800
注意，這裡的管道名是 'truncate'，而其檔名是 'truncate.pipe.ts'

02:06.800 --> 02:13.680
當使用 Angular CLI 時，會自動應用此最佳實踐

02:13.680 --> 02:18.480
現在，我們已經知道如何解決本錯誤了
讓我們在快速過一遍 Angular 中管道的工作原理

02:18.480 --> 02:23.120
以瞭解當初為什麼會發生本錯誤
在 Angular 中，管道的角色是在範本中對值進行轉換

02:23.120 --> 02:27.840
與常規的方法呼叫不同，Angular 可以對管道進行最佳化

02:27.840 --> 02:33.440
當你有一個表示式或值，並且需要把它重新格式化為金額或其它格式時，它會非常有用

02:39.280 --> 02:43.200
而且你也可以建立自己的管道集
當 Angular 在範本表示式中遇到管道符號（|）時

02:43.200 --> 02:48.320
它會使用管道名來決定哪個類擁有所要執行的函式

02:48.320 --> 02:53.760
如果提供了無效的名字，Angular 就沒辦法找到對應的函式

02:53.760 --> 02:58.720
而當有效時，它就會根據管道的名字匹配到管道類
該類實現了管道的 transform 函式

02:58.720 --> 03:03.840
這個 transform 函式接受範本中提供的值以及額外引數

03:03.840 --> 03:09.200
然後返回一個新的值，新值會顯示給終端使用者

03:09.200 --> 03:12.960
我們來回顧一下
當你遇到 PipeNameNotFoundError 時

03:12.960 --> 03:17.120
它意味著範本中參考的某個管道或者沒有匯入過

03:17.120 --> 03:21.360
或者沒有被正確命名
要解決此問題，請先驗證此管道已經匯入了或者

03:21.360 --> 03:26.480
在適當的 ngModule 中宣告過

03:26.480 --> 03:31.040
如果問題仍然存在，請檢查管道本身的定義
以驗證其名字是否匹配了範本中的名字

03:31.040 --> 03:36.240
欲知詳情和範例，請閱讀Angular官方文件
