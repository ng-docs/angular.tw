WEBVTT
Kind: subtitles
Language: zh-TW

00:00.512 --> 00:02.560
Export of name directive not found

00:02.816 --> 00:11.520
當你在範本中參考某個未定義過、未匯入過的指令
或請求某個未宣告過的匯出名稱時可能會遇到本錯誤

00:11.776 --> 00:14.336
我們來看一個簡單的錯誤重現和解決方案

00:14.848 --> 00:18.944
然後我們會仔細研究下 Angular 模組，來更深刻的理解這個問題

00:19.712 --> 00:22.272
我們開始除錯。先從瀏覽器中發現此錯誤

00:22.784 --> 00:26.368
並且執行 Angular 編譯器的終端視窗也會輸出此錯誤

00:26.624 --> 00:29.440
它會指引你找到存在未知參考的範本

00:29.952 --> 00:36.352
注意，IDE 是如何提醒我們的，它標出一個簡單的拼寫錯誤作為本錯誤的原因

00:36.608 --> 00:41.728
最可能的原因是那個 ngModule 中尚未匯出此指令

00:42.496 --> 00:46.848
在這個例子中，所參考的 ngForm 是由 Angular Forms 模組匯出的

00:47.616 --> 00:51.456
所以，我們可以透過把它匯入 AppModule 來解決此問題

00:51.712 --> 00:54.016
把 forms 模組新增到 imports 陣列中

00:54.784 --> 00:55.296
儲存此檔案

00:55.808 --> 00:59.136
然後注意警告資訊和元件範本中的下劃線都消失了

00:59.392 --> 01:02.464
這是因為 Angular 無法瞭解此指令

01:02.720 --> 01:04.512
除非它被匯入了此 ngModule 中

01:05.024 --> 01:06.048
如果仍然沒有解決

01:06.304 --> 01:07.840
首先嚐試重啟你的本地開發環境

01:08.608 --> 01:09.376
如果仍然有此錯誤

01:09.888 --> 01:12.192
請再次檢查你匯入了正確的 ngModule

01:12.704 --> 01:13.472
比如

01:13.728 --> 01:16.544
你可以在 Angular 官方文件中搜索這個指令名

01:17.056 --> 01:18.848
該指令的文件

01:19.104 --> 01:21.664
會告訴我們要匯入的準確 ngModule

01:21.920 --> 01:28.832
另一種情況下你也可能遇到此錯誤，也就是當你試圖在範本中使用你自己的自訂指令時

01:29.344 --> 01:30.368
我們來看看

01:30.624 --> 01:33.952
元件和指令都位於同一個 ngModule 中的情況

01:34.464 --> 01:36.768
該指令具有一個選擇器

01:37.280 --> 01:40.864
不過，如果我們嘗試把此指令賦值給一個範本變數

01:46.496 --> 01:49.312
為了把某個指令用作範本變數

01:49.568 --> 01:53.664
我們需要在指令裝飾器中用 exportAs 選項定義一個名字

01:53.920 --> 01:57.248
一旦定義了匯出名，本錯誤就消失了

01:57.504 --> 02:03.648
這裡的要點是，當要把某個指令用作範本變數時，它必須具有一個匯出名

02:04.672 --> 02:09.792
現在，我們已經知道了如何除錯此問題，接下來讓我們深入瞭解下 Angular 模組與指令

02:10.048 --> 02:11.840
以理解以前為什麼會出現此錯誤

02:12.608 --> 02:14.400
當你在 Angular 中建立 ngModule 時

02:14.656 --> 02:16.448
你會宣告元件和指令

02:16.704 --> 02:18.752
它們只會在此模組內部（私有）使用

02:19.520 --> 02:21.824
但是在某些情況下，你在這裡定義的元件和指令

02:22.080 --> 02:24.384
可能要在此模組外部使用

02:25.152 --> 02:28.480
你透過把它們新增到 exports 中，來把它們公開

02:29.248 --> 02:32.064
這就是我們在ngModule之間共享元件與指令的方式

02:32.832 --> 02:37.952
但是要記住，當使用指令時，你還要考慮要如何在範本中消費它們

02:38.720 --> 02:39.232
比如

02:39.488 --> 02:40.768
我們有一個指令

02:41.280 --> 02:42.048
一個名為 NgForm 的類

02:43.072 --> 02:46.912
如果其目標是作為元素的 Property 或 Attribute 使用

02:47.680 --> 02:52.288
我們就要定義成類似 class 或 attribute CSS 選擇器的選擇器

02:52.800 --> 02:56.384
該指令會在範本中遇到此選擇器時被例項化

02:56.896 --> 02:57.408
不過

02:57.664 --> 03:02.272
如果目標是把該指令用作範本變數，那麼這種方式就不行

03:02.784 --> 03:05.088
所以，我們要設定一個 exportAs 名稱

03:05.344 --> 03:09.952
以便讓 Angular 瞭解這個名字，從而把該指令賦值給某個範本變數

03:10.976 --> 03:11.744
我們來回顧一下

03:12.000 --> 03:15.584
當你遇到 Export of name directive not found 錯誤時

03:16.096 --> 03:18.912
可以這樣除錯：找出參考此指令的範本

03:19.168 --> 03:21.984
然後決定要匯入哪個 ngModule

03:22.240 --> 03:23.776
一旦找到了這個模組

03:24.032 --> 03:26.336
就把它匯入你所在的 ngModule 中

03:27.104 --> 03:30.176
如果該問題與 ngModule 匯入無關

03:30.432 --> 03:33.504
檢查該指令的裝飾器中是否具有 exportAs 屬性

03:33.760 --> 03:36.576
並且在宣告範本變數時正確設定了它

03:37.088 --> 03:40.416
欲知詳情和範例，請閱讀Angular官方文件
