WEBVTT
Kind: subtitles
Language: zh-TW

00:00.400 --> 00:05.360
Can't bind to prop name because it isn't a known property of node.

00:05.360 --> 00:10.160
你可能在試圖繫結某元素的 Property 或 Attribute，而

00:10.160 --> 00:15.600
這可能出於多種原因。如果它是 Angular 元件

00:15.600 --> 00:20.640
它可能在元件定義中忘了寫 @Input 裝飾器。但是如果它是原生 HTML 元素

00:20.640 --> 00:25.520
它可能只是因為該屬性不存在。或者，如果你在使用自訂元素或 Web Components

00:25.520 --> 00:30.080
它可能需要進行額外的配置，以繫結到自訂屬性

00:30.080 --> 00:35.520
讓我們先快速過一遍 Angular 屬性繫結的工作原理

00:35.520 --> 00:39.600
然後，我們會檢查一些錯誤重現並解決它們

00:39.600 --> 00:44.000
在 Angular 範本中，我們可以透過把屬性包裹在方括號中來繫結它

00:44.000 --> 00:49.040
並且在其右側提供表示式。當表示式的值發生變化時，被繫結的屬性

00:49.040 --> 00:54.640
及其對應的 UI 都會自動更新
通常，你會在使用自訂元件時會遇到未知屬性的問題

00:54.640 --> 00:59.600
在我們的程式碼中，我們有一個帶有 name 屬性的 ItemComponent

00:59.600 --> 01:05.520
然後，在 AppComponent 範本中，我們參考了 ItemComponent

01:05.520 --> 01:10.800
並試圖繫結到其 name 屬性
但現在，Angular 告訴我們它無法繫結到 name

01:10.800 --> 01:15.920
因為它不是一個 'app-item' 的已知屬性
我們可以透過回到 ItemComponent，並且

01:15.920 --> 01:22.080
為 name 屬性新增 @Input 裝飾器來解決此問題

01:22.080 --> 01:28.000
這個 @Input 裝飾器允許資料進行繫結或者說透過範本從元件的外部傳入

01:28.000 --> 01:32.960
換句話說，如果某個屬性沒有被指定為 @Input，它就不能

01:32.960 --> 01:37.760
在範本中使用方括號進行資料繫結
另請注意，你可以給 @Input 裝飾器傳入引數

01:37.760 --> 01:42.880
以改變該屬性的名字

01:42.880 --> 01:48.080
這可以讓你能在範本中使用與其元件內部屬性名不同的名字

01:48.080 --> 01:53.440
另外，你的自訂元件還可能出現與原生 HTML 元素相關的問題
在預設配置下

01:53.440 --> 01:58.240
你只能繫結 Angular 編譯器認識的屬性

01:58.240 --> 02:03.600
當使用原生 HTML 元素時，它認識來自 HTML 規範的 Property 和 Attribute

02:03.600 --> 02:09.120
比如，對於 Input 元素，我們可以繫結到該元素的 value 屬性

02:09.120 --> 02:13.840
這時不會發生錯誤，因為 value 是 input 的一個有效屬性

02:13.840 --> 02:18.640
但如果我們試圖繫結到一個不存在的屬性，Angular 就會丟擲錯誤

02:18.640 --> 02:23.280
雖然並沒有什麼好的理由繫結到原生 HTML 元素中不存在的屬性

02:23.280 --> 02:29.440
但是仍然可以告訴 Angular 在某個 ngModule 中忽略這個錯誤

02:29.440 --> 02:36.000
新增到 ngModule 裝飾器中的 schemas 陣列中

02:36.000 --> 02:41.360
注意，當我們修改這個 schema 的時候，錯誤消失了，但是要記住

02:41.360 --> 02:46.240
這項技巧只應該作為不得已的手段使用，因為它會忽略所有此類錯誤

02:46.240 --> 02:51.920
而這會在未來給我們帶來未捕獲的問題和不穩定的程式碼

02:51.920 --> 02:56.480
另一個你可能遇到此問題的地方是使用 Web Components 或自訂元素時

02:56.480 --> 03:02.000
當使用自訂元素時，繫結到一個 Angular 不認識的屬性是完全可以的

03:02.000 --> 03:07.200
我們可以用一種更保守的方式告訴 Angular 忽略本錯誤
那就是在 ngModule 中使用 CUSTOM_ELEMENTS_SCHEMA

03:07.200 --> 03:13.760
這會告訴 Angular 在自訂元素上忽略其已知屬性的錯誤

03:13.760 --> 03:17.840
就像它們是你自己的 Angular 元件或第三方 Web 元件一樣

03:18.480 --> 03:22.880
它會允許你在自訂元素上繫結任意屬性，但是當

03:22.880 --> 03:28.000
在原生 HTML 元素上繫結到不存在的屬性時仍然會報錯

03:28.000 --> 03:32.800
我們來回顧一下
當你遇到 'Can't bind to prop name since it isn't a known property of node'

03:32.800 --> 03:37.600
錯誤時，你首先要驗證一下此屬性名對 Angular 是已知的

03:37.600 --> 03:43.280
原生 HTML 元素只應該使用基於現行 HTML 規範的屬性

03:43.280 --> 03:48.400
當使用自訂元素時，你可以透過在 ngModule 中
使用 CUSTOM_ELEMENTS_SCHEMA 來忽略本錯誤

03:48.400 --> 03:54.080
作為不得已的手段，你可以使用 NO_ERRORS_SCHEMA 來忽略所有此類錯誤

03:54.080 --> 03:58.960
欲知詳情和範例，請參閱 Angular 官方文件的屬性繫結指南
